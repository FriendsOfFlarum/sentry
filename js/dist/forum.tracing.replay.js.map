{"version":3,"file":"forum.tracing.replay.js","mappings":";0BAAA,IAAIA,EAAUC,EAAAA,KAAAA,QACd,SAASC,IACP,aACAC,EAAOC,QAAUF,EAAsB,WACrC,OAAOG,CACT,EAAGF,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,QACxE,IAAIG,EACFF,EAAI,CAAC,EACLG,EAAIC,OAAOC,UACXC,EAAIH,EAAEI,eACNC,EAAI,mBAAqBC,OAASA,OAAS,CAAC,EAC5CC,EAAIF,EAAEG,UAAY,aAClBC,EAAIJ,EAAEK,eAAiB,kBACvBC,EAAIN,EAAEO,aAAe,gBACvB,SAASC,EAAEd,EAAGF,EAAGG,EAAGG,GAClB,OAAOF,OAAOa,eAAef,EAAGF,EAAG,CACjCkB,MAAOf,EACPgB,YAAab,EACbc,cAAed,EACfe,UAAWf,GAEf,CACA,IACEU,EAAE,CAAC,EAAG,GACR,CAAE,MAAOd,GACPc,EAAI,SAAWd,EAAGF,EAAGG,GACnB,OAAOD,EAAEF,GAAKG,CAChB,CACF,CACA,SAASmB,EAAEtB,EAAGG,EAAGG,EAAGE,GAClB,IAAIE,EAAIP,GAAKA,EAAEE,qBAAqBkB,EAAYpB,EAAIoB,EAClDX,EAAIR,OAAOoB,OAAOd,EAAEL,WACtB,OAAOW,EAAEJ,EAAG,UAAW,SAAUZ,EAAGG,EAAGG,GACrC,IAAIE,EAAI,EACR,OAAO,SAAUE,EAAGE,GAClB,GAAI,IAAMJ,EAAG,MAAMiB,MAAM,gCACzB,GAAI,IAAMjB,EAAG,CACX,GAAI,UAAYE,EAAG,MAAME,EACzB,MAAO,CACLM,MAAOhB,EACPwB,MAAM,EAEV,CACA,IAAKpB,EAAEqB,OAASjB,EAAGJ,EAAEsB,IAAMhB,IAAK,CAC9B,IAAIE,EAAIR,EAAEuB,SACV,GAAIf,EAAG,CACL,IAAIE,EAAIc,EAAEhB,EAAGR,GACb,GAAIU,EAAG,CACL,GAAIA,IAAMe,EAAG,SACb,OAAOf,CACT,CACF,CACA,GAAI,SAAWV,EAAEqB,OAAQrB,EAAE0B,KAAO1B,EAAE2B,MAAQ3B,EAAEsB,SAAS,GAAI,UAAYtB,EAAEqB,OAAQ,CAC/E,GAAI,IAAMnB,EAAG,MAAMA,EAAI,EAAGF,EAAEsB,IAC5BtB,EAAE4B,kBAAkB5B,EAAEsB,IACxB,KAAO,WAAatB,EAAEqB,QAAUrB,EAAE6B,OAAO,SAAU7B,EAAEsB,KACrDpB,EAAI,EACJ,IAAIc,EAAIc,EAAEpC,EAAGG,EAAGG,GAChB,GAAI,WAAagB,EAAEe,KAAM,CACvB,GAAI7B,EAAIF,EAAEoB,KAAO,EAAI,EAAGJ,EAAEM,MAAQG,EAAG,SACrC,MAAO,CACLb,MAAOI,EAAEM,IACTF,KAAMpB,EAAEoB,KAEZ,CACA,UAAYJ,EAAEe,OAAS7B,EAAI,EAAGF,EAAEqB,OAAS,QAASrB,EAAEsB,IAAMN,EAAEM,IAC9D,CACF,CACF,CApCuB,CAoCrB5B,EAAGM,EAAG,IAAIgC,EAAQ9B,GAAK,MAAM,GAAKI,CACtC,CACA,SAASwB,EAAElC,EAAGF,EAAGG,GACf,IACE,MAAO,CACLkC,KAAM,SACNT,IAAK1B,EAAEqC,KAAKvC,EAAGG,GAEnB,CAAE,MAAOD,GACP,MAAO,CACLmC,KAAM,QACNT,IAAK1B,EAET,CACF,CACAF,EAAEwC,KAAOlB,EACT,IAAIS,EAAI,CAAC,EACT,SAASR,IAAa,CACtB,SAASkB,IAAqB,CAC9B,SAASC,IAA8B,CACvC,IAAIC,EAAI,CAAC,EACT3B,EAAE2B,EAAGjC,GAAG,WACN,OAAOkC,IACT,IACA,IAAIC,EAAIzC,OAAO0C,eACbC,EAAIF,GAAKA,EAAEA,EAAEG,EAAE,MACjBD,GAAKA,IAAM5C,GAAKG,EAAEiC,KAAKQ,EAAGrC,KAAOiC,EAAII,GACrC,IAAIE,EAAIP,EAA2BrC,UAAYkB,EAAUlB,UAAYD,OAAOoB,OAAOmB,GACnF,SAASO,EAAEhD,GACT,CAAC,OAAQ,QAAS,UAAUiD,SAAQ,SAAUnD,GAC5CgB,EAAEd,EAAGF,GAAG,SAAUE,GAChB,OAAO0C,KAAKQ,QAAQpD,EAAGE,EACzB,GACF,GACF,CACA,SAASmD,EAAcnD,EAAGF,GACxB,SAASG,EAAEK,EAAGE,EAAGE,EAAGE,GAClB,IAAIE,EAAIoB,EAAElC,EAAEM,GAAIN,EAAGQ,GACnB,GAAI,UAAYM,EAAEqB,KAAM,CACtB,IAAIf,EAAIN,EAAEY,IACRG,EAAIT,EAAEJ,MACR,OAAOa,GAAK,UAAYpC,EAAQoC,IAAMzB,EAAEiC,KAAKR,EAAG,WAAa/B,EAAEsD,QAAQvB,EAAEwB,SAASC,MAAK,SAAUtD,GAC/FC,EAAE,OAAQD,EAAGU,EAAGE,EAClB,IAAG,SAAUZ,GACXC,EAAE,QAASD,EAAGU,EAAGE,EACnB,IAAKd,EAAEsD,QAAQvB,GAAGyB,MAAK,SAAUtD,GAC/BoB,EAAEJ,MAAQhB,EAAGU,EAAEU,EACjB,IAAG,SAAUpB,GACX,OAAOC,EAAE,QAASD,EAAGU,EAAGE,EAC1B,GACF,CACAA,EAAEE,EAAEY,IACN,CACA,IAAIpB,EACJQ,EAAE4B,KAAM,WAAW,SAAU1C,EAAGI,GAC9B,SAASI,IACP,OAAO,IAAIV,GAAE,SAAUA,EAAGQ,GACxBL,EAAED,EAAGI,EAAGN,EAAGQ,EACb,GACF,CACA,OAAOA,EAAIA,EAAIA,EAAEgD,KAAK9C,EAAGA,GAAKA,GAChC,IAAG,EACL,CACA,SAASoB,EAAE9B,EAAGG,GACZ,IAAIG,EAAIH,EAAEwB,OACRnB,EAAIR,EAAEU,EAAEJ,GACV,GAAIE,IAAMN,EAAG,OAAOC,EAAE0B,SAAW,KAAM,UAAYvB,GAAKN,EAAEU,EAAU,SAAMP,EAAEwB,OAAS,SAAUxB,EAAEyB,IAAM1B,EAAG4B,EAAE9B,EAAGG,GAAI,UAAYA,EAAEwB,SAAW,WAAarB,IAAMH,EAAEwB,OAAS,QAASxB,EAAEyB,IAAM,IAAI6B,UAAU,oCAAsCnD,EAAI,aAAcyB,EACjQ,IAAIrB,EAAI0B,EAAE5B,EAAGR,EAAEU,EAAGP,EAAEyB,KACpB,GAAI,UAAYlB,EAAE2B,KAAM,OAAOlC,EAAEwB,OAAS,QAASxB,EAAEyB,IAAMlB,EAAEkB,IAAKzB,EAAE0B,SAAW,KAAME,EACrF,IAAInB,EAAIF,EAAEkB,IACV,OAAOhB,EAAIA,EAAEc,MAAQvB,EAAEH,EAAEA,GAAKY,EAAEM,MAAOf,EAAEuD,KAAO1D,EAAEM,EAAG,WAAaH,EAAEwB,SAAWxB,EAAEwB,OAAS,OAAQxB,EAAEyB,IAAM1B,GAAIC,EAAE0B,SAAW,KAAME,GAAKnB,GAAKT,EAAEwB,OAAS,QAASxB,EAAEyB,IAAM,IAAI6B,UAAU,oCAAqCtD,EAAE0B,SAAW,KAAME,EAC/O,CACA,SAAS4B,EAAEzD,GACT0C,KAAKgB,WAAWC,KAAK3D,EACvB,CACA,SAAS4D,EAAE9D,GACT,IAAIG,EAAIH,EAAE,IAAM,CAAC,EACjBG,EAAEkC,KAAO,SAAUlC,EAAEyB,IAAM1B,EAAGF,EAAE,GAAKG,CACvC,CACA,SAASmC,EAAQpC,GACf0C,KAAKgB,WAAa,CAAC,EAAE,IAAK1D,EAAEiD,QAAQQ,EAAGf,MAAOA,KAAKmB,OAAM,EAC3D,CACA,SAASf,EAAEhD,GACT,GAAI,MAAQA,EAAG,CACb,IAAIG,EAAIH,EAAEU,GACV,GAAIP,EAAG,OAAOA,EAAEoC,KAAKvC,GACrB,GAAI,mBAAqBA,EAAE0D,KAAM,OAAO1D,EACxC,IAAKgE,MAAMhE,EAAEiE,QAAS,CACpB,IAAIzD,GAAK,EACPI,EAAI,SAAST,IACX,OAASK,EAAIR,EAAEiE,QAAS,GAAI3D,EAAEiC,KAAKvC,EAAGQ,GAAI,OAAOL,EAAEe,MAAQlB,EAAEQ,GAAIL,EAAEuB,MAAO,EAAIvB,EAC9E,OAAOA,EAAEe,MAAQhB,EAAGC,EAAEuB,MAAO,EAAIvB,CACnC,EACF,OAAOS,EAAE8C,KAAO9C,CAClB,CACF,CACA,MAAM,IAAI6C,UAAU9D,EAAQK,GAAK,mBACnC,CACA,OAAOyC,EAAkBpC,UAAYqC,EAA4B1B,EAAEiC,EAAG,cAAeP,GAA6B1B,EAAE0B,EAA4B,cAAeD,GAAoBA,EAAkByB,YAAclD,EAAE0B,EAA4B5B,EAAG,qBAAsBd,EAAEmE,oBAAsB,SAAUjE,GAC1S,IAAIF,EAAI,mBAAqBE,GAAKA,EAAEkE,YACpC,QAASpE,IAAMA,IAAMyC,GAAqB,uBAAyBzC,EAAEkE,aAAelE,EAAEqE,MACxF,EAAGrE,EAAEsE,KAAO,SAAUpE,GACpB,OAAOE,OAAOmE,eAAiBnE,OAAOmE,eAAerE,EAAGwC,IAA+BxC,EAAEsE,UAAY9B,EAA4B1B,EAAEd,EAAGY,EAAG,sBAAuBZ,EAAEG,UAAYD,OAAOoB,OAAOyB,GAAI/C,CAClM,EAAGF,EAAEyE,MAAQ,SAAUvE,GACrB,MAAO,CACLqD,QAASrD,EAEb,EAAGgD,EAAEG,EAAchD,WAAYW,EAAEqC,EAAchD,UAAWO,GAAG,WAC3D,OAAOgC,IACT,IAAI5C,EAAEqD,cAAgBA,EAAerD,EAAE0E,MAAQ,SAAUxE,EAAGC,EAAGG,EAAGE,EAAGE,QACnE,IAAWA,IAAMA,EAAIiE,SACrB,IAAI/D,EAAI,IAAIyC,EAAc/B,EAAEpB,EAAGC,EAAGG,EAAGE,GAAIE,GACzC,OAAOV,EAAEmE,oBAAoBhE,GAAKS,EAAIA,EAAE8C,OAAOF,MAAK,SAAUtD,GAC5D,OAAOA,EAAEwB,KAAOxB,EAAEgB,MAAQN,EAAE8C,MAC9B,GACF,EAAGR,EAAED,GAAIjC,EAAEiC,EAAGnC,EAAG,aAAcE,EAAEiC,EAAGvC,GAAG,WACrC,OAAOkC,IACT,IAAI5B,EAAEiC,EAAG,YAAY,WACnB,MAAO,oBACT,IAAIjD,EAAE4E,KAAO,SAAU1E,GACrB,IAAIF,EAAII,OAAOF,GACbC,EAAI,GACN,IAAK,IAAIG,KAAKN,EAAGG,EAAE0E,QAAQvE,GAC3B,OAAO,SAASJ,IACd,KAAOC,EAAE8D,QAAS,IAAK3D,EAAIH,EAAE2E,SAAU9E,EAAG,OAAOE,EAAEgB,MAAQZ,EAAGJ,EAAEwB,MAAO,EAAIxB,EAC3E,OAAOA,EAAEwB,MAAO,EAAIxB,CACtB,CACF,EAAGF,EAAE+E,OAAS/B,EAAGV,EAAQjC,UAAY,CACnC+D,YAAa9B,EACbyB,MAAO,SAAe/D,GACpB,GAAI4C,KAAKoC,KAAOpC,KAAKc,KAAO,EAAGd,KAAKZ,KAAOY,KAAKX,MAAQ/B,EAAG0C,KAAKlB,MAAO,EAAIkB,KAAKf,SAAW,KAAMe,KAAKjB,OAAS,OAAQiB,KAAKhB,IAAM1B,EAAG0C,KAAKgB,WAAWT,QAAQW,IAAK9D,EAAG,IAAK,IAAIG,KAAKyC,KAAM,MAAQzC,EAAE8E,OAAO,IAAM3E,EAAEiC,KAAKK,KAAMzC,KAAO6D,OAAO7D,EAAE+E,MAAM,MAAQtC,KAAKzC,GAAKD,EACvQ,EACAiF,KAAM,WACJvC,KAAKlB,MAAO,EACZ,IAAIxB,EAAI0C,KAAKgB,WAAW,GAAG,GAC3B,GAAI,UAAY1D,EAAEmC,KAAM,MAAMnC,EAAE0B,IAChC,OAAOgB,KAAKwC,IACd,EACAlD,kBAAmB,SAA2BlC,GAC5C,GAAI4C,KAAKlB,KAAM,MAAM1B,EACrB,IAAIG,EAAIyC,KACR,SAAStC,EAAEJ,GACTU,EAAEyB,KAAO,QAASzB,EAAEgB,IAAM5B,EAAGG,EAAEuD,KAAOxD,CACxC,CACA,IAAK,IAAIM,EAAIL,EAAEyD,WAAWK,OAAS,EAAGzD,GAAK,IAAKA,EAAG,CACjD,IAAIE,EAAIkC,KAAKgB,WAAWpD,GACtBI,EAAIF,EAAE,GACNI,EAAI8B,KAAKoC,KACThE,EAAIN,EAAE,GACNY,EAAIZ,EAAE,GACR,IAAK,IAAMA,EAAE,GAAI,OAAOJ,EAAE,QAAQ,EAClC,IAAKU,IAAMM,EAAG,MAAMG,MAAM,0CAC1B,GAAI,MAAQf,EAAE,IAAMA,EAAE,IAAMI,EAAG,CAC7B,GAAIA,EAAIE,EAAG,OAAO4B,KAAKjB,OAAS,OAAQiB,KAAKhB,IAAM1B,EAAGI,EAAEU,IAAI,EAC5D,GAAIF,EAAIQ,EAAG,OAAOhB,EAAEgB,IAAI,CAC1B,CACF,CACF,EACAa,OAAQ,SAAgBjC,EAAGF,GACzB,IAAK,IAAIG,EAAIyC,KAAKgB,WAAWK,OAAS,EAAG9D,GAAK,IAAKA,EAAG,CACpD,IAAIG,EAAIsC,KAAKgB,WAAWzD,GACxB,GAAIG,EAAE,IAAM,GAAKA,EAAE,IAAMsC,KAAKoC,MAAQpC,KAAKoC,KAAO1E,EAAE,GAAI,CACtD,IAAIE,EAAIF,EACR,KACF,CACF,CACAE,IAAM,UAAYN,GAAK,aAAeA,IAAMM,EAAE,IAAMR,GAAKA,GAAKQ,EAAE,KAAOA,EAAI,MAC3E,IAAIE,EAAIF,EAAIA,EAAE,GAAK,CAAC,EACpB,OAAOE,EAAE2B,KAAOnC,EAAGQ,EAAEkB,IAAM5B,EAAGQ,GAAKoC,KAAKjB,OAAS,OAAQiB,KAAKc,KAAOlD,EAAE,GAAIuB,GAAKa,KAAKyC,SAAS3E,EAChG,EACA2E,SAAU,SAAkBnF,EAAGF,GAC7B,GAAI,UAAYE,EAAEmC,KAAM,MAAMnC,EAAE0B,IAChC,MAAO,UAAY1B,EAAEmC,MAAQ,aAAenC,EAAEmC,KAAOO,KAAKc,KAAOxD,EAAE0B,IAAM,WAAa1B,EAAEmC,MAAQO,KAAKwC,KAAOxC,KAAKhB,IAAM1B,EAAE0B,IAAKgB,KAAKjB,OAAS,SAAUiB,KAAKc,KAAO,OAAS,WAAaxD,EAAEmC,MAAQrC,IAAM4C,KAAKc,KAAO1D,GAAI+B,CAC1N,EACAuD,OAAQ,SAAgBpF,GACtB,IAAK,IAAIF,EAAI4C,KAAKgB,WAAWK,OAAS,EAAGjE,GAAK,IAAKA,EAAG,CACpD,IAAIG,EAAIyC,KAAKgB,WAAW5D,GACxB,GAAIG,EAAE,KAAOD,EAAG,OAAO0C,KAAKyC,SAASlF,EAAE,GAAIA,EAAE,IAAK2D,EAAE3D,GAAI4B,CAC1D,CACF,EACA,MAAS,SAAgB7B,GACvB,IAAK,IAAIF,EAAI4C,KAAKgB,WAAWK,OAAS,EAAGjE,GAAK,IAAKA,EAAG,CACpD,IAAIG,EAAIyC,KAAKgB,WAAW5D,GACxB,GAAIG,EAAE,KAAOD,EAAG,CACd,IAAII,EAAIH,EAAE,GACV,GAAI,UAAYG,EAAE+B,KAAM,CACtB,IAAI7B,EAAIF,EAAEsB,IACVkC,EAAE3D,EACJ,CACA,OAAOK,CACT,CACF,CACA,MAAMiB,MAAM,wBACd,EACA8D,cAAe,SAAuBvF,EAAGG,EAAGG,GAC1C,OAAOsC,KAAKf,SAAW,CACrBnB,EAAGsC,EAAEhD,GACLA,EAAGG,EACHG,EAAGA,GACF,SAAWsC,KAAKjB,SAAWiB,KAAKhB,IAAM1B,GAAI6B,CAC/C,GACC/B,CACL,CACAF,EAAOC,QAAUF,EAAqBC,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,kECnQpG,SAASyF,IAGd,QACGC,EAAAA,EAAAA,MACgF,qBAAjFrF,OAAOC,UAAUqF,SAASnD,KAAwB,oBAAZoD,QAA0BA,QAAU,EAE9E,2BCjBA,IAAIC,EAAUhG,EAAQ,GAARA,GACdE,EAAOC,QAAU6F,EAGjB,IACEC,mBAAqBD,CACvB,CAAE,MAAOE,GACmB,iBAAfC,WACTA,WAAWF,mBAAqBD,EAEhCI,SAAS,IAAK,yBAAdA,CAAwCJ,EAE5C,WCdA,SAASjG,EAAQa,GAGf,OAAOV,EAAOC,QAAUJ,EAAU,mBAAqBc,QAAU,iBAAmBA,OAAOE,SAAW,SAAUH,GAC9G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBC,QAAUD,EAAE4D,cAAgB3D,QAAUD,IAAMC,OAAOJ,UAAY,gBAAkBG,CACpH,EAAGV,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,QAASJ,EAAQa,EAC3F,CACAV,EAAOC,QAAUJ,EAASG,EAAOC,QAAQE,YAAa,EAAMH,EAAOC,QAAiB,QAAID,EAAOC,oCCexF,SAAS0F,IACd,MAA4C,oBAA9BQ,6BAA+CA,yBAC/D,CAKO,SAASC,IAEd,MAAO,KACT,4BCjCIC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAavG,QAGrB,IAAID,EAASqG,EAAyBE,GAAY,CACjDG,GAAIH,EACJI,QAAQ,EACR1G,QAAS,CAAC,GAUX,OANA2G,EAAoBL,GAAUvG,EAAQA,EAAOC,QAASqG,GAGtDtG,EAAO2G,QAAS,EAGT3G,EAAOC,OACf,CCxBAqG,EAAoB9F,EAAKR,IACxB,IAAI6G,EAAS7G,GAAUA,EAAOG,WAC7B,IAAOH,EAAiB,QACxB,IAAM,EAEP,OADAsG,EAAoBtE,EAAE6E,EAAQ,CAAE/F,EAAG+F,IAC5BA,CAAM,ECLdP,EAAoBtE,EAAI,CAAC/B,EAAS6G,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoB5F,EAAEoG,EAAYC,KAAST,EAAoB5F,EAAET,EAAS8G,IAC5EzG,OAAOa,eAAelB,EAAS8G,EAAK,CAAE1F,YAAY,EAAM2F,IAAKF,EAAWC,IAE1E,ECNDT,EAAoBlD,EAAI,WACvB,GAA0B,iBAAf6C,WAAyB,OAAOA,WAC3C,IACC,OAAOnD,MAAQ,IAAIoD,SAAS,cAAb,EAChB,CAAE,MAAO7F,GACR,GAAsB,iBAAX4G,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBX,EAAoBY,IAAOlH,KAC1BA,EAASM,OAAOoB,OAAO1B,IACXmH,WAAUnH,EAAOmH,SAAW,IACxC7G,OAAOa,eAAenB,EAAQ,UAAW,CACxCqB,YAAY,EACZ+F,IAAK,KACJ,MAAM,IAAIzF,MAAM,0FAA4F3B,EAAO0G,GAAG,IAGjH1G,GCTRsG,EAAoB5F,EAAI,CAAC2G,EAAKC,IAAUhH,OAAOC,UAAUE,eAAegC,KAAK4E,EAAKC,sBCAlF,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,0BC0FxD,SAASC,EAAYL,GACnB,OAAOA,GAAOA,EAAIM,MAAQA,KAAON,OAAMZ,CACzC,CAGO,IAAMmB,EACW,iBAAd3B,YAA0ByB,EAAYzB,aAE5B,iBAAVgB,QAAsBS,EAAYT,SAC1B,iBAARY,MAAoBH,EAAYG,OACtB,iBAAVC,EAAAA,GAAsBJ,EAAYI,EAAAA,IACzC,WACC,OAAOhF,IACX,CAFG,IAGD,CAAC,EAKI,SAASiF,IACd,OAAOH,CACT,CAaO,SAASI,EAAsBzD,EAA0C0D,EAAkBZ,GAChG,IAAMa,EAAOb,GAAOO,EACdO,EAAcD,EAAIC,WAAaD,EAAIC,YAAc,CAAC,EAExD,OADkBA,EAAW5D,KAAU4D,EAAW5D,GAAQ0D,IAE5D,CC3HA,IAEaG,EAA0C,CACrD,QACA,OACA,OACA,QACA,MACA,SACA,SAOWC,EAGT,CAAC,EAeE,SAASC,EAAkBC,GAChC,KAAM,eACJ,OAAOA,IAGT,IAAMC,EAAUZ,EAAWY,QACrBC,EAA8C,CAAC,EAE/CC,EAAgBpI,OAAOwE,KAAKuD,GAGlCK,EAAcrF,SAAQ,SAAAsF,GACpB,IAAMC,EAAwBP,EAAuBM,GACrDF,EAAaE,GAASH,EAAQG,GAC9BH,EAAQG,GAASC,CACrB,IAEE,IACE,OAAOL,GACX,SAEIG,EAAcrF,SAAQ,SAAAsF,GACpBH,EAAQG,GAASF,EAAaE,EACpC,GACA,CACA,CAkCsC,IA/BhCE,EACEC,EA8B8BA,GA/BhCD,GAAU,EACRC,EAA0B,CAC9BC,OAAQ,WACNF,GAAU,CAChB,EACIG,QAAS,WACPH,GAAU,CAChB,EACII,UAAW,WAAF,OAAQJ,CAAO,GAeUT,EAAA/E,SAAA,SAAAkB,GACAuE,EAAAvE,GAAA,YACA,IAGAuE,GChGtC,SAASI,IACP,OAAOA,EAAW5I,OAAO6I,OAAS7I,OAAO6I,OAAOC,OAAS,SAAU5I,GACjE,IAAK,IAAIH,EAAI,EAAGA,EAAIgJ,UAAUlF,OAAQ9D,IAAK,CACzC,IAAID,EAAIiJ,UAAUhJ,GAClB,IAAK,IAAIH,KAAKE,GAAG,CAAG,GAAEK,eAAegC,KAAKrC,EAAGF,KAAOM,EAAEN,GAAKE,EAAEF,GAC/D,CACA,OAAOM,CACT,EAAG0I,EAASI,MAAM,KAAMD,UAC1B,CCFA,IAAME,EAAiBjJ,OAAOC,UAAUqF,SASjC,SAAS4D,EAAQC,GACtB,OAAQF,EAAe9G,KAAKgH,IAC1B,IAAK,iBACL,IAAK,qBACL,IAAK,wBACH,OAAO,EACT,QACE,OAAOC,EAAaD,EAAK9H,OAE/B,CAQA,SAASgI,EAAUF,EAAcG,GAC/B,OAAOL,EAAe9G,KAAKgH,KAAS,WAAWG,EAAS,GAC1D,CASO,SAASC,EAAaJ,GAC3B,OAAOE,EAAUF,EAAK,aACxB,CASO,SAASK,EAAWL,GACzB,OAAOE,EAAUF,EAAK,WACxB,CAoBO,SAASM,EAASN,GACvB,OAAOE,EAAUF,EAAK,SACxB,CASO,SAASO,EAAsBP,GACpC,MACiB,iBAARA,GACC,OAARA,GACA,+BAAgCA,GAChC,+BAAgCA,CAEpC,CASO,SAASQ,EAAYR,GAC1B,OAAe,OAARA,GAAgBO,EAAsBP,IAAwB,iBAARA,GAAmC,mBAARA,CAC1F,CASO,SAASS,EAAcT,GAC5B,OAAOE,EAAUF,EAAK,SACxB,CASO,SAASU,EAAQV,GACtB,MAAwB,oBAAVW,OAAyBV,EAAaD,EAAKW,MAC3D,CA4BO,SAASC,EAAWZ,GAEzB,OAAOa,QAAQb,GAAOA,EAAI/F,MAA4B,mBAAb+F,EAAI/F,KAC/C,CAoBO,SAASQ,EAAMuF,GACpB,MAAsB,iBAARA,GAAoBA,GAAQA,CAC5C,CAUO,SAASC,EAAaD,EAAUc,GACrC,IACE,OAAOd,aAAec,CAC1B,CAAI,MAAOC,GACP,OAAO,CACX,CACA,CAcO,SAASC,EAAehB,GAE7B,QAAyB,iBAARA,GAA4B,OAARA,IAAkBA,EAAqBiB,UAAYjB,EAAqBkB,OAC/G,CCjNA,IAAMC,EAAS7C,IAcR,SAAS8C,EACdC,EACAC,GAEA,QAFO,IAAPA,IAAAA,EAAwE,CAAC,IAEpED,EACH,MAAO,YAOT,IAYE,IAXA,IAOIE,EAPAC,EAAcH,EAEZI,EAAM,GACRC,EAAS,EACTC,EAAM,EAIJC,EAAWC,MAAMC,QAAQR,GAAWA,EAAUA,EAAQM,SACtDG,GAAoBF,MAAMC,QAAQR,IAAYA,EAAQS,iBAlC9B,GAoCvBP,GAAeE,IAVM,KAgBV,UALhBH,EAAUS,EAAqBR,EAAaI,KAKjBF,EAAS,GAAKC,EAXzBM,EAW+BR,EAAI/G,OAAqB6G,EAAQ7G,QAAUqH,IAI1FN,EAAInH,KAAKiH,GAETI,GAAOJ,EAAQ7G,OACf8G,EAAcA,EAAYU,WAG5B,OAAOT,EAAIU,UAAUC,KAtBH,MAuBtB,CAAI,MAAOC,GACP,MAAO,WACX,CACA,CAOA,SAASL,EAAqBM,EAAaV,GACzC,IAQIzB,EACAoC,EACAjF,EACAkF,EACArL,EAZEkK,EAAOiB,EAOPb,EAAM,GAOZ,IAAKJ,IAASA,EAAKoB,QACjB,MAAO,GAIT,GAAItB,EAAOuB,aAELrB,aAAgBqB,aAAerB,EAAKsB,SAAWtB,EAAKsB,QAAyB,gBAC/E,OAAOtB,EAAKsB,QAAyB,gBAIzClB,EAAInH,KAAK+G,EAAKoB,QAAQG,eAGtB,IAAMC,EACJjB,GAAYA,EAASlH,OACjBkH,EAASkB,QAAO,SAAAC,GAAA,OAAW1B,EAAK2B,aAAaD,EAAQ,IAAEE,KAAI,SAAAF,GAAA,MAAW,CAACA,EAAS1B,EAAK2B,aAAaD,GAAS,IAC3G,KAEN,GAAIF,GAAgBA,EAAanI,OAC/BmI,EAAajJ,SAAQ,SAAAsJ,GACnBzB,EAAInH,KAAK,IAAI4I,EAAY,GAAE,KAAKA,EAAY,GAAE,KACpD,SAQ2B,GANnB7B,EAAKpE,IACPwE,EAAInH,KAAK,IAAI+G,EAAKpE,KAIGkD,EAAAkB,EAAAlB,YACAG,EAAAH,GAEA,IADAoC,EAAApC,EAAAgD,MAAA,OACAhM,EAAA,EAAAA,EAAAoL,EAAA7H,OAAAvD,IACAsK,EAAAnH,KAAA,IAAAiI,EAAApL,IAIA,IAAAiM,EAAA,2CACA,IAAAjM,EAAA,EAAAA,EAAAiM,EAAA1I,OAAAvD,IACAmG,EAAA8F,EAAAjM,IACAqL,EAAAnB,EAAA2B,aAAA1F,KAEAmE,EAAAnH,KAAA,IAAAgD,EAAA,KAAAkF,EAAA,MAGA,OAAAf,EAAAW,KAAA,GACA,CA4CA,SAAAiB,EAAAhC,GAEA,IAAAF,EAAAuB,YACA,YAKA,IAFA,IAAAlB,EAAAH,EAEAlK,EAAA,EAAAA,EADG,EACHA,IAAA,CACA,IAAAqK,EACA,YAGA,GAAAA,aAAAkB,aAAAlB,EAAAmB,QAAA,gBACA,OAAAnB,EAAAmB,QAAA,gBAGAnB,EAAAA,EAAAU,UACA,CAEA,WACA,CCzLpB,SAASoB,EAASC,EAAaC,GACpC,YADuC,IAAHA,IAAAA,EAAc,GAC/B,iBAARD,GAA4B,IAARC,GAGxBD,EAAI7I,QAAU8I,EAFZD,EAEyBA,EAAA5H,MAAA,EAAA6H,GAAA,KACA,CAoDA,SAAAC,EAAAC,EAAAC,GACA,IAAA9B,MAAAC,QAAA4B,GACA,SAKA,IAFA,IAAAE,EAAA,GAEAzM,EAAA,EAAAA,EAAAuM,EAAAhJ,OAAAvD,IAAA,CACA,IAAAQ,EAAA+L,EAAAvM,GACA,IAMA6J,EAAArJ,GACAiM,EAAAtJ,KAAA,kBAEAsJ,EAAAtJ,KAAAuJ,OAAAlM,GAEA,OAAAf,GACAgN,EAAAtJ,KAAA,+BACA,CACA,CAEA,OAAAsJ,EAAAxB,KAAAuB,EACA,CAuCA,SAAAG,EACAC,EACAC,EACAC,GAEA,YAHA,IAAAD,IAAAA,EAAA,SACA,IAAAC,IAAAA,GAAA,GAEAD,EAAAE,MAAA,SAAAC,GAAA,OAlCA,SACAxM,EACAwM,EACAF,GAEA,YAFA,IAAAA,IAAAA,GAAA,KAEA3D,EAAA3I,KFuC3BuI,EEnC2BiE,EFmCZ,UElCYA,EAAAC,KAAAzM,KAEA2I,EAAA6D,KACAF,EAAAtM,IAAAwM,EAAAxM,EAAA0M,SAAAF,IAIA,CAiBAG,CAAAP,EAAAI,EAAAF,EAAA,GACA,CCtH7B,SAASM,EAAKC,EAAgC1J,EAAc2J,GACjE,GAAM3J,KAAQ0J,EAAd,CAIA,IAAME,EAAWF,EAAO1J,GAClB6J,EAAUF,EAAmBC,GAIZ,mBAAZC,GACTC,EAAoBD,EAASD,GAG/BF,EAAO1J,GAAQ6J,CAXjB,CAYA,CASO,SAASE,EAAyBjH,EAAa9C,EAAcnD,GAClE,IACEd,OAAOa,eAAekG,EAAK9C,EAAM,CAE/BnD,MAAOA,EACPG,UAAU,EACVD,cAAc,GAEpB,CAAI,MAAOiN,GAEX,CACA,CASO,SAASF,EAAoBD,EAA0BD,GAC5D,IACE,IAAMK,EAAQL,EAAS5N,WAAa,CAAC,EACrC6N,EAAQ7N,UAAY4N,EAAS5N,UAAYiO,EACzCF,EAAyBF,EAAS,sBAAuBD,EAC7D,CAAI,MAAOI,GAAM,CACjB,CASO,SAASE,EAAoBC,GAClC,OAAOA,EAAKC,mBACd,CAsBiB,SAAAC,EACAxN,GAgBA,GAAAoI,EAAApI,GACA,OAAA8H,EAAA,CACA2F,QAAAzN,EAAAyN,QACAtK,KAAAnD,EAAAmD,KACAuK,MAAA1N,EAAA0N,OACAC,EAAA3N,IAEA,GAAA+I,EAAA/I,GAAA,CACA,IAAA4N,EAAA9F,EAAA,CAOA3G,KAAAnB,EAAAmB,KACA0M,OAAAC,EAAA9N,EAAA6N,QACAE,cAAAD,EAAA9N,EAAA+N,gBACAJ,EAAA3N,IAOA,MAJA,oBAAAgO,aAAA1F,EAAAtI,EAAAgO,eACAJ,EAAAK,OAAAjO,EAAAiO,QAGAL,CACA,CACA,OAAA5N,CAEA,CAGA,SAAA8N,EAAAD,GACA,IACA,MHlBW,oBAAZK,SAA2B5F,EGkB1BuF,EHlB4CK,SGkB5CzE,EAAAoE,GAAA3O,OAAAC,UAAAqF,SAAAnD,KAAAwM,EACA,OAAAnD,GACA,iBACA,CACA,CAGA,SAAAiD,EAAA1H,GACA,oBAAAA,GAAA,OAAAA,EAAA,CACA,IAAAkI,EAAA,GACA,QAAAC,KAAAnI,EACA/G,OAAAC,UAAAE,eAAAgC,KAAA4E,EAAAmI,KACAD,EAAAC,GAAAnI,EAAAmI,IAGA,OAAAD,CACA,CACA,QAEA,CAuCA,SAAAE,EAAAC,GAOA,OAAAC,EAAAD,EAHA,IAAAE,IAIA,CAEA,SAAAD,EAAAD,EAAAG,GACA,GAyCA,SAAA1C,GACA,IAAAjD,EAAAiD,GACA,SAGA,IACA,IAAA5I,EAAAjE,OAAA0C,eAAAmK,GAAA7I,YAAAC,KACA,OAAAA,GAAA,WAAAA,CACA,OAAAlE,GACA,QACA,CACA,CApDAyP,CAAAJ,GAAA,CAEA,IAAAK,EAAAF,EAAA7I,IAAA0I,GACA,QAAAjJ,IAAAsJ,EACA,OAAAA,EAGA,IAAAC,EAAA,GAEAH,EAAAzI,IAAAsI,EAAAM,GAEA,QAAAC,EAAA,EAAAC,EAAA5P,OAAAwE,KAAA4K,GAAAO,EAAAC,EAAA/L,OAAA8L,IAAA,KAAAlJ,EAAAmJ,EAAAD,QACA,IAAAP,EAAA3I,KACAiJ,EAAAjJ,GAAA4I,EAAAD,EAAA3I,GAAA8I,GAEA,CAEA,OAAAG,CACA,CAEA,GAAA1E,MAAAC,QAAAmE,GAAA,CAEA,IAAAK,EAAAF,EAAA7I,IAAA0I,GACA,QAAAjJ,IAAAsJ,EACA,OAAAA,EAGA,IAAAC,EAAA,GAQA,OANAH,EAAAzI,IAAAsI,EAAAM,GAEAN,EAAArM,SAAA,SAAA8M,GACAH,EAAAjM,KAAA4L,EAAAQ,EAAAN,GACA,IAEAG,CACA,CAEA,OAAAN,CACA,CChPV,SAASU,IACd,IAAMlI,EAAMN,EACNyI,EAASnI,EAAImI,QAAUnI,EAAIoI,SAE7BC,EAAgB,WAAF,OAAgC,GAAhB5I,KAAK6I,QAAa,EACpD,IACE,GAAIH,GAAUA,EAAOI,WACnB,OAAOJ,EAAOI,aAAaC,QAAQ,KAAM,IAEvCL,GAAUA,EAAOM,kBACnBJ,EAAgB,WAKd,IAAMK,EAAa,IAAIC,WAAW,GAElC,OADAR,EAAOM,gBAAgBC,GAChBA,EAAW,EAC1B,EAEA,CAAI,MAAOE,GAEX,CAKE,OAAS,CAAC,KAA6B,IAAM,IAAM,IAAM,MAAMJ,QAAQ,UAAU,SAAAxP,GAAE,OAE/EA,GAA8C,GAAlBqP,MAA2BrP,EAA0B,GAAK0E,SAAS,GAAG,GAExG,CAEA,SAASmL,EAAkBC,GACzB,OAAOA,EAAMC,WAAaD,EAAMC,UAAUhM,OAAS+L,EAAMC,UAAUhM,OAAO,QAAKwB,CACjF,CAMO,SAASyK,EAAoBF,GAClC,IAAQnC,EAA+BmC,EAA/BnC,QAAmBsC,EAAYH,EAAtBI,SACjB,GAAIvC,EACF,OAAOA,EAGT,IAAMwC,EAAiBN,EAAkBC,GACzC,OAAIK,EACEA,EAAe9O,MAAQ8O,EAAejQ,MAChCiQ,EAAA9O,KAAA,KAAA8O,EAAAjQ,MAEAiQ,EAAA9O,MAAA8O,EAAAjQ,OAAA+P,GAAA,YAEAA,GAAA,WACA,CASA,SAAAG,EAAAN,EAAA5P,EAAAmB,GACA,IAAA0O,EAAAD,EAAAC,UAAAD,EAAAC,WAAA,GACAhM,EAAAgM,EAAAhM,OAAAgM,EAAAhM,QAAA,GACAoM,EAAApM,EAAA,GAAAA,EAAA,OACAoM,EAAAjQ,QACAiQ,EAAAjQ,MAAAA,GAAA,IAEAiQ,EAAA9O,OACA8O,EAAA9O,KAAAA,GAAA,QAEA,CASA,SAAAgP,EAAAP,EAAAQ,GACA,IAAAH,EAAAN,EAAAC,GACA,GAAAK,EAAA,CAIA,IACAI,EAAAJ,EAAAK,UAGA,GAFAL,EAAAK,UAAAxI,EAAA,GAFA,CAAA3G,KAAA,UAAAoP,SAAA,GAEAF,EAAAD,GAEAA,GAAA,SAAAA,EAAA,CACA,IAAAI,EAAA1I,EAAA,GAAAuI,GAAAA,EAAAI,KAAAL,EAAAK,MACAR,EAAAK,UAAAG,KAAAD,CACA,CATA,CAUA,CAmFA,SAAAE,EAAAb,GAEA,GAAAA,GAAAA,EAAAc,oBACA,SAGA,IAGAzD,EAAA2C,EAAA,yBACA,OAAAe,GACA,CAGA,QACA,CCnNP,ICAWC,EAmBX,SAASC,EAAuB9Q,GACrC,OAAO,IAAI+Q,GAAY,SAAA3O,GACrBA,EAAQpC,EACZ,GACA,CAQO,SAASgR,EAA+BC,GAC7C,OAAO,IAAIF,GAAY,SAACrB,EAAGwB,GACzBA,EAAOD,EACX,GACA,EAnCkB,SAAAJ,GAELA,EAAAA,EAAA,QAAD,GAAC,UAECA,EAAAA,EAAA,SAAD,GAAC,WAEAA,EAAAA,EAAA,SAAD,GAAC,UACb,CAPiB,CAOlBA,IAAAA,EAAA,KA8BA,IAIME,EAAW,WAKR,SAAAA,EACLI,GACAJ,EAAA5R,UAAAiS,OAAA/P,KAAA,MAAA0P,EAAA5R,UAAAkS,QAAAhQ,KAAA,MAAA0P,EAAA5R,UAAAmS,QAAAjQ,KAAA,MAAA0P,EAAA5R,UAAAoS,QAAAlQ,KAAA,MACAK,KAAK8P,OAASX,EAAOY,QACrB/P,KAAKgQ,UAAY,GAEjB,IACEP,EAASzP,KAAKiQ,SAAUjQ,KAAKkQ,QACnC,CAAM,MAAO3S,GACPyC,KAAKkQ,QAAQ3S,EACnB,CACA,CAEA,IAAA4S,EAAAd,EAAA5R,UAgIG,OAhIH0S,EACSvP,KAAA,SACLwP,EACAC,GACkC,IAAAC,EAAA,KAClC,OAAO,IAAIjB,GAAY,SAAC3O,EAAS8O,GAC/Bc,EAAKN,UAAU/O,KAAK,EAClB,EACA,SAAAsP,GACE,GAAKH,EAKH,IACE1P,EAAQ0P,EAAYG,GAClC,CAAc,MAAOhT,GACPiS,EAAOjS,EACrB,MANYmD,EAAQ6P,EAQpB,EACQ,SAAAhB,GACE,GAAKc,EAGH,IACE3P,EAAQ2P,EAAWd,GACjC,CAAc,MAAOhS,GACPiS,EAAOjS,EACrB,MANYiS,EAAOD,EAQnB,IAEMe,EAAKE,kBACX,GACA,EAEAL,EAAA,MACS,SACLE,GAEA,OAAOrQ,KAAKY,MAAK,SAAA6P,GAAA,OAAOA,CAAG,GAAEJ,EACjC,EAEAF,EAAA,QACS,SAAiBO,GAAuD,IAAAC,EAAA,KAC7E,OAAO,IAAItB,GAAqB,SAAC3O,EAAS8O,GACxC,IAAIiB,EACAG,EAEJ,OAAOD,EAAK/P,MACV,SAAAtC,GACEsS,GAAa,EACbH,EAAMnS,EACFoS,GACFA,GAEZ,IACQ,SAAAnB,GACEqB,GAAa,EACbH,EAAMlB,EACFmB,GACFA,GAEZ,IACQ9P,MAAK,WACDgQ,EACFpB,EAAOiB,GAIT/P,EAAQ+P,EAChB,GACA,GACA,EAEAN,EACmBT,OAAA,eAAAmB,EAAA,UAAAZ,SAAW,SAAC3R,GAC3BuS,EAAKC,WAAW3B,EAAO4B,SAAUzS,EACrC,CAAG,EAEH6R,EACmBR,QAAA,eAAAqB,EAAA,UAAAd,QAAU,SAACX,GAC1ByB,EAAKF,WAAW3B,EAAO8B,SAAU1B,EACrC,CAAG,EAEHY,EACAP,QAAA,eAAAsB,EAAA,UAAmBJ,WAAa,SAACK,EAAe7S,GACxC4S,EAAKpB,SAAWX,EAAOY,UAIvBxI,EAAWjJ,GACPA,EAAyBsC,KAAKsQ,EAAKjB,SAAUiB,EAAKhB,UAI1DgB,EAAKpB,OAASqB,EACdD,EAAKE,OAAS9S,EAEd4S,EAAKV,oBACT,CAAG,EAEHL,EACmBN,QAAA,eAAAwB,EAAA,UAAAb,iBAAmB,WAClC,GAAIa,EAAKvB,SAAWX,EAAOY,QAA3B,CAIA,IAAMuB,EAAiBD,EAAKrB,UAAU1N,QACtC+O,EAAKrB,UAAY,GAEjBsB,EAAe/Q,SAAQ,SAAAgR,GACjBA,EAAQ,KAIRF,EAAKvB,SAAWX,EAAO4B,UAEzBQ,EAAQ,GAAGF,EAAKD,QAGdC,EAAKvB,SAAWX,EAAO8B,UACzBM,EAAQ,GAAGF,EAAKD,QAGlBG,EAAQ,IAAK,EACnB,GApBA,CAqBA,CAAG,EAAAlC,CAAA,CAlJc,GCvCV,SAASmC,KACd,OAAOtM,EAAqC,yBAAyB,iBAAM,EAAE,GAC/E,CAMO,SAASuM,GAAwBhM,GAEtC+L,KAA2BvQ,KAAKwE,EAClC,CAKO,SAASiM,GACdC,EACAzD,EACA0D,EACAC,GAEA,YAFK,IAALA,IAAAA,EAAgB,GAET,IAAIxC,GAA0B,SAAC3O,EAAS8O,GAC7C,IAAMsC,EAAYH,EAAWE,GAC7B,GAAc,OAAV3D,GAAuC,mBAAd4D,EAC3BpR,EAAQwN,OACH,CACL,IAAMqC,EAASuB,EAAS1L,EAAC,CAAC,EAAI8H,GAAS0D,GAInCrK,EAAWgJ,GACRA,EACF3P,MAAK,SAAAmR,GAAA,OAASL,GAAsBC,EAAYI,EAAOH,EAAMC,EAAQ,GAAGjR,KAAKF,EAAQ,IACrFE,KAAK,KAAM4O,GAETkC,GAAsBC,EAAYpB,EAAQqB,EAAMC,EAAQ,GAC1DjR,KAAKF,GACLE,KAAK,KAAM4O,EAEtB,CACA,GACA,CC3BO,SAASwC,KACd,OAAOC,KAAKC,MAvBW,GAwBzB,CA0Ca,IAAAC,GAlCb,WACE,IAAQC,EAAgBtN,EAAhBsN,YACR,IAAKA,IAAgBA,EAAYF,IAC/B,OAAOF,GAKT,IAAMK,EAA2BJ,KAAKC,MAAQE,EAAYF,MACpDI,EAAuC3O,MAA1ByO,EAAYE,WAA0BD,EAA2BD,EAAYE,WAWhG,OAAO,WACL,OAAQA,EAAaF,EAAYF,OArDZ,GAsDzB,CACA,CAWkCK,GAmBrBC,GAAgC,WAK3C,IAAQJ,EAAgBtN,EAAhBsN,YACR,GAAKA,GAAgBA,EAAYF,IAAjC,CAKA,IAAMO,EAAY,KACZC,EAAiBN,EAAYF,MAC7BS,EAAUV,KAAKC,MAGfU,EAAkBR,EAAYE,WAChCzN,KAAKgO,IAAIT,EAAYE,WAAaI,EAAiBC,GACnDF,EACEK,EAAuBF,EAAkBH,EAQzCM,EAAkBX,EAAYY,QAAUZ,EAAYY,OAAOD,gBAG3DE,EAFgD,iBAApBF,EAEgBlO,KAAKgO,IAAIE,EAAkBL,EAAiBC,GAAWF,EAGzG,OAAIK,GAF8BG,EAAuBR,EAInDG,GAAmBK,EAEdb,EAAYE,WAGZS,EAMJJ,CArCT,CAsCA,CA/C6C,GCvFhCO,GAAsB,aC6C5B,SAASC,GAAcC,EAAkBC,GAiC7B,QAjCoC,IAAPA,IAAAA,EAA0B,CAAC,GACrEA,EAAQC,QACLF,EAAQG,WAAaF,EAAQC,KAAKE,aACrCJ,EAAQG,UAAYF,EAAQC,KAAKE,YAG9BJ,EAAQK,KAAQJ,EAAQI,MAC3BL,EAAQK,IAAMJ,EAAQC,KAAK1P,IAAMyP,EAAQC,KAAKI,OAASL,EAAQC,KAAKK,WAIxEP,EAAQQ,UAAYP,EAAQO,WAAazB,KAErCkB,EAAQQ,qBACVT,EAAQS,mBAAqBR,EAAQQ,oBAGnCR,EAAQS,iBACVV,EAAQU,eAAiBT,EAAQS,gBAE/BT,EAAQU,MAEVX,EAAQW,IAA6B,KAAvBV,EAAQU,IAAI1S,OAAgBgS,EAAQU,IAAMzG,UAErC3J,IAAjB0P,EAAQW,OACVZ,EAAQY,KAAOX,EAAQW,OAEpBZ,EAAQK,KAAOJ,EAAQI,MAC1BL,EAAQK,IAAI,GAAGJ,EAAAI,KAEA,iBAAAJ,EAAAY,UACAb,EAAAa,QAAAZ,EAAAY,SAEAb,EAAAU,eACAV,EAAAc,cAAAvQ,OACA,oBAAA0P,EAAAa,SACAd,EAAAc,SAAAb,EAAAa,aACA,CACA,IAAAA,EAAAd,EAAAQ,UAAAR,EAAAa,QACAb,EAAAc,SAAAA,GAAA,EAAAA,EAAA,CACA,CACAb,EAAAc,UACAf,EAAAe,QAAAd,EAAAc,SAEAd,EAAAe,cACAhB,EAAAgB,YAAAf,EAAAe,cAEAhB,EAAAG,WAAAF,EAAAE,YACAH,EAAAG,UAAAF,EAAAE,YAEAH,EAAAiB,WAAAhB,EAAAgB,YACAjB,EAAAiB,UAAAhB,EAAAgB,WAEA,iBAAAhB,EAAAiB,SACAlB,EAAAkB,OAAAjB,EAAAiB,QAEAjB,EAAAkB,SACAnB,EAAAmB,OAAAlB,EAAAkB,OAEA,k0BCjGnB,IAEMC,GAAuB,kBACvBC,GAAqB,kCAgH3B,IAAMC,GAAsB,cAKrB,SAASC,GAAgBC,GAC9B,IACE,OAAKA,GAAoB,mBAAPA,GAGXA,EAAGnT,MAFDiT,EAGb,CAAI,MAAOnX,GAGP,OAAOmX,EACX,CACA,CCvGO,SAASG,GAAUxK,EAAgByK,EAAqBC,QAAhB,IAALD,IAAAA,EAAgB,UAAkB,IAAbC,IAAAA,EAAwB,KACrF,IAEE,OAAOC,GAAM,GAAI3K,EAAOyK,EAAOC,EACnC,CAAI,MAAO7F,GACP,MAAO,CAAE+F,MAAO,yBAAyB/F,EAAG,IAChD,CACA,CAGO,SAASgG,GAEdC,EAEAL,EAEAM,QAFK,IAALN,IAAAA,EAAgB,QAET,IAAPM,IAAAA,EAAkB,QAElB,IA+NgB9W,EA/NV+W,EAAaR,GAAUM,EAAQL,GAErC,OA6NgBxW,EA7NH+W,EAsNf,SAAoB/W,GAElB,QAASgX,UAAUhX,GAAOwL,MAAM,SAASzI,MAC3C,CAKSkU,CAAWC,KAAKC,UAAUnX,IA9NN8W,EAClBF,GAAgBC,EAAQL,EAAQ,EAAGM,GAGrCC,CACT,CAWA,SAASL,GACP/Q,EACA3F,EACAwW,EACAC,EACAW,GC/DK,IACCC,EACAC,OD2DD,IAALd,IAAAA,EAAgB,UACH,IAAbC,IAAAA,EAAwB,UACpB,IAAJW,IC9DMC,EAAgC,mBAAZE,QACpBD,EAAaD,EAAa,IAAIE,QAAY,GD6DhDH,EC7BO,CA/BP,SAAiBnR,GACf,GAAIoR,EACF,QAAIC,EAAME,IAAIvR,KAGdqR,EAAMG,IAAIxR,IACH,GAGT,IAAK,IAAIzG,EAAI,EAAGA,EAAI8X,EAAMvU,OAAQvD,IAEhC,GADc8X,EAAM9X,KACNyG,EACZ,OAAO,EAIX,OADAqR,EAAM3U,KAAKsD,IACJ,CACX,EAEE,SAAmBA,GACjB,GAAIoR,EACFC,EAAK,OAAQrR,QAEb,IAAK,IAAIzG,EAAI,EAAGA,EAAI8X,EAAMvU,OAAQvD,IAChC,GAAI8X,EAAM9X,KAAOyG,EAAK,CACpBqR,EAAMI,OAAOlY,EAAG,GAChB,KACV,CAGA,IDgCE,IAAAmY,EAA6BP,EAAtBQ,EAAOD,EAAA,GAAEE,EAASF,EAAA,GAGzB,GACW,MAAT3X,GACC,CAAC,SAAU,UAAW,UAAU0M,gBAAgB1M,KAAW8C,EAAM9C,GAElE,OAAOA,EAGT,IAAM8X,EAkGR,SACEnS,EAGA3F,GAEA,IACE,GAAY,WAAR2F,GAAoB3F,GAA0B,iBAAVA,GAAuBA,EAA+B+X,QAC5F,MAAO,WAGT,GAAY,kBAARpS,EACF,MAAO,kBAMT,QAAsB,IAAXe,EAAAA,GAA0B1G,IAAU0G,EAAAA,EAC7C,MAAO,WAIT,GAAsB,oBAAXb,QAA0B7F,IAAU6F,OAC7C,MAAO,WAIT,GAAwB,oBAAbmS,UAA4BhY,IAAUgY,SAC/C,MAAO,aAGT,GAAI3O,EAAerJ,GACjB,MAAO,iBAIT,GZvDK8I,EADwBT,EYwDRrI,IZvDM,gBAAiBqI,GAAO,mBAAoBA,GAAO,oBAAqBA,EYwDjG,MAAO,mBAGT,GAAqB,iBAAVrI,GAAsBA,GAAUA,EACzC,MAAO,QAGT,GAAqB,mBAAVA,EACT,MAAO,cAAcqW,GAAgBrW,GAAM,IAG7C,GAAqB,iBAAVA,EACT,MAAO,IAAIkM,OAAOlM,GAAM,IAI1B,GAAqB,iBAAVA,EACT,MAAO,YAAYkM,OAAOlM,GAAM,IAOlC,IAAMiY,EAcV,SAA4BjY,GAC1B,IAAMb,EAA8BD,OAAO0C,eAAe5B,GAE1D,OAAOb,EAAYA,EAAU+D,YAAYC,KAAO,gBAClD,CAlBoB+U,CAAmBlY,GAGnC,MAAI,qBAAqByM,KAAKwL,GACrB,iBAAiBA,EAAO,IAG1B,WAAWA,EAAO,GAC7B,CAAI,MAAOrH,GACP,MAAO,yBAAyBA,EAAG,GACvC,CZ3FO,IAA0BvI,CY4FjC,CA3KsB8P,CAAexS,EAAK3F,GAIxC,IAAK8X,EAAYM,WAAW,YAC1B,OAAON,EAQT,GAAK9X,EAA6D,8BAChE,OAAOA,EAMT,IAAMqY,EACiF,iBAA7ErY,EAAuE,wCACzEA,EAAuE,wCACzEwW,EAGN,GAAuB,IAAnB6B,EAEF,OAAOP,EAAYxI,QAAQ,UAAW,IAIxC,GAAIsI,EAAQ5X,GACV,MAAO,eAIT,IAAMsY,EAAkBtY,EACxB,GAAIsY,GAAqD,mBAA3BA,EAAgBC,OAC5C,IAGE,OAAO7B,GAAM,GAFK4B,EAAgBC,SAENF,EAAiB,EAAG5B,EAAeW,EACrE,CAAM,MAAOxG,GACb,CAOE,IAAMmG,EAAc7M,MAAMC,QAAQnK,GAAS,GAAK,CAAC,EAC7CwY,EAAW,EAITC,EAAYjL,EAAqBxN,GAEvC,IAAK,IAAM0Y,KAAYD,EAErB,GAAKvZ,OAAOC,UAAUE,eAAegC,KAAKoX,EAAWC,GAArD,CAIA,GAAIF,GAAY/B,EAAe,CAC7BM,EAAW2B,GAAY,oBACvB,KACN,CAGI,IAAMC,EAAaF,EAAUC,GAC7B3B,EAAW2B,GAAYhC,GAAMgC,EAAUC,EAAYN,EAAiB,EAAG5B,EAAeW,GAEtFoB,GAXJ,CAkBE,OAHAX,EAAU7X,GAGH+W,CACT,CEnKO,IAAM6B,GAAsB,UAItBC,GAAkC,WA0ExC,SAASC,GAEdC,GAEA,GAAKA,EAeM,OA0BA,SAAAlC,GACA,OAAA3X,OAAAwE,KAAAmT,GAAA9T,OAKA,OAAA7D,OAAA8Z,QAAAnC,GAAAoC,QAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GACAI,EAAAC,mBAAAH,GAAA,IAAAG,mBAAAF,GACAG,EAAA,IAAAL,EAAAG,EAAAL,EAAA,IAAAK,EACA,OAAAE,EAAA1W,OAzH4B,KA8H5BmW,EAEAO,CAEA,MACA,CA7CAC,CAVexa,OAAO8Z,QAAQD,GAAwBE,QAC/D,SAACU,EAAGC,GAAyB,IAAtBC,EAAMD,EAAA,GAAEE,EAAQF,EAAA,GAId,OAHHE,IACFH,EAxFiC,UAwF5BE,GAAAC,GAEAH,CACA,GACA,IAIA,CAQA,SAAAI,GAAAb,GACA,OAAAA,EACA1N,MAAA,KACAF,KAAA,SAAAiO,GAAA,OAAAA,EAAA/N,MAAA,KAAAF,KAAA,SAAA0O,GAAA,OAAAC,mBAAAD,EAAAE,OAAA,OACAjB,QAAA,SAAAU,EAAAQ,GAAA,IAAAxU,EAAAwU,EAAA,GAAAna,EAAAma,EAAA,GAEA,OADAR,EAAAhU,GAAA3F,EACA2Z,CACA,MACA,CClHA,IAAAS,GAAqB,IAAIC,OACpC,6DAoFK,SAASC,GACdC,EACAC,GAEA,IAAMC,EA1ED,SAAgCC,GACrC,GAAKA,EAAL,CAIA,IAKIC,EALEC,EAAUF,EAAYG,MAAMT,IAClC,GAAKQ,EAWL,MANmB,MAAfA,EAAQ,GACVD,GAAgB,EACQ,MAAfC,EAAQ,KACjBD,GAAgB,GAGX,CACLG,QAASF,EAAQ,GACjBD,cAAAA,EACAI,aAAcH,EAAQ,GAjB1B,CAmBA,CAoD0BI,CAAuBT,GACzCxB,EDtED,SAELG,GAEA,GAAKvQ,EAASuQ,IAAmBhP,MAAMC,QAAQ+O,GAA/C,CAMA,IAAI+B,EAAkD,CAAC,EAEvD,GAAI/Q,MAAMC,QAAQ+O,GAEhB+B,EAAgB/B,EAAcD,QAA+B,SAACU,EAAKuB,GAEjE,IADA,IAAMC,EAAoBpB,GAAsBmB,GAChDrM,EAAA,EAAAC,EAAkB5P,OAAOwE,KAAKyX,GAAkBtM,EAAAC,EAAA/L,OAAA8L,IAAE,CAA7C,IAAMlJ,EAAImJ,EAAAD,GACb8K,EAAIhU,GAAOwV,EAAkBxV,EACrC,CACM,OAAOgU,CACb,GAAO,CAAC,OACC,CAGL,IAAKT,EACH,OAGF+B,EAAgBlB,GAAsBb,EAC1C,CAGE,IAAMH,EAAyB7Z,OAAO8Z,QAAQiC,GAAehC,QAA+B,SAACU,EAAGyB,GAAmB,IAAhBzV,EAAGyV,EAAA,GAAEpb,EAAKob,EAAA,GAK3G,OAJIzV,EAAIkV,MAAMhC,MAEZc,EADuBhU,EAAI3B,MAAMqX,IACXrb,GAEjB2Z,CACX,GAAK,CAAC,GAIJ,OAAIza,OAAOwE,KAAKqV,GAAwBhW,OAAS,EACxCgW,OAEP,CAvCJ,CAyCA,CCuBiCuC,CAAsCd,GAErEZ,EAAiDa,GAAmB,CAAC,EAA7DK,EAAOlB,EAAPkB,QAASC,EAAYnB,EAAZmB,aAAcJ,EAAcf,EAAde,cAE/B,OAAKF,EAMI,CACLK,QAASA,GAAW9L,IACpB+L,aAAcA,GAAgB/L,IAAQuM,UAAU,IAChDC,OAAQxM,IAAQuM,UAAU,IAC1BE,QAASd,EACTe,IAAK3C,GAA0B,CAAC,GAV3B,CACL+B,QAASA,GAAW9L,IACpBwM,OAAQxM,IAAQuM,UAAU,IAWhC,CAKO,SAASI,GACdb,EACAU,EACAC,QAFO,IAAPX,IAAAA,EAAkB9L,UACZ,IAANwM,IAAAA,EAAiBxM,IAAQuM,UAAU,KAGnC,IAAIK,EAAgB,GAIpB,YAHgBvW,IAAZoW,IACFG,EAAgBH,EAAU,KAAO,MAE3BX,EAAA,IAAAU,EAAAI,CACA,CCtHH,SAASC,GAAmBC,GACjC,IAAAC,EAA+CD,EAAKE,cAApCC,EAAOF,EAAfP,OAA0BU,EAAAH,EAATjB,QACzBqB,EAA2DC,GAAWN,GAEtE,OAAOzN,EAAkB,CACvBoC,KAHU0L,EAAJ1L,KAIN4L,GAJcF,EAAFE,GAKZC,eAL8BH,EAAdG,eAMhBL,QAAAA,EACAhG,OAPsCkG,EAANlG,OAQhCsG,KAR4CJ,EAAJI,KASxCL,SAAAA,EACAM,OAVqDL,EAAPK,QAYlD,CAKO,SAASC,GAAkBX,GAChC,IAAAY,EAA4BZ,EAAKE,cAEjC,OAAOL,GAFQe,EAAP5B,QAAS4B,EAAAlB,OACDmB,GAAcb,GAEhC,CAKO,SAASc,GAAuB7Q,GACrC,MAAqB,iBAAVA,EACF8Q,GAAyB9Q,GAG9B7B,MAAMC,QAAQ4B,GAETA,EAAM,GAAKA,EAAM,GAAK,IAG3BA,aAAiB4H,KACZkJ,GAAyB9Q,EAAM+Q,WAGjCjJ,IACT,CAKA,SAASgJ,GAAyBvH,GAEhC,OADaA,EAAY,WACXA,EAAY,IAAOA,CACnC,CAWO,SAAS8G,GAAWN,GACzB,OAkBF,SAAyBA,GACvB,MAAkD,mBAAnCA,EAAmBiB,WACpC,CApBMC,CAAgBlB,GACXA,EAAKiB,cAKa,mBAAhBjB,EAAKvD,OAEPuD,EAAKvD,SAGP,CAAC,CACV,CAgBO,SAASoE,GAAcb,GAG5B,IAAQmB,EAAenB,EAAKE,cAApBiB,WAER,OAAO/T,QArGyB,EAqGjB+T,EACjB,CC/DO,SAASC,GACdvT,EACAiG,EACA0D,EACA6J,EACAC,EACAC,GAEA,IAAAC,EAA4D3T,EAApD4T,eAAAA,OAAA,IAAAD,EAAiB,EAACA,EAAAE,EAAkC7T,EAAhC8T,oBAAAA,OAAA,IAAAD,EAAsB,IAAAA,EAC5CE,EAAQ5V,EAAA,GACT8H,EAAK,CACRI,SAAUJ,EAAMI,UAAYsD,EAAKtD,UAAYhB,IAC7CsG,UAAW1F,EAAM0F,WAAa5B,OAE1BiK,EAAerK,EAAKqK,cAAgBhU,EAAQgU,aAAarS,KAAI,SAAA9L,GAAA,OAAKA,EAAE2D,IAAI,KA2EhF,SAA4ByM,EAAcjG,GACxC,IAAQmM,EAAqDnM,EAArDmM,YAAaD,EAAwClM,EAAxCkM,QAAS+H,EAA+BjU,EAA/BiU,KAAIC,EAA2BlU,EAAzBmU,eAAAA,OAAe,IAAAD,EAAE,IAAIA,EAEnD,gBAAiBjO,IACrBA,EAAMkG,YAAc,gBAAiBnM,EAAUmM,EAAclB,SAGzCvP,IAAlBuK,EAAMiG,cAAqCxQ,IAAZwQ,IACjCjG,EAAMiG,QAAUA,QAGCxQ,IAAfuK,EAAMgO,WAA+BvY,IAATuY,IAC9BhO,EAAMgO,KAAOA,GAGXhO,EAAMnC,UACRmC,EAAMnC,QAAU9B,EAASiE,EAAMnC,QAASqQ,IAG1C,IAAMjO,EAAYD,EAAMC,WAAaD,EAAMC,UAAUhM,QAAU+L,EAAMC,UAAUhM,OAAO,GAClFgM,GAAaA,EAAU7P,QACzB6P,EAAU7P,MAAQ2L,EAASkE,EAAU7P,MAAO8d,IAG9C,IAAMC,EAAUnO,EAAMmO,QAClBA,GAAWA,EAAQC,MACrBD,EAAQC,IAAMrS,EAASoS,EAAQC,IAAKF,GAExC,CArGEG,CAAmBP,EAAU/T,GA8M/B,SAAmCiG,EAAcsO,GAC3CA,EAAiBnb,OAAS,IAC5B6M,EAAMuO,IAAMvO,EAAMuO,KAAO,CAAC,EAC1BvO,EAAMuO,IAAIR,aAAA,GAAAS,OAAoBxO,EAAMuO,IAAIR,cAAgB,GAAQO,GAEpE,CAlNEG,CAA0BX,EAAUC,QAGjBtY,IAAfuK,EAAMzO,MAwGL,SAAuByO,EAAc0O,GAC1C,IAMIC,EANEC,EAAahY,EAAWiY,gBAE9B,GAAKD,EAAL,CAKA,IAAME,EAA+BC,GAAwB/Y,IAAI0Y,GAC7DI,EACFH,EAA0BG,GAE1BH,EAA0B,IAAI/P,IAC9BmQ,GAAwB3Y,IAAIsY,EAAaC,IAI3C,IAAMK,EAAqB1f,OAAOwE,KAAK8a,GAAYvF,QAA+B,SAACU,EAAKkF,GACtF,IAAIC,EACEC,EAAoBR,EAAwB3Y,IAAIiZ,GAClDE,EACFD,EAAcC,GAEdD,EAAcR,EAAYO,GAC1BN,EAAwBvY,IAAI6Y,EAAmBC,IAGjD,IAAK,IAAItf,EAAIsf,EAAY/b,OAAS,EAAGvD,GAAK,EAAGA,IAAK,CAChD,IAAMwf,EAAaF,EAAYtf,GAC/B,GAAIwf,EAAWC,SAAU,CACvBtF,EAAIqF,EAAWC,UAAYT,EAAWK,GACtC,KACR,CACA,CACI,OAAOlF,CACX,GAAK,CAAC,GAEJ,IAEE/J,EAAOC,UAAWhM,OAAQ5B,SAAQ,SAAA4N,GAEhCA,EAAUqP,WAAYC,OAAQld,SAAQ,SAAAmd,GAChCA,EAAMH,WACRG,EAAMC,SAAWT,EAAmBQ,EAAMH,UAEpD,GACA,GACA,CAAI,MAAOhgB,GACX,CA3CA,CA6CA,CAzJIqgB,CAAc5B,EAAU/T,EAAQ2U,aAKlC,IAAMiB,EAiRR,SAAuBpC,EAA0BqC,GAC/C,IAAKA,EACH,OAAOrC,EAGT,IAAMoC,EAAapC,EAAQA,EAAMsC,QAAU,IAAIC,GAE/C,OADAH,EAAWI,OAAOH,GACXD,CACT,CAzRqBK,CAAczC,EAAO7J,EAAKkM,gBAEzClM,EAAKhD,WACPH,EAAsBuN,EAAUpK,EAAKhD,WAGvC,IAAMuP,EAAwBzC,GAAUA,EAAO0C,mBAAqB1C,EAAO0C,qBAAuB,GAK5FrP,GCgnBDsP,KACHA,GAAc,IAAIL,IAGbK,IDpnBuBC,eAE1B3C,GAEF4C,GAAexP,EADO4M,EAAe2C,gBAInCT,GAEFU,GAAexP,EADQ8O,EAAWS,gBAIpC,IAAME,EAAY,GAAA9B,OAAO9K,EAAK4M,aAAe,GAAQzP,EAAKyP,aAkB1D,OAjBIA,EAAYnd,SACduQ,EAAK4M,YAAcA,GAGrBC,GAAsBzC,EAAUjN,GAWjB2C,GART,GAAAgL,OACDyB,EAEA3M,KAEAzC,EAAK2P,iBAG4C1C,EAAUpK,GAElDhR,MAAK,SAAA+d,GASjB,OARIA,GA+GD,SAAwBzQ,GAE7B,IAAMgP,EAA6C,CAAC,EACpD,IAEEhP,EAAMC,UAAWhM,OAAQ5B,SAAQ,SAAA4N,GAE/BA,EAAUqP,WAAYC,OAAQld,SAAQ,SAAAmd,GAChCA,EAAMC,WACJD,EAAMkB,SACR1B,EAAmBQ,EAAMkB,UAAYlB,EAAMC,SAClCD,EAAMH,WACfL,EAAmBQ,EAAMH,UAAYG,EAAMC,iBAEtCD,EAAMC,SAEvB,GACA,GACA,CAAI,MAAOpgB,GACX,CAGE,GAA+C,IAA3CC,OAAOwE,KAAKkb,GAAoB7b,OAApC,CAKA6M,EAAM2Q,WAAa3Q,EAAM2Q,YAAc,CAAC,EACxC3Q,EAAM2Q,WAAWC,OAAS5Q,EAAM2Q,WAAWC,QAAU,GACrD,IAAMA,EAAS5Q,EAAM2Q,WAAWC,OAChCthB,OAAOwE,KAAKkb,GAAoB3c,SAAQ,SAAAgd,GACtCuB,EAAO7d,KAAK,CACVxB,KAAM,YACNsf,UAAWxB,EACXI,SAAUT,EAAmBK,IAEnC,GAZA,CAaA,CA/IMyB,CAAeL,GAGa,iBAAnB9C,GAA+BA,EAAiB,EAmK/D,SAAwB3N,EAAqB4G,EAAemK,GAC1D,IAAK/Q,EACH,OAAO,KAGT,IAAMmH,EAAUjP,EAAA,GACX8H,EACCA,EAAMgR,aAAe,CACvBA,YAAahR,EAAMgR,YAAYtV,KAAI,SAAAuV,GAAE,OAAA/Y,EAAA,GAChC+Y,EACCA,EAAEpQ,MAAQ,CACZA,KAAM8F,GAAUsK,EAAEpQ,KAAM+F,EAAOmK,IAChC,KAGD/Q,EAAMoF,MAAQ,CAChBA,KAAMuB,GAAU3G,EAAMoF,KAAMwB,EAAOmK,IAEjC/Q,EAAMkR,UAAY,CACpBA,SAAUvK,GAAU3G,EAAMkR,SAAUtK,EAAOmK,IAEzC/Q,EAAMmR,OAAS,CACjBA,MAAOxK,GAAU3G,EAAMmR,MAAOvK,EAAOmK,KAmCzC,OAxBI/Q,EAAMkR,UAAYlR,EAAMkR,SAASE,OAASjK,EAAW+J,WACvD/J,EAAW+J,SAASE,MAAQpR,EAAMkR,SAASE,MAGvCpR,EAAMkR,SAASE,MAAMvQ,OACvBsG,EAAW+J,SAASE,MAAMvQ,KAAO8F,GAAU3G,EAAMkR,SAASE,MAAMvQ,KAAM+F,EAAOmK,KAK7E/Q,EAAMqR,QACRlK,EAAWkK,MAAQrR,EAAMqR,MAAM3V,KAAI,SAAAwQ,GACjC,IAAMrL,EAAO2L,GAAWN,GAAMrL,KAQ9B,OANIA,IAGFqL,EAAKrL,KAAO8F,GAAU9F,EAAM+F,EAAOmK,IAG9B7E,CACb,KAGS/E,CACT,CA5NamK,CAAeb,EAAK9C,EAAgBE,GAEtC4C,CACX,GACA,CAsCA,IAAM1B,GAA0B,IAAIwC,QA8NpC,IAAMC,GAAsD,CAC1D,OACA,QACA,QACA,WACA,OACA,cACA,iBACA,sBEhWK,SAASC,GAEdxR,EACAyD,GAGA,OAAOgO,KAAgBD,iBAAiBxR,EFsTnC,SACLyD,GAEA,GAAKA,EAKL,OAaF,SACEA,GAEA,OAAOA,aAAgBoM,IAAyB,mBAATpM,CACzC,CAjBMiO,CAAsBjO,IA+B5B,SAA4BA,GAC1B,OAAOpU,OAAOwE,KAAK4P,GAAM/G,MAAK,SAAA5G,GAAA,OAAOyb,GAAmB1U,SAAS/G,EAA4B,GAC/F,CA7BM6b,CAAmBlO,GAHd,CAAEkM,eAAgBlM,GASpBA,CACT,CEzUqDmO,CAA+BnO,GACpF,CA6BO,SAASoO,GAAa9R,EAAc0D,GAEzC,OAAOgO,KAAgBI,aAAa9R,EAAO0D,EAC7C,CAuBO,SAASqO,GAAcC,EAAwBtO,GAEpDgO,KAAgBK,cAAcC,EAAYtO,EAC5C,CAmSO,SAASuO,KAEd,OAAOP,KAAgBO,WACzB,CAYO,SAASC,KAEd,OAAOR,KAAgBS,UACzB,CCtZO,SAASC,GAAYlG,GAG1B,OAAOA,EAAKmG,WACd,CCDO,SAASC,GACdhG,EACAkB,EACAD,GAEA,IAAMxT,EAAUyT,EAAO+E,aAEJC,GAAehF,EAAOiF,UAAY,CAAC,GAA9CC,UAGSC,GAAkBpF,GAASA,EAAMqF,WAAc,CAAC,GAAzDC,QAEF/G,EAAMrN,EAAkB,CAC5ByH,YAAanM,EAAQmM,aAAelB,GACpCiB,QAASlM,EAAQkM,QACjB0M,aAAAA,EACAH,WAAAA,EACAlG,SAAAA,IAKF,OAFAkB,EAAOsF,MAAQtF,EAAOsF,KAAK,YAAahH,GAEjCA,CACT,CAcO,SAASiH,GAAkC7G,GAChD,IAAMsB,EAASyE,KACf,IAAKzE,EACH,MAAO,CAAC,EAIV,IAAM1B,EAAMwG,GAAoC9F,GAAWN,GAAMI,UAAY,GAAIkB,EAAQ0E,MAGnFc,EAAMZ,GAAYlG,GACxB,IAAK8G,EACH,OAAOlH,EAMT,IAAMmH,EAAcD,GAAOA,EAAIE,8BAC/B,GAAID,EACF,OAAOA,EAMT,IAAAE,EAAgDH,EAAII,SAAhCC,EAAeF,EAA3BG,WAA6BrW,EAAAkW,EAAAlW,OACd,MAAnBoW,IACFvH,EAAIyH,YAAY,GAAGF,GAIA,IAAAG,EAAAhH,GAAAwG,GAWA,OARA/V,GAAA,QAAAA,IACA6O,EAAAuG,YAAAmB,EAAAC,aAGA3H,EAAAD,QAAAvP,OAAAyQ,GAAAiG,IAEAxF,EAAAsF,MAAAtF,EAAAsF,KAAA,YAAAhH,GAEAA,CACA,CCrFhB,SAASyE,GAAsBvQ,EAAca,GAClD,IAAQ6S,EAA0D7S,EAA1D6S,YAAaxH,EAA6CrL,EAA7CqL,KAAM8E,EAAuCnQ,EAAvCmQ,YAAa2C,EAA0B9S,EAA1B8S,uBA8G1C,SAA0B3T,EAAca,GACtC,IACEsQ,EAOEtQ,EAPFsQ,MACAxE,EAME9L,EANF8L,KACAvH,EAKEvE,EALFuE,KACA8L,EAIErQ,EAJFqQ,SACAvZ,EAGEkJ,EAHFlJ,MAEAic,EACE/S,EADF+S,gBAGIC,EAAepV,EAAkB0S,GACnC0C,GAAgBvkB,OAAOwE,KAAK+f,GAAc1gB,SAC5C6M,EAAMmR,MAAMjZ,EAAA,GAAO2b,EAAiB7T,EAAMmR,QAG5C,IAAM2C,EAAcrV,EAAkBkO,GAClCmH,GAAexkB,OAAOwE,KAAKggB,GAAa3gB,SAC1C6M,EAAM2M,KAAKzU,EAAA,GAAO4b,EAAgB9T,EAAM2M,OAG1C,IAAMoH,EAActV,EAAkB2G,GAClC2O,GAAezkB,OAAOwE,KAAKigB,GAAa5gB,SAC1C6M,EAAMoF,KAAKlN,EAAA,GAAO6b,EAAgB/T,EAAMoF,OAG1C,IAAM4O,EAAkBvV,EAAkByS,GACtC8C,GAAmB1kB,OAAOwE,KAAKkgB,GAAiB7gB,SAClD6M,EAAMkR,SAAShZ,EAAA,GAAO8b,EAAoBhU,EAAMkR,WAG9CvZ,IACFqI,EAAMrI,MAAQA,GAGZic,IACF5T,EAAMqS,YAAcuB,EAExB,CAjJEK,CAAiBjU,EAAOa,GAKpBqL,GA0JN,SAA0BlM,EAAckM,GACtClM,EAAMkR,SAAAhZ,EAAA,CAAakZ,MAAOnF,GAAmBC,IAAUlM,EAAMkR,UAC7D,IAAMgD,EAAW9B,GAAYlG,GAC7B,GAAIgI,EAAU,CACZlU,EAAM2T,sBAAAzb,EAAA,CACJiR,uBAAwB4J,GAAkC7G,IACvDlM,EAAM2T,uBAEX,IAAMC,EAAkBpH,GAAW0H,GAAUT,YACzCG,IACF5T,EAAM2M,KAAKzU,EAAA,CAAIma,YAAauB,GAAoB5T,EAAM2M,MAE5D,CACA,CAtKIwH,CAAiBnU,EAAOkM,GA4K5B,SAAiClM,EAAc0T,GlBmCjC,IAAAU,EkBjCZpU,EAAM0T,YAAc1T,EAAM0T,alBiCdU,EkBjCqCpU,EAAM0T,YlBkC3CpZ,MAAAC,QAAA6Z,GAAAA,EAAA,CAAAA,IkBlC0D,GAGlEV,IACF1T,EAAM0T,YAAc1T,EAAM0T,YAAYlF,OAAOkF,IAI3C1T,EAAM0T,cAAgB1T,EAAM0T,YAAYvgB,eACnC6M,EAAM0T,WAEjB,CAtLEW,CAAwBrU,EAAO0T,GA0IjC,SAAiC1T,EAAcgR,GAC7C,IAAMsD,EAAkB,GAAA9F,OAAOxO,EAAMgR,aAAe,GAAQA,GAC5DhR,EAAMgR,YAAcsD,EAAkBnhB,OAASmhB,OAAoB7e,CACrE,CA5IE8e,CAAwBvU,EAAOgR,GA8IjC,SAAiChR,EAAc2T,GAC7C3T,EAAM2T,sBAAAzb,EAAA,GACD8H,EAAM2T,sBACNA,EAEP,CAlJEa,CAAwBxU,EAAO2T,EACjC,CAGO,SAAStD,GAAexP,EAAiB4T,GAC9C,IACEtD,EAcEsD,EAdFtD,MACAxE,EAaE8H,EAbF9H,KACAvH,EAYEqP,EAZFrP,KACA8L,EAWEuD,EAXFvD,SACAvZ,EAUE8c,EAVF9c,MACAgc,EASEc,EATFd,sBACA3C,EAQEyD,EARFzD,YACA0C,EAOEe,EAPFf,YACAlD,EAMEiE,EANFjE,gBACAF,EAKEmE,EALFnE,YACAoE,EAIED,EAJFC,mBAEAd,EAEEa,EAFFb,gBACA1H,EACEuI,EADFvI,KAGFyI,GAA2B9T,EAAM,QAASsQ,GAC1CwD,GAA2B9T,EAAM,OAAQ8L,GACzCgI,GAA2B9T,EAAM,OAAQuE,GACzCuP,GAA2B9T,EAAM,WAAYqQ,GAC7CyD,GAA2B9T,EAAM,wBAAyB8S,GAEtDhc,IACFkJ,EAAKlJ,MAAQA,GAGXic,IAEF/S,EAAK+S,gBAAkBA,GAGrB1H,IACFrL,EAAKqL,KAAOA,GAGV8E,EAAY7d,SACd0N,EAAKmQ,YAAY,GAAAxC,OAAM3N,EAAKmQ,YAAgBA,IAG1C0C,EAAYvgB,SACd0N,EAAK6S,YAAY,GAAAlF,OAAM3N,EAAK6S,YAAgBA,IAG1ClD,EAAgBrd,SAClB0N,EAAK2P,gBAAgB,GAAAhC,OAAM3N,EAAK2P,gBAAoBA,IAGlDF,EAAYnd,SACd0N,EAAKyP,YAAY,GAAA9B,OAAM3N,EAAKyP,YAAgBA,IAG9CzP,EAAK6T,mBAAmBxc,EAAA,GAAO2I,EAAK6T,mBAAuBA,EAC7D,CAMO,SAASC,GAGd9T,EAAYvK,EAAYse,GACxB,GAAIA,GAAYtlB,OAAOwE,KAAK8gB,GAAUzhB,OAGpC,IAAK,IAAM4C,KADX8K,EAAKvK,GAAM4B,EAAA,GAAO2I,EAAKvK,IACLse,EACZtlB,OAAOC,UAAUE,eAAegC,KAAKmjB,EAAU7e,KACjD8K,EAAKvK,GAAMP,GAAO6e,EAAS7e,GAInC,CJlEA,IAMIoa,GAMSL,GAAA,WA+DJ,SAAAA,IACLhe,KAAK+iB,qBAAsB,EAC3B/iB,KAAKgjB,gBAAkB,GACvBhjB,KAAKijB,iBAAmB,GACxBjjB,KAAKkjB,aAAe,GACpBljB,KAAKmjB,aAAe,GACpBnjB,KAAKojB,MAAQ,CAAC,EACdpjB,KAAKqjB,MAAQ,CAAC,EACdrjB,KAAKsjB,OAAS,CAAC,EACftjB,KAAKujB,UAAY,CAAC,EAClBvjB,KAAKwjB,uBAAyB,CAAC,EAC/BxjB,KAAKyjB,oBAAsBC,IAC/B,CAEA1F,EAIgBD,MAAP,SAAatC,GAClB,OAAOA,EAAQA,EAAMsC,QAAU,IAAIC,CACvC,EAEA,IAAA7N,EAAA6N,EAAAvgB,UAsjBE,OAtjBF0S,EAGS4N,MAAA,WACL,IAAM4F,EAAW,IAAI3F,EAkBrB,OAjBA2F,EAAST,aAAa,GAAAxG,OAAM1c,KAAKkjB,cACjCS,EAASN,MAAMjd,EAAA,GAAOpG,KAAKqjB,OAC3BM,EAASL,OAAOld,EAAA,GAAOpG,KAAKsjB,QAC5BK,EAASJ,UAAUnd,EAAA,GAAOpG,KAAKujB,WAC/BI,EAASP,MAAQpjB,KAAKojB,MACtBO,EAASC,OAAS5jB,KAAK4jB,OACvBD,EAASE,MAAQ7jB,KAAK6jB,MACtBF,EAASG,SAAW9jB,KAAK8jB,SACzBH,EAASI,iBAAmB/jB,KAAK+jB,iBACjCJ,EAASK,aAAehkB,KAAKgkB,aAC7BL,EAASV,iBAAiB,GAAAvG,OAAM1c,KAAKijB,kBACrCU,EAASM,gBAAkBjkB,KAAKikB,gBAChCN,EAASR,aAAa,GAAAzG,OAAM1c,KAAKmjB,cACjCQ,EAASH,uBAAuBpd,EAAA,GAAOpG,KAAKwjB,wBAC5CG,EAASF,oBAAoBrd,EAAA,GAAOpG,KAAKyjB,qBACzCE,EAASO,QAAUlkB,KAAKkkB,QAEjBP,CACX,EAEAxT,EACSgU,UAAA,SAAUzI,GACf1b,KAAKkkB,QAAUxI,CACnB,EAEAvL,EAKSgQ,UAAA,WACL,OAAOngB,KAAKkkB,OAChB,EAEA/T,EAISiU,iBAAA,SAAiB3e,GACtBzF,KAAKgjB,gBAAgB/hB,KAAKwE,EAC9B,EAEA0K,EAGSkU,kBAAA,SAAkB5e,GAEvB,OADAzF,KAAKijB,iBAAiBhiB,KAAKwE,GACpBzF,IACX,EAEAmQ,EAGSmU,QAAA,SAAQhR,GAgBb,OAbAtT,KAAKojB,MAAQ9P,GAAQ,CACnBI,WAAO/P,EACPC,QAAID,EACJ6P,gBAAY7P,EACZod,aAASpd,EACTgQ,cAAUhQ,GAGR3D,KAAK8jB,UACP3Q,GAAcnT,KAAK8jB,SAAU,CAAExQ,KAAAA,IAGjCtT,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS2Q,QAAA,WACL,OAAO9gB,KAAKojB,KAChB,EAEAjT,EAGSqU,kBAAA,WACL,OAAOxkB,KAAKikB,eAChB,EAEA9T,EAGSsU,kBAAA,SAAkBC,GAEvB,OADA1kB,KAAKikB,gBAAkBS,EAChB1kB,IACX,EAEAmQ,EAGSwU,QAAA,SAAQ9J,GAMb,OALA7a,KAAKqjB,MAAAjd,EAAA,GACApG,KAAKqjB,MACLxI,GAEL7a,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSyU,OAAA,SAAO3gB,EAAa3F,GAAwB,IAAAumB,EAGjD,OAFA7kB,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,QAAKwB,EAAA,IAAG5gB,GAAM3F,EAAAumB,IACrC7kB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS2U,UAAA,SAAUC,GAMf,OALA/kB,KAAKsjB,OAAAld,EAAA,GACApG,KAAKsjB,OACLyB,GAEL/kB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS6U,SAAA,SAAS/gB,EAAaob,GAAoB,IAAA4F,EAG/C,OAFAjlB,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,SAAM2B,EAAA,IAAGhhB,GAAMob,EAAA4F,IACvCjlB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS+U,eAAA,SAAetD,GAGpB,OAFA5hB,KAAKgkB,aAAepC,EACpB5hB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSgV,SAAA,SAELtf,GAIA,OAFA7F,KAAK4jB,OAAS/d,EACd7F,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSiV,mBAAA,SAAmB3jB,GAGxB,OAFAzB,KAAK+jB,iBAAmBtiB,EACxBzB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSkV,WAAA,SAAWphB,EAAaoP,GAS7B,OARgB,OAAZA,SAEKrT,KAAKujB,UAAUtf,GAEtBjE,KAAKujB,UAAUtf,GAAOoP,EAGxBrT,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAKSmV,QAAA,SAAQlL,GAGb,OAFApa,KAAK6jB,MAAQzJ,EACbpa,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAISoV,QAAA,WACL,OAAOvlB,KAAK6jB,KAChB,EAEA1T,EAISqV,eAAA,WAGL,IAAMpL,EAAOpa,KAAK6jB,MAIlB,OAAOzJ,GAAQA,EAAKmG,WACxB,EAEApQ,EAGSsV,WAAA,SAAWrS,GAOhB,OANKA,EAGHpT,KAAK8jB,SAAW1Q,SAFTpT,KAAK8jB,SAId9jB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSuV,WAAA,WACL,OAAO1lB,KAAK8jB,QAChB,EAEA3T,EAGS8N,OAAA,SAAOH,GACZ,IAAKA,EACH,OAAO9d,KAGT,IAAM2lB,EAAyC,mBAAnB7H,EAAgCA,EAAe9d,MAAQ8d,EAEnF,GAAI6H,aAAwB3H,EAAO,CACjC,IAAM4H,EAAYD,EAAarH,eAE/Bte,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,MAAUuC,EAAU/K,MAC3C7a,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,OAAWsC,EAAUvG,OAC7Crf,KAAKujB,UAAUnd,EAAA,GAAOpG,KAAKujB,UAAcqC,EAAUxG,UAC/CwG,EAAUtS,MAAQ9V,OAAOwE,KAAK4jB,EAAUtS,MAAMjS,SAChDrB,KAAKojB,MAAQwC,EAAUtS,MAErBsS,EAAU/f,QACZ7F,KAAK4jB,OAASgC,EAAU/f,OAEtB+f,EAAUhE,YAAYvgB,SACxBrB,KAAKgkB,aAAe4B,EAAUhE,aAE5B+D,EAAanB,sBACfxkB,KAAKikB,gBAAkB0B,EAAanB,qBAElCoB,EAAUhD,qBACZ5iB,KAAKyjB,oBAAsBmC,EAAUhD,mBAE7C,MAAW,GAAIxb,EAAcue,GAAe,CACtC,IAAME,EAAe/H,EACrB9d,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,MAAUwC,EAAahL,MAC9C7a,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,OAAWuC,EAAaxG,OAChDrf,KAAKujB,UAAUnd,EAAA,GAAOpG,KAAKujB,UAAcsC,EAAazG,UAClDyG,EAAavS,OACftT,KAAKojB,MAAQyC,EAAavS,MAExBuS,EAAahgB,QACf7F,KAAK4jB,OAASiC,EAAahgB,OAEzBggB,EAAajE,cACf5hB,KAAKgkB,aAAe6B,EAAajE,aAE/BiE,EAAanB,iBACf1kB,KAAKikB,gBAAkB4B,EAAanB,gBAElCmB,EAAajD,qBACf5iB,KAAKyjB,oBAAsBoC,EAAajD,mBAEhD,CAEI,OAAO5iB,IACX,EAEAmQ,EAGS2V,MAAA,WAeL,OAdA9lB,KAAKkjB,aAAe,GACpBljB,KAAKqjB,MAAQ,CAAC,EACdrjB,KAAKsjB,OAAS,CAAC,EACftjB,KAAKojB,MAAQ,CAAC,EACdpjB,KAAKujB,UAAY,CAAC,EAClBvjB,KAAK4jB,YAASjgB,EACd3D,KAAK+jB,sBAAmBpgB,EACxB3D,KAAKgkB,kBAAergB,EACpB3D,KAAKikB,qBAAkBtgB,EACvB3D,KAAK6jB,WAAQlgB,EACb3D,KAAK8jB,cAAWngB,EAChB3D,KAAKukB,wBACLvkB,KAAKmjB,aAAe,GACpBnjB,KAAKyjB,oBAAsBC,KACpB1jB,IACX,EAEAmQ,EAGS8P,cAAA,SAAcC,EAAwB6F,GAC3C,IAAMC,EAAsC,iBAAnBD,EAA8BA,EAja3B,IAoa5B,GAAIC,GAAa,EACf,OAAOhmB,KAGT,IAAMimB,EAAA7f,EAAA,CACJwN,UAAW5B,MACRkO,GAGChB,EAAclf,KAAKkjB,aAMzB,OALAhE,EAAYje,KAAKglB,GACjBjmB,KAAKkjB,aAAehE,EAAY7d,OAAS2kB,EAAY9G,EAAY5c,OAAO0jB,GAAa9G,EAErFlf,KAAKukB,wBAEEvkB,IACX,EAEAmQ,EAGS+V,kBAAA,WACL,OAAOlmB,KAAKkjB,aAAaljB,KAAKkjB,aAAa7hB,OAAS,EACxD,EAEA8O,EAGSgW,iBAAA,WAGL,OAFAnmB,KAAKkjB,aAAe,GACpBljB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSiW,cAAA,SAAcC,GAEnB,OADArmB,KAAKmjB,aAAaliB,KAAKolB,GAChBrmB,IACX,EAEAmQ,EAISmW,eAAA,WAGL,OAFatmB,KAAKse,eAENE,WAChB,EAEArO,EAGSoW,iBAAA,WAEL,OADAvmB,KAAKmjB,aAAe,GACbnjB,IACX,EAEAmQ,EACSmO,aAAA,WAiBL,MAAO,CACLY,YAHElf,KAbFkjB,aAiBA1E,YAJExe,KAZFmjB,aAiBA/D,SALEpf,KAXFujB,UAiBA1I,KANE7a,KAVFqjB,MAiBAhE,MAPErf,KATFsjB,OAiBAhQ,KAREtT,KARFojB,MAiBAvd,MATE7F,KAPF4jB,OAiBAhC,YAVE5hB,KANFgkB,cAgB6B,GAC7BtF,gBAXE1e,KALFijB,iBAiBAL,mBAZE5iB,KAJFyjB,oBAiBA5B,sBAbE7hB,KAHFwjB,uBAiBA1B,gBAdE9hB,KAFF+jB,iBAiBA3J,KAfEpa,KADF6jB,MAkBN,EAEA1T,EAQSqW,aAAA,SACLtY,EACA0D,EACA6U,GAYA,YAbI,IAAJ7U,IAAAA,EAAkB,CAAC,QACM,IAAzB6U,IAAAA,EAA8C,IAE9ChI,GAAsBvQ,EAAOlO,KAAKse,gBAU3B5M,GAPc,GAAAgL,OAChB+J,EAEAjV,KACAxR,KAAKijB,kBAGoC/U,EAAO0D,EACzD,EAEAzB,EAGSuW,yBAAA,SAAyBC,GAG9B,OAFA3mB,KAAKwjB,uBAAuBpd,EAAA,GAAOpG,KAAKwjB,uBAA2BmD,GAE5D3mB,IACX,EAEAmQ,EAGSyW,sBAAA,SAAsBvT,GAE3B,OADArT,KAAKyjB,oBAAsBpQ,EACpBrT,IACX,EAEAmQ,EAGS0W,sBAAA,WACL,OAAO7mB,KAAKyjB,mBAChB,EAEAtT,EAOSwP,iBAAA,SAAiBxR,EAAoByD,GAC1C,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IAExD,IAAKtN,KAAKkkB,QAER,OADAle,EAAO8gB,KAAK,+DACLzY,EAGT,IAAM0Y,EAAqB,IAAIloB,MAAM,6BAarC,OAXAmB,KAAKkkB,QAAQvE,iBACXxR,EAAS/H,EAAA,CAEP4gB,kBAAmB7Y,EACnB4Y,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,IAEZrO,MAGKqO,CACX,EAEA8B,EAQS8W,eAAA,SAAelb,EAAiBlG,EAAuB+L,GAC5D,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IAExD,IAAKtN,KAAKkkB,QAER,OADAle,EAAO8gB,KAAK,6DACLzY,EAGT,IAAM0Y,EAAqB,IAAIloB,MAAMkN,GAcrC,OAZA/L,KAAKkkB,QAAQ+C,eACXlb,EACAlG,EAAKO,EAAA,CAEH4gB,kBAAmBjb,EACnBgb,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,IAEZrO,MAGKqO,CACX,EAEA8B,EAOS6P,aAAA,SAAa9R,EAAc0D,GAChC,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IAExD,OAAKtN,KAAKkkB,SAKVlkB,KAAKkkB,QAAQlE,aAAa9R,EAAK9H,EAAA,GAAOwL,EAAM,CAAAtD,SAAUD,IAAWrO,MAE1DqO,IANLrI,EAAO8gB,KAAK,2DACLzY,EAMb,EAEA8B,EAGYoU,sBAAA,WAA8B,IAAAjU,EAAA,KAIjCtQ,KAAK+iB,sBACR/iB,KAAK+iB,qBAAsB,EAC3B/iB,KAAKgjB,gBAAgBziB,SAAQ,SAAAkF,GAC3BA,EAAS6K,EACjB,IACMtQ,KAAK+iB,qBAAsB,EAEjC,EAAE/E,CAAA,CA3oBW,GAmqBb,SAAS0F,KACP,MAAO,CACLtK,QAAS9L,IACTwM,OAAQxM,IAAQuM,UAAU,IAE9B,CKvtBO,IAAMqN,GAAc,UC8CdC,GAAcC,WAAWF,IAwEzBG,GAAA,WAyDJ,SAAAA,EACL3L,EACAD,EACAE,EACiB2L,GAEjB,IAAIC,EAQAC,OAVqB,IAARF,IAAAA,EAAmBH,IACpC,KAAAG,SAAAA,EAEK7L,EAIH8L,EAAgB9L,GAHhB8L,EAAgB,IAAIvJ,IACNmG,UAAUzI,GAMrBC,EAIH6L,EAAyB7L,GAHzB6L,EAAyB,IAAIxJ,IACNmG,UAAUzI,GAKnC1b,KAAKynB,OAAS,CAAC,CAAEhM,MAAO8L,IAEpB7L,GAEF1b,KAAK0nB,WAAWhM,GAGlB1b,KAAK2nB,gBAAkBH,CAC3B,CAEA,IAAArX,EAAAkX,EAAA5pB,UAygBE,OAzgBF0S,EAQSyX,YAAA,SAAYC,GACjB,OAAO7nB,KAAKsnB,SAAWO,CAC3B,EAEA1X,EAMSuX,WAAA,SAAWhM,GAEhB,IAAMoM,EAAM9nB,KAAK+nB,cACjBD,EAAIpM,OAASA,EACboM,EAAIrM,MAAM0I,UAAUzI,GAEhBA,GAAUA,EAAOsM,mBAEnBtM,EAAOsM,mBAEb,EAEA7X,EAKS8X,UAAA,WAGL,IAAMxM,EAAQzb,KAAKqgB,WAAWtC,QAO9B,OALA/d,KAAKkoB,WAAWjnB,KAAK,CAEnBya,OAAQ1b,KAAKmgB,YACb1E,MAAAA,IAEKA,CACX,EAEAtL,EAKSgY,SAAA,WAEL,QAAInoB,KAAKkoB,WAAW7mB,QAAU,IAErBrB,KAAKkoB,WAAWhmB,MAC7B,EAEAiO,EAKSiY,UAAA,SAAa3iB,GAAkC,IAIhD4iB,EAJgD/X,EAAA,KAE9CmL,EAAQzb,KAAKioB,YAGnB,IACEI,EAAqB5iB,EAASgW,EACpC,CAAM,MAAOle,GAGP,MADAyC,KAAKmoB,WACC5qB,CACZ,CAEI,OAAIgK,EAAW8gB,GAENA,EAAmBznB,MACxB,SAAA0nB,GAGE,OADAhY,EAAK6X,WACEG,CACjB,IACQ,SAAA/qB,GAGE,MADA+S,EAAK6X,WACC5qB,CAChB,KAKIyC,KAAKmoB,WACEE,EACX,EAEAlY,EAKSgQ,UAAA,WAEL,OAAOngB,KAAK+nB,cAAcrM,MAC9B,EAEAvL,EAKSkQ,SAAA,WAEL,OAAOrgB,KAAK+nB,cAActM,KAC9B,EAEAtL,EAGSoY,kBAAA,WACL,OAAOvoB,KAAK2nB,eAChB,EAEAxX,EAIS+X,SAAA,WACL,OAAOloB,KAAKynB,MAChB,EAEAtX,EAIS4X,YAAA,WACL,OAAO/nB,KAAKynB,OAAOznB,KAAKynB,OAAOpmB,OAAS,EAC5C,EAEA8O,EAKSwP,iBAAA,SAAiBxR,EAAoByD,GAC1C,IAAMvD,EAAWrO,KAAKwoB,aAAe5W,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IACvEyZ,EAAqB,IAAIloB,MAAM,6BASrC,OAPAmB,KAAKqgB,WAAWV,iBAAiBxR,EAAS/H,EAAA,CACxC4gB,kBAAmB7Y,EACnB4Y,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,KAGLA,CACX,EAEA8B,EAKS8W,eAAA,SACLlb,EAEAlG,EACA+L,GAEA,IAAMvD,EAAWrO,KAAKwoB,aAAe5W,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IACvEyZ,EAAqB,IAAIloB,MAAMkN,GASrC,OAPA/L,KAAKqgB,WAAW4G,eAAelb,EAASlG,EAAKO,EAAA,CAC3C4gB,kBAAmBjb,EACnBgb,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,KAGLA,CACX,EAEA8B,EAKS6P,aAAA,SAAa9R,EAAc0D,GAChC,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,IAMxD,OALKY,EAAMzO,OACTO,KAAKwoB,aAAena,GAGtBrO,KAAKqgB,WAAWL,aAAa9R,EAAK9H,EAAA,GAAOwL,EAAM,CAAAtD,SAAUD,KAClDA,CACX,EAEA8B,EAKSsY,YAAA,WACL,OAAOzoB,KAAKwoB,YAChB,EAEArY,EAKS8P,cAAA,SAAcC,EAAwBtO,GAE3C,IAAA8W,EAA0B1oB,KAAK+nB,cAAvBtM,EAAKiN,EAALjN,MAAOC,EAAAgN,EAAAhN,OAEf,GAAKA,EAAL,CAEA,IAAAhC,EACGgC,EAAO+E,YAAc/E,EAAO+E,cAAiB,CAAC,EAACkI,EAAAjP,EAD1CkP,iBAAAA,OAAiB,IAAAD,EAAE,KAAIA,EAAAE,EAAAnP,EAAEqM,eAAAA,OAAA,IAAA8C,EAvXT,IAuX0BA,EAGlD,KAAI9C,GAAkB,GAAtB,CAEA,IACME,EAAA7f,EAAA,CAAqBwN,UADT5B,MACuBkO,GACnC4I,EAAkBF,EACnBpjB,GAAe,kBAAMojB,EAAiB3C,EAAkBrU,EAAK,IAC9DqU,EAEoB,OAApB6C,IAEApN,EAAOsF,MACTtF,EAAOsF,KAAK,sBAAuB8H,EAAiBlX,GAWtD6J,EAAMwE,cAAc6I,EAAiB/C,GAtBN,CALZ,CA4BvB,EAEA5V,EAISmU,QAAA,SAAQhR,GAGbtT,KAAKqgB,WAAWiE,QAAQhR,GAExBtT,KAAKuoB,oBAAoBjE,QAAQhR,EACrC,EAEAnD,EAISwU,QAAA,SAAQ9J,GAGb7a,KAAKqgB,WAAWsE,QAAQ9J,GAExB7a,KAAKuoB,oBAAoB5D,QAAQ9J,EACrC,EAEA1K,EAIS2U,UAAA,SAAUC,GAGf/kB,KAAKqgB,WAAWyE,UAAUC,GAE1B/kB,KAAKuoB,oBAAoBzD,UAAUC,EACvC,EAEA5U,EAISyU,OAAA,SAAO3gB,EAAa3F,GAGzB0B,KAAKqgB,WAAWuE,OAAO3gB,EAAK3F,GAE5B0B,KAAKuoB,oBAAoB3D,OAAO3gB,EAAK3F,EACzC,EAEA6R,EAIS6U,SAAA,SAAS/gB,EAAaob,GAG3Brf,KAAKqgB,WAAW2E,SAAS/gB,EAAKob,GAE9Brf,KAAKuoB,oBAAoBvD,SAAS/gB,EAAKob,EAC3C,EAMAlP,EACSkV,WAAA,SAAW5jB,EAAc4R,GAG9BrT,KAAKqgB,WAAWgF,WAAW5jB,EAAM4R,GAEjCrT,KAAKuoB,oBAAoBlD,WAAW5jB,EAAM4R,EAC9C,EAEAlD,EAKS4Y,eAAA,SAAetjB,GAEpB,IAAAujB,EAA0BhpB,KAAK+nB,cAAvBtM,EAAKuN,EAALvN,MAAOuN,EAAAtN,QAEbjW,EAASgW,EAEf,EAKAtL,EACS8Y,IAAA,SAAIxjB,GAET,IAAMyjB,EAASC,GAASnpB,MACxB,IACEyF,EAASzF,KACf,SAEMmpB,GAASD,EACf,CACA,EAEA/Y,EAISiZ,eAAA,SAAsCC,GAE3C,IAAM3N,EAAS1b,KAAKmgB,YACpB,IAAKzE,EAAQ,OAAO,KACpB,IAEE,OAAOA,EAAO0N,eAAeC,EACnC,CAAM,MAAOrgB,GAEP,OAAO,IACb,CACA,EAEAmH,EAmBSmZ,iBAAA,SAAiBjW,EAA6BkW,GAkBnD,OAjBevpB,KAAKwpB,qBAAkC,mBAAoBnW,EAASkW,EAkBvF,EAEApZ,EAISsZ,aAAA,WACL,OAAOzpB,KAAKwpB,qBAAgD,eAChE,EAEArZ,EAKSuZ,eAAA,SAAeC,GAEpB,QAF8B,IAAVA,IAAAA,GAAsB,GAEtCA,EAEF,OAAO3pB,KAAK2pB,aAId3pB,KAAK4pB,oBACT,EAEAzZ,EAISwZ,WAAA,WAEL,IACMlO,EADQzb,KAAK+nB,cACCtM,MACdrI,EAAUqI,EAAMiK,aAClBtS,GdjhBW,SAAAA,GACA,IAAAC,EAAA,GAGA,OAAAD,EAAAmB,SACAlB,EAAA,CAAAkB,OAAA,WAGApB,GAAAC,EAAAC,EACA,CcygBbwW,CAAazW,GAEfpT,KAAK4pB,qBAGLnO,EAAMgK,YACV,EAEAtV,EAIS2Z,aAAA,SAAazW,GAElB,IAAA0W,EAA0B/pB,KAAK+nB,cAAvBtM,EAAKsO,EAALtO,MAAOC,EAAAqO,EAAArO,OACfxD,EAAwDwD,GAAUA,EAAO+E,cAAiB,CAAC,EAAnFtM,EAAO+D,EAAP/D,QAAO6V,EAAA9R,EAAE9D,YAAAA,OAAA,IAAA4V,EAAc9W,GAAA8W,EAGvB3V,GAAcvP,EAAWmlB,WAAa,CAAC,GAAvC5V,UAEFjB,EdjpBH,SAAqBC,GAE1B,IAAM6W,EAAe/X,KAEfiB,EAAmB,CACvBW,IAAKzG,IACL0G,MAAM,EACNJ,UAAWsW,EACXjW,QAASiW,EACThW,SAAU,EACVK,OAAQ,KACRD,OAAQ,EACRR,gBAAgB,EAChB+C,OAAQ,WAAF,OAkHS,SAAAzD,GACA,OAAAzG,EAAA,CACAoH,IAAA,GAAAX,EAAAW,IACAC,KAAAZ,EAAAY,KAEAC,QAAA,IAAAhC,KAAA,IAAAmB,EAAAa,SAAAkW,cACAvW,UAAA,IAAA3B,KAAA,IAAAmB,EAAAQ,WAAAuW,cACA5V,OAAAnB,EAAAmB,OACAD,OAAAlB,EAAAkB,OACAb,IAAA,iBAAAL,EAAAK,KAAA,iBAAAL,EAAAK,IAAA,GAAAL,EAAAK,SAAA9P,EACAuQ,SAAAd,EAAAc,SACAL,mBAAAT,EAAAS,mBACAuW,MAAA,CACAjW,QAAAf,EAAAe,QACAC,YAAAhB,EAAAgB,YACAZ,WAAAJ,EAAAG,UACA8W,WAAAjX,EAAAiB,YAGA,CArIDiW,CAAclX,EAAQ,GAOtC,OAJIC,GACFF,GAAcC,EAASC,GAGlBD,CACT,Cc4nBoBmX,CAAWnkB,EAAC,CAC1B+N,QAAAA,EACAC,YAAAA,EACAd,KAAMmI,EAAMqF,WACRzM,GAAa,CAAEA,UAAAA,GAChBhB,IAICmX,EAAiB/O,EAAMiK,YAAcjK,EAAMiK,aAUjD,OATI8E,GAA4C,OAA1BA,EAAejW,QACnCpB,GAAcqX,EAAgB,CAAEjW,OAAQ,WAG1CvU,KAAK2pB,aAGLlO,EAAMgK,WAAWrS,GAEVA,CACX,EAEAjD,EAOSsa,qBAAA,WAEL,IAAM/O,EAAS1b,KAAKmgB,YACdlY,EAAUyT,GAAUA,EAAO+E,aACjC,OAAOjZ,QAAQS,GAAWA,EAAQyiB,eACtC,EAEAva,EAGUyZ,mBAAA,WAEN,IAAAe,EAA0B3qB,KAAK+nB,cAAvBtM,EAAKkP,EAALlP,MAAOC,EAAAiP,EAAAjP,OAETtI,EAAUqI,EAAMiK,aAClBtS,GAAWsI,GAAUA,EAAOgO,gBAC9BhO,EAAOgO,eAAetW,EAE5B,EAMAjD,EACUqZ,qBAAA,SAAwBzqB,GAC9B,IACM6rB,EADUC,KACOxlB,WACvB,GAAIulB,GAAUA,EAAOE,YAAmD,mBAA9BF,EAAOE,WAAW/rB,GAAwB,SAAAgsB,EAAAxkB,UAAAlF,OAHnC2pB,EAAI,IAAAxiB,MAAAuiB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA1kB,UAAA0kB,GAInD,OAAOL,EAAOE,WAAW/rB,GAAQyH,MAAMxG,KAAMgrB,EACnD,CAEA,EAAE3D,CAAA,CAlmBW,GA4mBN,SAASwD,KAKd,OAJA/lB,EAAWO,WAAaP,EAAWO,YAAc,CAC/CylB,WAAY,CAAC,EACbI,SAAKvnB,GAEAmB,CACT,CAUO,SAASqkB,GAAS+B,GACvB,IAAMC,EAAWN,KACX3B,EAASkC,GAAkBD,GAEjC,OADAE,GAAgBF,EAAUD,GACnBhC,CACT,CAYO,SAAStJ,KAEd,IAAMuL,EAAWN,KAEjB,GAAIM,EAAS9lB,YAAc8lB,EAAS9lB,WAAWimB,IAAK,CAClD,IAAMJ,EAAMC,EAAS9lB,WAAWimB,IAAI1L,gBAEpC,GAAIsL,EACF,OAAOA,CAEb,CAGE,OAcF,SAAsBC,GAapB,YAb4B,IAARA,IAAAA,EAAoBN,MA0EjBU,EAtEJJ,KAuETI,GAAWA,EAAQlmB,YAAckmB,EAAQlmB,WAAW6lB,OArE5DE,GAAkBD,GAAUvD,YAAYT,KAGxCkE,GAAgBF,EAAU,IAAI9D,IAIzB+D,GAAkBD,GA6D3B,IAAyBI,CA5DzB,CA5BSC,CAAaL,EACtB,CAOO,SAAS5C,KAEd,OAAO3I,KAAgB2I,mBACzB,CAwFO,SAAS6C,GAAkBG,GAEhC,OAAOrmB,EAAwB,OAAO,kBAAM,IAAImiB,EAAK,GAAEkE,EACzD,CASO,SAASF,GAAgBE,EAAkBL,GAChD,QAAKK,KACeA,EAAQlmB,WAAakmB,EAAQlmB,YAAc,CAAC,GACrD6lB,IAAMA,GACV,EACT,wGC72Ba,IAAAO,GAAkC,GA0FxC,SAASC,GAAuBhQ,EAAgBO,GACrD,IAAK,IAAiC0P,EAAtCC,gsBAAAC,CAA0B5P,KAAY0P,EAAAC,KAAA9sB,MAAE,KAA7BuqB,EAAYsC,EAAArtB,MAEjB+qB,GAAeA,EAAYyC,eAC7BzC,EAAYyC,cAAcpQ,EAEhC,CACA,CAGO,SAASqQ,GAAiBrQ,EAAgB2N,EAA0B2C,GACzE,IAAIA,EAAiB3C,EAAY5nB,MAAjC,CAkBsG,GAdAuqB,EAAA3C,EAAA5nB,MAAA4nB,GAGA,IAAAoC,GAAAQ,QAAA5C,EAAA5nB,QAEA4nB,EAAA6C,UAAAza,GAAAmO,IACA6L,GAAAxqB,KAAAooB,EAAA5nB,OAIA4nB,EAAA8C,OAAA,mBAAA9C,EAAA8C,OACA9C,EAAA8C,MAAAzQ,GAGAA,EAAA0Q,IAAA,mBAAA/C,EAAAgD,gBAAA,CACA,IAAA5mB,EAAA4jB,EAAAgD,gBAAA/lB,KAAA+iB,GACA3N,EAAA0Q,GAAA,4BAAAle,EAAA0D,GAAA,OAAAnM,EAAAyI,EAAA0D,EAAA8J,EAAA,GACA,CAEA,GAAAA,EAAA2I,mBAAA,mBAAAgF,EAAAiD,aAAA,CACA,IAAA7mB,EAAA4jB,EAAAiD,aAAAhmB,KAAA+iB,GAEAvX,EAAAtU,OAAA6I,QAAA,SAAA6H,EAAA0D,GAAA,OAAAnM,EAAAyI,EAAA0D,EAAA8J,EAAA,IACA9X,GAAAylB,EAAA5nB,OAGAia,EAAA2I,kBAAAvS,EACA,CA5BA,CA+BA,CA+BA,SAAAya,GACA9qB,EACAmT,GAEA,OAAApX,OAAA6I,QACA,WACA,OAAAuO,EAAApO,WAAA,EAAAD,UACA,GACA,CAAA3C,GAAAnC,GAEA,CC/LxG,ICHI+qB,GDGEC,GAAwB,CAC5B,oBACA,gDACA,kEACA,yCAGIC,GAA8B,CAClC,oBACA,gBACA,aACA,cACA,kBACA,eACA,iBAcIC,GAAmB,iBAcZC,GAbuB,SAAC3kB,GACnC,YAD0C,IAAPA,IAAAA,EAA0C,CAAC,GACvE,CACLxG,KAAMkrB,GAENT,UAAS,WAAI,EACbI,aAAY,SAACpe,EAAO2e,EAAOnR,GACzB,IAAMoR,EAAgBpR,EAAO+E,aACvBsM,EA8BZ,SACEC,EACAF,GAEA,YAHe,IAAfE,IAAAA,EAAkD,CAAC,QACtC,IAAbF,IAAAA,EAAgD,CAAC,GAE1C,CACLG,UAAW,GAAFvQ,OAAOsQ,EAAgBC,WAAa,GAASH,EAAcG,WAAa,IACjFC,SAAU,GAAFxQ,OAAOsQ,EAAgBE,UAAY,GAASJ,EAAcI,UAAY,IAC9EC,aAAc,GAAFzQ,OACNsQ,EAAgBG,cAAgB,GAChCL,EAAcK,cAAgB,GAC9BH,EAAgBI,qBAAuB,GAAKX,IAElDY,mBAAoB,GAAF3Q,OACZsQ,EAAgBK,oBAAsB,GACtCP,EAAcO,oBAAsB,GACpCL,EAAgBM,2BAA6B,GAAKZ,IAExDa,oBAAmD5pB,IAAnCqpB,EAAgBO,gBAA+BP,EAAgBO,eAEnF,CAjD4BC,CAAcvlB,EAAS6kB,GAC7C,OAkDN,SAA0B5e,EAAcjG,GACtC,SAAIA,EAAQslB,iBA4G4F,SAAArf,GACA,IAGA,sBAAAA,EAAAC,UAAAhM,OAAA,GAAA1C,IACA,OAAAlC,GACA,CAEA,QACA,CArH1EkwB,CAAevf,QAwC2D,SAAAA,EAAAif,GAEA,QAAAjf,EAAAzO,OAAA0tB,IAAAA,EAAA9rB,SAkCA,SAAA6M,GACA,IAMAwf,EANAC,EAAA,GAEAzf,EAAAnC,SACA4hB,EAAA1sB,KAAAiN,EAAAnC,SAIA,IAGA2hB,EAAAxf,EAAAC,UAAAhM,OAAA+L,EAAAC,UAAAhM,OAAAd,OAAA,EACA,OAAA9D,GACA,CAgBA,OAbAmwB,GACAA,EAAApvB,QACAqvB,EAAA1sB,KAAAysB,EAAApvB,OACAovB,EAAAjuB,MACAkuB,EAAA1sB,KAAAysB,EAAAjuB,KAAA,KAAAiuB,EAAApvB,QASAqvB,CACA,CA5DAC,CAAA1f,GAAArD,MAAA,SAAAkB,GAAA,OAAAtB,EAAAsB,EAAAohB,EAAA,GACA,CA1CAU,CAAA3f,EAAAjG,EAAAklB,kBA4CA,SAAAjf,EAAAmf,GACA,mBAAAnf,EAAAzO,OAAA4tB,IAAAA,EAAAhsB,OACA,SAGA,IAAAI,EAAAyM,EAAAqS,YACA,QAAA9e,GAAAgJ,EAAAhJ,EAAA4rB,EACA,CA5CAS,CAAA5f,EAAAjG,EAAAolB,wBA8CA,SAAAnf,EAAAgf,GAEA,IAAAA,IAAAA,EAAA7rB,OACA,SAEA,IAAAib,EAAAyR,GAAA7f,GACA,QAAAoO,GAAA7R,EAAA6R,EAAA4Q,EACA,CA9CAc,CAAA9f,EAAAjG,EAAAilB,YAgDA,SAAAhf,EAAA+e,GAEA,IAAAA,IAAAA,EAAA5rB,OACA,SAEA,IAAAib,EAAAyR,GAAA7f,GACA,OAAAoO,GAAA7R,EAAA6R,EAAA2Q,EACA,CA9CAgB,CAAA/f,EAAAjG,EAAAglB,aAUA,CAzF7FiB,CAAiBhgB,EAAO6e,GAAiB,KAAO7e,CAC7D,EAEA,EASaigB,GAAiB5B,GAC5BI,GACAC,IAwKwG,SAAAmB,GAAA7f,GACA,IACA,IAAAuP,EACA,IAEAA,EAAAvP,EAAAC,UAAAhM,OAAA,GAAAqb,WAAAC,MACA,OAAAlgB,GACA,CAEA,OAAAkgB,EArBA,SAAAA,QAAA,IAAAA,IAAAA,EAAA,IACA,QAAA3f,EAAA2f,EAAApc,OAAA,EAAAvD,GAAA,EAAAA,IAAA,CACA,IAAA4f,EAAAD,EAAA3f,GAEA,GAAA4f,GAAA,gBAAAA,EAAAH,UAAA,kBAAAG,EAAAH,SACA,OAAAG,EAAAH,UAAA,IAEA,CAEA,WACA,CAWA6Q,CAAA3Q,GAAA,IACA,OAAA4Q,GAEA,WACA,CACA,CC1O1G,IAAM1B,GAAmB,mBAEnB2B,GAAgB,IAAI7O,QAwCb8O,GAtCyB,WACpC,MAAO,CACL9sB,KAAMkrB,GACNT,UAAS,WAEPM,GAA2BppB,SAAS3F,UAAUqF,SAI9C,IAEEM,SAAS3F,UAAUqF,SAAW,WAG0E,IAFtG,IAAM0rB,EAAmB7iB,EAAoB3L,MACvCqT,EACJib,GAAcxY,IAAIqK,YAA+Cxc,IAArB6qB,EAAiCA,EAAmBxuB,KAAI+qB,EAAAxkB,UAAAlF,OAHtC2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GAIpE,OAAOuB,GAAyBhmB,MAAM6M,EAAS2X,EACzD,CACA,CAAQ,MAAMztB,GACd,CAEA,EACI4uB,MAAK,SAACzQ,GACJ4S,GAAchqB,IAAIoX,GAAQ,EAChC,EAEA,EAqBa+S,GAAmBlC,GAC9BI,GACA4B,IC9CWzmB,GAAShD,EAElB4pB,GAAwB,EAKrB,SAASC,KACd,OAAOD,GAAgB,CACzB,CAsBO,SAAS9uB,GACdgV,EACA3M,EAGA2mB,GAUA,QAbO,IAAP3mB,IAAAA,EAEI,CAAC,GAWa,mBAAP2M,EACT,OAAOA,EAGT,IAGE,IAAMia,EAAUja,EAAGka,mBACnB,GAAID,EACF,MAAuB,mBAAZA,EACFA,EAIAja,EAKX,GAAIjJ,EAAoBiJ,GACtB,OAAOA,CAEb,CAAI,MAAOrX,GAIP,OAAOqX,CACX,CAIE,IAAMma,EAAiC,WACrC,IAAM/D,EAAOxiB,MAAM/K,UAAU6E,MAAM3C,KAAK4G,WAExC,IACMqoB,GAA4B,mBAAXA,GACnBA,EAAOpoB,MAAMxG,KAAMuG,WAIrB,IAAMyoB,EAAmBhE,EAAKphB,KAAI,SAAC5K,GAAG,OAAUY,GAAKZ,EAAKiJ,EAAQ,IAMlE,OAAO2M,EAAGpO,MAAMxG,KAAMgvB,EAC5B,CAAM,MAAOC,GAqBP,MAlGJP,KACAQ,YAAW,WACTR,IACJ,ITmKO,WAMP,IAFE,IAAMxD,EAAMtL,KAEdmL,EAAAxkB,UAAAlF,OALK8tB,EAAI,IAAA3mB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJkE,EAAIlE,GAAA1kB,UAAA0kB,GAMP,GAAoB,IAAhBkE,EAAK9tB,OAAc,CACrB,IAAOoa,EAAmB0T,EAAI,GAAhB1pB,EAAY0pB,EAAI,GAC9B,OAAK1T,EAMEyP,EAAI9C,WAAU,WAGnB,OADA8C,EAAInD,cAActM,MAAQA,EACnBhW,EAASgW,EACtB,IARayP,EAAI9C,UAAU3iB,EAS3B,CAGSylB,EAAI9C,UAAU+G,EAAK,GAC5B,CS9GM/G,EAAU,SAAA3M,GACRA,EAAM4I,mBAAkB,SAAAnW,GAWtB,OAVIjG,EAAQ2G,YACVJ,EAAsBN,OAAOvK,OAAWA,GACxC8K,EAAsBP,EAAOjG,EAAQ2G,YAGvCV,EAAMmR,MAAAjZ,EAAA,GACD8H,EAAMmR,MAAK,CACd9Y,UAAWykB,IAGN9c,CACjB,IAEQyR,GAAiBsP,EACzB,IAEYA,CACZ,CACA,EAKE,IACE,IAAK,IAAMviB,KAAYkI,EACjBpX,OAAOC,UAAUE,eAAegC,KAAKiV,EAAIlI,KAC3CqiB,EAAcriB,GAAYkI,EAAGlI,GAGrC,CAAI,MAAO1D,GAAM,CAIfuC,EAAoBwjB,EAAena,GAEnCpJ,EAAyBoJ,EAAI,qBAAsBma,GAGnD,IACqBvxB,OAAO4xB,yBAAyBL,EAAe,QACnDvwB,cACbhB,OAAOa,eAAe0wB,EAAe,OAAQ,CAC3C7qB,IAAG,WACD,OAAO0Q,EAAGnT,IACpB,GAIA,CAAI,MAAOuH,GAAM,CAEf,OAAO+lB,CACT,CC5JA,IAAMM,GAAuB,CAC3B,cACA,SACA,OACA,mBACA,iBACA,mBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,eACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,wBAGI1C,GAAmB,WAoDZ2C,GAxCyB,SAACrnB,QAAO,IAAPA,IAAAA,EAAoC,CAAC,GAC1E,IAAMsnB,EAAAnpB,EAAA,CACJopB,gBAAgB,EAChBC,aAAa,EACbC,uBAAuB,EACvBC,aAAa,EACbT,YAAY,GACTjnB,GAGL,MAAO,CACLxG,KAAMkrB,GAGNT,UAAS,WACHqD,EAASL,YACXhkB,EAAKpD,GAAQ,aAAc8nB,IAGzBL,EAASI,aACXzkB,EAAKpD,GAAQ,cAAe8nB,IAG1BL,EAASG,uBACXxkB,EAAKpD,GAAQ,wBAAyB+nB,IAGpCN,EAASC,gBAAkB,uBAC7BtkB,EAAKskB,eAAe/xB,UAAW,OAAQqyB,IAGzC,IAAMC,EAAoBR,EAASE,YAC/BM,IACkBvnB,MAAMC,QAAQsnB,GAAqBA,EAAoBV,IAC/D9uB,QAAQyvB,GAE5B,EAEA,EASaC,GAAW1D,GACtBI,GACA2C,IAWF,SAASM,GAAkBvkB,GAEzB,OAAO,WAA6C,QAAA0f,EAAAxkB,UAAAlF,OAArB2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GACjC,IAAMiF,EAAmBlF,EAAK,GAQ9B,OAPAA,EAAK,GAAKprB,GAAKswB,EAAkB,CAC/BthB,UAAW,CACTG,KAAM,CAAEohB,SAAUxb,GAAgBtJ,IAClCwD,SAAS,EACTpP,KAAM,gBAGH4L,EAAS7E,MAAMxG,KAAMgrB,EAChC,CACA,CAGA,SAAS6E,GAASxkB,GAEhB,OAAO,SAAqB5F,GAE1B,OAAO4F,EAAS7E,MAAMxG,KAAM,CAC1BJ,GAAK6F,EAAU,CACbmJ,UAAW,CACTG,KAAM,CACJohB,SAAU,wBACV5e,QAASoD,GAAgBtJ,IAE3BwD,SAAS,EACTpP,KAAM,iBAIhB,CACA,CAEA,SAASqwB,GAASM,GAEhB,OAAO,WAEL,IAAMC,EAAMrwB,KACsC,CAAC,SAAU,UAAW,aAAc,sBAElEO,SAAQ,SAAAiE,GACtBA,KAAQ6rB,GAA4B,mBAAdA,EAAI7rB,IAE5B0G,EAAKmlB,EAAK7rB,GAAM,SAAU6G,GACxB,IAAMilB,EAAc,CAClB1hB,UAAW,CACTG,KAAM,CACJohB,SAAU3rB,EACV+M,QAASoD,GAAgBtJ,IAE3BwD,SAAS,EACTpP,KAAM,eAKJ+uB,EAAmB7iB,EAAoBN,GAM7C,OALImjB,IACF8B,EAAY1hB,UAAUG,KAAKwC,QAAUoD,GAAgB6Z,IAIhD5uB,GAAKyL,EAAUilB,EAChC,GAEA,IAAM,QAAAC,EAAAhqB,UAAAlF,OA9BsC2pB,EAAI,IAAAxiB,MAAA+nB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxF,EAAIwF,GAAAjqB,UAAAiqB,GAgC5C,OAAOJ,EAAa5pB,MAAMxG,KAAMgrB,EACpC,CACA,CAEA,SAASgF,GAAiB7jB,GAExB,IAAMskB,EAAe3oB,GAEf4D,EAAQ+kB,EAAatkB,IAAWskB,EAAatkB,GAAQ1O,UAGtDiO,GAAUA,EAAM/N,gBAAmB+N,EAAM/N,eAAe,sBAI7DuN,EAAKQ,EAAO,oBAAoB,SAAUL,GAKxC,OAAO,SAGLqlB,EACA9b,EACA3M,GAEA,IACgC,mBAAnB2M,EAAG+b,cAOZ/b,EAAG+b,YAAc/wB,GAAKgV,EAAG+b,YAAa,CACpC/hB,UAAW,CACTG,KAAM,CACJohB,SAAU,cACV5e,QAASoD,GAAgBC,GACzBzI,OAAAA,GAEF0C,SAAS,EACTpP,KAAM,gBAIpB,CAAQ,MAAOyP,GACf,CAGM,OAAO7D,EAAS7E,MAAMxG,KAAM,CAC1B0wB,EAEA9wB,GAAKgV,EAA8B,CACjChG,UAAW,CACTG,KAAM,CACJohB,SAAU,mBACV5e,QAASoD,GAAgBC,GACzBzI,OAAAA,GAEF0C,SAAS,EACTpP,KAAM,gBAGVwI,GAER,CACA,IAEEiD,EACEQ,EACA,uBACA,SACEklB,GAGA,OAAO,SAGLF,EACA9b,EACA3M,GAmBA,IAAM4oB,EAAsBjc,EAC5B,IACE,IAAMkc,EAAuBD,GAAuBA,EAAoB/B,mBACpEgC,GACFF,EAA4BjxB,KAAKK,KAAM0wB,EAAWI,EAAsB7oB,EAEpF,CAAU,MAAO1K,GACjB,CAEQ,OAAOqzB,EAA4BjxB,KAAKK,KAAM0wB,EAAWG,EAAqB5oB,EACtF,CACA,IAEA,wGC9RA,IAAM8oB,GAA6E,CAAC,EAC9EC,GAA6D,CAAC,EAG7D,SAASC,GAAWxxB,EAA6B8R,GACtDwf,GAAStxB,GAAQsxB,GAAStxB,IAAS,GAClCsxB,GAAStxB,GAAsCwB,KAAKsQ,EACvD,CAaO,SAAS2f,GAAgBzxB,EAA6B0xB,GACtDH,GAAavxB,KAChB0xB,IACAH,GAAavxB,IAAQ,EAEzB,CAGO,SAAS2xB,GAAgB3xB,EAA6BsP,GAC3D,IAAMsiB,EAAe5xB,GAAQsxB,GAAStxB,GACtC,GAAK4xB,EAIL,IAAK,IAA6B1F,EAAlCC,gsBAAAC,CAAsBwF,KAAY1F,EAAAC,KAAA9sB,MAAE,KAAzByS,EAAQoa,EAAArtB,MACjB,IACEiT,EAAQxC,EACd,CAAM,MAAOxR,GAMb,CACA,CACA,CCjDA,IAAI+zB,GAA4D,KAQzD,SAASC,GAAqChgB,GACnD,IAAM9R,EAAO,QACbwxB,GAAWxxB,EAAM8R,GACjB2f,GAAgBzxB,EAAM+xB,GACxB,CAEA,SAASA,KACPF,GAAqBxsB,EAAW2sB,QAEhC3sB,EAAW2sB,QAAU,SACnBC,EACApV,EACAqV,EACAC,EACAC,GAWA,OAFAT,GAAgB,QAPsB,CACpCQ,OAAAA,EACAC,MAAAA,EACAF,KAAAA,EACAD,IAAAA,EACApV,IAAAA,OAIEgV,IAAuBA,GAAmBQ,oBAErCR,GAAmB9qB,MAAMxG,KAAMuG,UAI5C,EAEEzB,EAAW2sB,QAAQM,yBAA0B,CAC/C,CCxCA,IAAIC,GAAsF,KAQnF,SAASC,GACd1gB,GAEA,IAAM9R,EAAO,qBACbwxB,GAAWxxB,EAAM8R,GACjB2f,GAAgBzxB,EAAMyyB,GACxB,CAEA,SAASA,KACPF,GAAkCltB,EAAWqtB,qBAE7CrtB,EAAWqtB,qBAAuB,SAAU50B,GAI1C,OAFA6zB,GAAgB,qBADmC7zB,KAG/Cy0B,KAAoCA,GAAgCF,oBAE/DE,GAAgCxrB,MAAMxG,KAAMuG,UAIzD,EAEEzB,EAAWqtB,qBAAqBJ,yBAA0B,CAC5D,CCRO,SAASK,GAAmBxV,EAA0BqS,GAE3D,IAAMxR,EAAS4U,GAAiBzV,EAAaqS,GAEvC9gB,EAAuB,CAC3B1O,KAAMwvB,GAAMA,EAAGxtB,KACfnD,MAAOg0B,GAAerD,IAWxB,OARIxR,EAAOpc,SACT8M,EAAUqP,WAAa,CAAEC,OAAAA,SAGJ9Z,IAAnBwK,EAAU1O,MAA0C,KAApB0O,EAAU7P,QAC5C6P,EAAU7P,MAAQ,8BAGb6P,CACT,CA0CO,SAASokB,GAAe3V,EAA0BqS,GACvD,MAAO,CACL9gB,UAAW,CACThM,OAAQ,CAACiwB,GAAmBxV,EAAaqS,KAG/C,CAGO,SAASoD,GACdzV,EACAqS,GAKA,IAAMzR,EAAayR,EAAGzR,YAAcyR,EAAGjjB,OAAS,GAE1CwmB,EAcR,SAAoBvD,GAClB,GAAIA,EAAI,CACN,GAA8B,iBAAnBA,EAAGwD,YACZ,OAAOxD,EAAGwD,YAGZ,GAAIC,GAAoB3nB,KAAKkkB,EAAGljB,SAC9B,OAAO,CAEb,CAEE,OAAO,CACT,CA1BkB4mB,CAAW1D,GAE3B,IACE,OAAOrS,EAAYY,EAAYgV,EACnC,CAAI,MAAOj1B,GACX,CAGE,MAAO,EACT,CAGA,IAAMm1B,GAAsB,8BAqB5B,SAASJ,GAAerD,GACtB,IAAMljB,EAAUkjB,GAAMA,EAAGljB,QACzB,OAAKA,EAGDA,EAAQ8lB,OAA0C,iBAA1B9lB,EAAQ8lB,MAAM9lB,QACjCA,EAAQ8lB,MAAM9lB,QAEhBA,EALE,kBAMX,CA8CO,SAAS6mB,GACdhW,EACAzO,EACA4Y,EACA8L,EACAC,GAEA,IAAI5kB,EAEJ,GAAInH,EAAaoH,IAA6BA,EAAyB0jB,MAGrE,OAAOU,GAAe3V,EADHzO,EAC2B0jB,OAUhD,GAAI7qB,EAAWmH,IjCzJRtH,EiCyJqCsH,EjCzJtB,gBiCyJkD,CACtE,IAAM4kB,EAAe5kB,EAErB,GAAI,UAAYA,EACdD,EAAQqkB,GAAe3V,EAAazO,OAC/B,CACL,IAAM1M,EAAOsxB,EAAatxB,OAASuF,EAAW+rB,GAAgB,WAAa,gBACrEhnB,EAAUgnB,EAAahnB,QAAWtK,EAAA,KAAAsxB,EAAAhnB,QAAAtK,EAEA+M,EADAN,EAAA8kB,GAAApW,EAAA7Q,EAAAgb,EAAA8L,GACA9mB,EACA,CAMA,MALA,SAAAgnB,IAEA7kB,EAAA2M,KAAAzU,EAAA,GAAA8H,EAAA2M,KAAA,wBAAAkY,EAAAE,QAGA/kB,CACA,CACA,OAAAxH,EAAAyH,GAEAokB,GAAA3V,EAAAzO,GAEA/G,EAAA+G,IAAA9G,EAAA8G,IAKAD,EAhMvC,SACL0O,EACAzO,EACA4Y,EACA+L,GAEA,IAAMpX,EAASyE,KACTtE,EAAiBH,GAAUA,EAAO+E,aAAa5E,eAE/C3N,EAAe,CACnBC,UAAW,CACThM,OAAQ,CACN,CACE1C,KAAM4H,EAAQ8G,GAAaA,EAAU3M,YAAYC,KAAOqxB,EAAuB,qBAAuB,QACtGx0B,MAAO40B,GAAgC/kB,EAAW,CAAE2kB,qBAAAA,OAI1DzT,MAAO,CACL8T,eAAgBje,GAAgB/G,EAAW0N,KAI/C,GAAIkL,EAAoB,CACtB,IAAMtJ,EAAS4U,GAAiBzV,EAAamK,GACzCtJ,EAAOpc,SAER6M,EAAMC,UAAsChM,OAAO,GAAGqb,WAAa,CAAEC,OAAAA,GAE5E,CAEE,OAAOvP,CACT,CAgK8CklB,CAAAxW,EADAzO,EACA4Y,EAAA+L,GACArkB,EAAAP,EAAA,CACAmlB,WAAA,IAEAnlB,IAaAM,EADAN,EAAA8kB,GAAApW,EAAAzO,EAAA4Y,EAAA8L,GACA,GAAA1kB,OAAAxK,GACA8K,EAAAP,EAAA,CACAmlB,WAAA,IAGAnlB,EACA,CAKA,SAAA8kB,GACApW,EACA7Q,EACAgb,EACA8L,GAEA,IAAA3kB,EAAA,GAEA,GAAA2kB,GAAA9L,EAAA,CACA,IAAAtJ,EAAA4U,GAAAzV,EAAAmK,GACAtJ,EAAApc,SACA6M,EAAAC,UAAA,CACAhM,OAAA,EAAA7D,MAAAyN,EAAAyR,WAAA,CAAAC,OAAAA,MAGA,CAEA,GAAAvW,EAAA6E,GAAA,CACA,IAAAunB,EAAAvnB,EAAAunB,2BAAAC,EAAAxnB,EAAAwnB,2BAMA,OAJArlB,EAAAslB,SAAA,CACAznB,QAAAunB,EACAG,OAAAF,GAEArlB,CACA,CAGA,OADAA,EAAAnC,QAAAA,EACAmC,CACA,CAEA,SAAAglB,GACA/kB,EAAAuL,GAEA,IADAoZ,EAAApZ,EAAAoZ,qBAEA9wB,E9BhI7B,SAAAmM,EAAAulB,QAAA,IAAAA,IAAAA,EAAA,IACA,IAAA1xB,EAAAxE,OAAAwE,KAAA8J,EAAAqC,IAGA,GAFAnM,EAAA2xB,QAEA3xB,EAAAX,OACA,6BAGA,GAAAW,EAAA,GAAAX,QAAAqyB,EACA,OAAAzpB,EAAAjI,EAAA,GAAA0xB,GAGA,QAAAE,EAAA5xB,EAAAX,OAAAuyB,EAAA,EAAAA,IAAA,CACA,IAAAC,EAAA7xB,EAAAM,MAAA,EAAAsxB,GAAA7qB,KAAA,MACA,KAAA8qB,EAAAxyB,OAAAqyB,GAGA,OAAAE,IAAA5xB,EAAAX,OACAwyB,EAEA5pB,EAAA4pB,EAAAH,EACA,CAEA,QACA,C8BwG6BI,CAAA3lB,GACA4lB,EAAAjB,EAAA,gCAIA,OAAA/rB,EAAAoH,GACA,kCAAA4lB,EAAA,kBAAA5lB,EAAApC,QAAA,IAGA1E,EAAA8G,GAEA,UAMA,SAAA5J,GACA,IACA,IAAA9G,EAAAD,OAAA0C,eAAAqE,GACA,OAAA9G,EAAAA,EAAA+D,YAAAC,UAAAkC,CACA,OAAApG,GACA,CAEA,CAdAy2B,CAAA7lB,GACA,WAAAA,EAAA1O,KAAA,iBAAAs0B,EAGA,sBAAAA,EAAA,eAAA/xB,CACA,CCtS9C,IAAM2qB,GAAmB,iBA2BZsH,GAzBuB,SAAChsB,QAAO,IAAPA,IAAAA,EAA+C,CAAC,GACnF,IAAMsnB,EAAAnpB,EAAA,CACJqrB,SAAS,EACTU,sBAAsB,GACnBlqB,GAGL,MAAO,CACLxG,KAAMkrB,GACNT,UAAS,WACPrtB,MAAMq1B,gBAAkB,EAC9B,EACI/H,MAAK,SAACzQ,GACA6T,EAASkC,SA0BnB,SAAsC/V,GACpC6V,IAAqC,SAAAxiB,GACnC,IAAAolB,EAA0C1T,KAAlC7D,EAAWuX,EAAXvX,YAAaiW,EAAAsB,EAAAtB,iBAErB,GAAI1S,OAAgBzE,IAAUiT,KAA9B,CAIA,IAAQ+C,EAAkC3iB,EAAlC2iB,IAAKpV,EAA6BvN,EAA7BuN,IAAKqV,EAAwB5iB,EAAxB4iB,KAAMC,EAAkB7iB,EAAlB6iB,OAAQC,EAAU9iB,EAAV8iB,MAE1B3jB,OACMvK,IAAVkuB,GAAuB5qB,EAASyqB,GAoG8C,SAAAA,EAAApV,EAAAqV,EAAAC,GACA,IAIA7lB,EAAAhF,EAAA2qB,GAAAA,EAAA3lB,QAAA2lB,EACAjwB,EAAA,QAEA2yB,EAAAroB,EAAAoN,MANA,4GAuBA,OAhBAib,IACA3yB,EAAA2yB,EAAA,GACAroB,EAAAqoB,EAAA,IAcAC,GAXA,CACAlmB,UAAA,CACAhM,OAAA,CACA,CACA1C,KAAAgC,EACAnD,MAAAyN,MAMAuQ,EAAAqV,EAAAC,EACA,CA7H1E0C,CAA4B5C,EAAKpV,EAAKqV,EAAMC,GAC5CyC,GACEzB,GAAsBhW,EAAaiV,GAASH,OAAK/tB,EAAWkvB,GAAkB,GAC9EvW,EACAqV,EACAC,GAGR1jB,EAAMrI,MAAQ,QAEdma,GAAa9R,EAAO,CAClB8Y,kBAAmB6K,EACnBjjB,UAAW,CACTC,SAAS,EACTpP,KAAM,YApBd,CAuBA,GACA,CAvDQ80B,CAA6B7Y,GAG3B6T,EAAS4C,sBAsDnB,SAAmDzW,GACjDuW,IAAkD,SAAA10B,GAChD,IAAAi3B,EAA0C/T,KAAlC7D,EAAW4X,EAAX5X,YAAaiW,EAAA2B,EAAA3B,iBAErB,GAAI1S,OAAgBzE,IAAUiT,KAA9B,CAIA,IAAMkD,EAkBV,SAAqCA,GACnC,GAAI1qB,EAAY0qB,GACd,OAAOA,EAIT,IAAMt0B,EAAIs0B,EAGV,IAGE,GAAI,WAAYt0B,EACd,OAAOA,EAAEgS,OAQN,GAAI,WAAYhS,GAAK,WAAYA,EAAEgP,OACtC,OAAOhP,EAAEgP,OAAOgD,MAEtB,CAAI,MAAAklB,GAAO,CAET,OAAO5C,CACT,CA7CkB6C,CAA4Bn3B,GAEpC2Q,EAAQ/G,EAAY0qB,GAoDrB,CACL1jB,UAAW,CACThM,OAAQ,CACN,CACE1C,KAAM,qBAENnB,MAAO,oDAAoDkM,OAzD5BqnB,OACjCe,GAAsBhW,EAAaiV,OAAOluB,EAAWkvB,GAAkB,GAE3E3kB,EAAMrI,MAAQ,QAEdma,GAAa9R,EAAO,CAClB8Y,kBAAmB6K,EACnBjjB,UAAW,CACTC,SAAS,EACTpP,KAAM,yBAdd,CAiBA,GACA,CA7EQk1B,CAA0CjZ,EAGlD,EAEA,EASakZ,GAAiBrI,GAC5BI,GACAsH,IAiJkF,SAAAI,GAAAnmB,EAAAoO,EAAAqV,EAAAC,GAEA,IAAAr0B,EAAA2Q,EAAAC,UAAAD,EAAAC,WAAA,GAEA0mB,EAAAt3B,EAAA4E,OAAA5E,EAAA4E,QAAA,GAEA2yB,EAAAD,EAAA,GAAAA,EAAA,OAEAE,EAAAD,EAAAtX,WAAAsX,EAAAtX,YAAA,GAEAwX,EAAAD,EAAAtX,OAAAsX,EAAAtX,QAAA,GAEAwX,EAAA7zB,MAAA8zB,SAAAtD,EAAA,UAAAjuB,EAAAiuB,EACAuD,EAAA/zB,MAAA8zB,SAAAvD,EAAA,UAAAhuB,EAAAguB,EACApU,EAAAtW,EAAAqV,IAAAA,EAAAjb,OAAA,EAAAib,EjCzFzD,WACA,IACA,OAAAxU,EAAAwO,SAAA8e,SAAAC,IACA,OAAAhH,GACA,QACA,CACA,CiCmFyDiH,GAaA,OAVA,IAAAN,EAAA3zB,QACA2zB,EAAA/zB,KAAA,CACAg0B,MAAAA,EACA1X,SAAAA,EACA,aACAgY,QAAA,EACAJ,OAAAA,IAIAjnB,CACA,CAMA,SAAAuS,KACA,IAAA/E,EAAAyE,KAKA,OAJAzE,GAAAA,EAAA+E,cAAA,CACA7D,YAAA,qBACAiW,kBAAA,EAGA,CCvOpF,SAAS2C,KACD,eAINlwB,EAAe/E,SAAQ,SAAUsF,GACzBA,KAASf,EAAWY,SAI1BwF,EAAKpG,EAAWY,QAASG,GAAO,SAAUC,GAGxC,OAFAP,EAAuBM,GAASC,EAEzB,WAAgC,QAAAilB,EAAAxkB,UAAAlF,OAAnB2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GAEtBmG,GAAgB,UADwB,CAAEpG,KAAAA,EAAMnlB,MAAAA,IAGhD,IAAM4vB,EAAMlwB,EAAuBM,GACnC4vB,GAAOA,EAAIjvB,MAAM1B,EAAWY,QAASslB,EAC7C,CACA,GACA,GACA,CCTA,IAGI0K,GACAC,GACAC,GALE9tB,GAAShD,EAaR,SAAS+wB,GAAuCtkB,GAErD0f,GADa,MACI1f,GACjB2f,GAFa,MAES4E,GACxB,CAGO,SAASA,KACd,GAAKhuB,GAAOwO,SAAZ,CAOA,IAAMyf,EAAoB3E,GAAgB9qB,KAAK,KAAM,OAC/C0vB,EAAwBC,GAAoBF,GAAmB,GACrEjuB,GAAOwO,SAAS4f,iBAAiB,QAASF,GAAuB,GACjEluB,GAAOwO,SAAS4f,iBAAiB,WAAYF,GAAuB,GAOpE,CAAC,cAAe,QAAQz1B,SAAQ,SAAC4L,GAE/B,IAAMT,EAAS5D,GAAeqE,IAAYrE,GAAeqE,GAAQ1O,UAE5DiO,GAAUA,EAAM/N,gBAAmB+N,EAAM/N,eAAe,sBAI7DuN,EAAKQ,EAAO,oBAAoB,SAAUyqB,GACxC,OAAO,SAEL12B,EACA22B,EACAnuB,GAEA,GAAa,UAATxI,GAA4B,YAARA,EACtB,IACE,IACMsxB,EADK/wB,KACUq2B,oCADVr2B,KACmDq2B,qCAAuC,CAAC,EAChGC,EAAkBvF,EAAStxB,GAAQsxB,EAAStxB,IAAS,CAAE82B,SAAU,GAEvE,IAAKD,EAAe/kB,QAAS,CAC3B,IAAMA,EAAU0kB,GAAoBF,GACpCO,EAAe/kB,QAAUA,EACzB4kB,EAAyBx2B,KAAKK,KAAMP,EAAM8R,EAAStJ,EACjE,CAEYquB,EAAeC,UAC3B,CAAY,MAAOh5B,GAEnB,CAIQ,OAAO44B,EAAyBx2B,KAAKK,KAAMP,EAAM22B,EAAUnuB,EACnE,CACA,IAEIiD,EACEQ,EACA,uBACA,SAAUklB,GACR,OAAO,SAELnxB,EACA22B,EACAnuB,GAEA,GAAa,UAATxI,GAA4B,YAARA,EACtB,IACE,IACMsxB,EADK/wB,KACSq2B,qCAAuC,CAAC,EACtDC,EAAiBvF,EAAStxB,GAE5B62B,IACFA,EAAeC,WAEXD,EAAeC,UAAY,IAC7B3F,EAA4BjxB,KAAKK,KAAMP,EAAM62B,EAAe/kB,QAAStJ,GACrEquB,EAAe/kB,aAAU5N,SAClBotB,EAAStxB,IAImB,IAAjCjC,OAAOwE,KAAK+uB,GAAU1vB,eAdjBrB,KAeGq2B,oCAG5B,CAAc,MAAO94B,GAErB,CAIU,OAAOqzB,EAA4BjxB,KAAKK,KAAMP,EAAM22B,EAAUnuB,EACxE,CACA,IAEA,GA7FA,CA8FA,CAsDA,SAASguB,GACP1kB,EACAilB,GAEA,YAFc,IAAdA,IAAAA,GAA0B,GAEnB,SAACtoB,GAIN,GAAKA,IAASA,EAAuB,gBAArC,CAIA,IAAM/B,EAoCV,SAAwB+B,GACtB,IACE,OAAOA,EAAM/B,MACjB,CAAI,MAAO5O,GAGP,OAAO,IACX,CACA,CA5CmBk5B,CAAevoB,GAG9B,IArCJ,SAA4BwoB,EAAmBvqB,GAE7C,MAAkB,aAAduqB,KAICvqB,IAAWA,EAAO/C,SAMA,UAAnB+C,EAAO/C,SAA0C,aAAnB+C,EAAO/C,UAA0B+C,EAAOwqB,kBAK5E,CAoBQC,CAAmB1oB,EAAMzO,KAAM0M,GAAnC,CAKAX,EAAyB0C,EAAO,mBAAmB,GAE/C/B,IAAWA,EAAO0qB,WAEpBrrB,EAAyBW,EAAQ,YAAamB,KAGhD,IAAM7L,EAAsB,aAAfyM,EAAMzO,KAAsB,QAAUyO,EAAMzO,MA5E7D,SAAsCyO,GAEpC,GAAIA,EAAMzO,OAASk2B,GACjB,OAAO,EAGT,IAGE,IAAKznB,EAAM/B,QAAW+B,EAAM/B,OAA+B0qB,YAAcjB,GACvE,OAAO,CAEb,CAAI,MAAOr4B,GAEX,CAME,OAAO,CACT,EA4DSu5B,CAA6B5oB,KAEhCqD,EADoC,CAAErD,MAAAA,EAAOzM,KAAAA,EAAMuD,OAAQwxB,IAE3Db,GAAwBznB,EAAMzO,KAC9Bm2B,GAA4BzpB,EAASA,EAAO0qB,eAAYlzB,GAI1DozB,aAAarB,IACbA,GAAkB5tB,GAAOonB,YAAW,WAClC0G,QAA4BjyB,EAC5BgyB,QAAwBhyB,CAC9B,GAtN0B,IA2L1B,CAPA,CAmCA,CACA,CChPA,IAAMmE,GAAShD,EAEFkyB,GAAsB,oBAU5B,SAASC,GAA6B1lB,GAE3C0f,GADa,MACI1f,GACjB2f,GAFa,MAESgG,GACxB,CAGO,SAASA,KAEd,GAAMpvB,GAAe0nB,eAArB,CAIA,IAAM2H,EAAW3H,eAAe/xB,UAEhCyN,EAAKisB,EAAU,QAAQ,SAAUC,GAC/B,OAAO,WAIX,IAJ+F,IAAA9mB,EAAA,KACnF+mB,EAAiBplB,KAAKC,MAGlC6Y,EAAAxkB,UAAAlF,OAJ4E2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GAK1E,IAAMlsB,EAASkI,EAAS+jB,EAAK,IAAMA,EAAK,GAAGsM,mBAAgB3zB,EACrD2Y,EAoGZ,SAAkBA,GAChB,GAAIrV,EAASqV,GACX,OAAOA,EAGT,IAKE,OAAQA,EAAYxZ,UACxB,CAAI,MAAA2xB,GAAO,CAGX,CAlHkB8C,CAASvM,EAAK,IAE1B,IAAKjsB,IAAWud,EACd,OAAO8a,EAAa5wB,MAAMxG,KAAMgrB,GAGlChrB,KAAKg3B,IAAuB,CAC1Bj4B,OAAAA,EACAud,IAAAA,EACAkb,gBAAiB,CAAC,GAIL,SAAXz4B,GAAqBud,EAAInD,MAAM,gBACjCnZ,KAAKy3B,wBAAyB,GAGhC,IAAMC,EAAwC,WAE5C,IAAMC,EAAUrnB,EAAK0mB,IAErB,GAAKW,GAImB,IAApBrnB,EAAKsnB,WAAkB,CACzB,IAGED,EAAQE,YAAcvnB,EAAKiE,MACvC,CAAY,MAAOhX,GACnB,CASU6zB,GAAgB,MANoB,CAClCpG,KAAM,CAACjsB,EAAQud,GACfwb,aAAc7lB,KAAKC,MACnBmlB,eAAAA,EACAhH,IAAK/f,GAGjB,CACA,EA8BM,MA5BI,uBAAwBtQ,MAA2C,mBAA5BA,KAAK+3B,mBAC9C7sB,EAAKlL,KAAM,sBAAsB,SAAUqL,GACzC,OAAO,WACLqsB,IAA2B,QAAAnH,EAAAhqB,UAAAlF,OAD0B22B,EAAc,IAAAxvB,MAAA+nB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAdwH,EAAcxH,GAAAjqB,UAAAiqB,GAEnE,OAAOnlB,EAAS7E,MAAMxG,KAAMg4B,EACxC,CACA,IAEQh4B,KAAKk2B,iBAAiB,mBAAoBwB,GAM5CxsB,EAAKlL,KAAM,oBAAoB,SAAUqL,GACvC,OAAO,WAAuF,QAAA4sB,EAAA1xB,UAAAlF,OAAvC62B,EAAoB,IAAA1vB,MAAAyvB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAApBD,EAAoBC,GAAA5xB,UAAA4xB,GACzE,IAAOC,EAAiBF,EAAoB,GAA7B55B,EAAS45B,EAAoB,GAEtCP,EAAU33B,KAAKg3B,IAMrB,OAJIW,GAAW1wB,EAASmxB,IAAWnxB,EAAS3I,KAC1Cq5B,EAAQH,gBAAgBY,EAAO7uB,eAAiBjL,GAG3C+M,EAAS7E,MAAMxG,KAAMk4B,EACtC,CACA,IAEad,EAAa5wB,MAAMxG,KAAMgrB,EACtC,CACA,IAEE9f,EAAKisB,EAAU,QAAQ,SAAU/G,GAC/B,OAAO,WAC0C,IAA/C,IAAMiI,EAAgBr4B,KAAKg3B,IAAoBsB,EAAA/xB,UAAAlF,OADuB2pB,EAAI,IAAAxiB,MAAA8vB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvN,EAAIuN,GAAAhyB,UAAAgyB,GAG1E,OAAKF,QAIW10B,IAAZqnB,EAAK,KACPqN,EAAcG,KAAOxN,EAAK,IAQ5BoG,GAAgB,MALoB,CAClCpG,KAAM,CAACqN,EAAct5B,OAAQs5B,EAAc/b,KAC3C+a,eAAgBplB,KAAKC,MACrBme,IAAKrwB,OAIAowB,EAAa5pB,MAAMxG,KAAMgrB,IAdvBoF,EAAa5pB,MAAMxG,KAAMgrB,EAexC,CACA,GA5GA,CA6GA,CC1IA,IAAMljB,GAAS7C,IA8ER,SAASwzB,GAAc7sB,GAC5B,OAAOA,GAAQ,mDAAmDb,KAAKa,EAAK9I,WAC9E,CClEO,SAAS41B,GAA+BnnB,GAC7C,IAAM9R,EAAO,QACbwxB,GAAWxxB,EAAM8R,GACjB2f,GAAgBzxB,EAAMk5B,GACxB,CAEA,SAASA,MDoEF,WACL,GAA2B,iBAAhBC,YACT,OAAO,EAGT,IAjCK,WACL,KAAM,UAAW9wB,IACf,OAAO,EAGT,IAIE,OAHA,IAAI+wB,QACJ,IAAIC,QAAQ,0BACZ,IAAIC,UACG,CACX,CAAI,MAAOx7B,GACP,OAAO,CACX,CACA,CAoBOy7B,GACH,OAAO,EAKT,GAAIP,GAAc3wB,GAAOmxB,OACvB,OAAO,EAKT,IAAI1oB,GAAS,EACP2oB,EAAMpxB,GAAOwO,SAEnB,GAAI4iB,GAAiD,mBAAlCA,EAAIC,cACrB,IACE,IAAMC,EAAUF,EAAIC,cAAc,UAClCC,EAAQC,QAAS,EACjBH,EAAII,KAAKC,YAAYH,GACjBA,EAAQI,eAAiBJ,EAAQI,cAAcP,QAEjD1oB,EAASkoB,GAAcW,EAAQI,cAAcP,QAE/CC,EAAII,KAAKG,YAAYL,EAC3B,CAAM,MAAOlqB,GAGb,CAGE,OAAOqB,CACT,ECxGOmpB,IAILxuB,EAAKpG,EAAY,SAAS,SAAU60B,GAClC,OAAO,WAAgC,QAAA5O,EAAAxkB,UAAAlF,OAAnB2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GACtB,IAAA2O,EAyEC,SAAwBC,GAC7B,GAAyB,IAArBA,EAAUx4B,OACZ,MAAO,CAAEtC,OAAQ,MAAOud,IAAK,IAG/B,GAAyB,IAArBud,EAAUx4B,OAAc,CAC1B,IAAOib,EAAgBud,EAAU,GAArB5xB,EAAW4xB,EAAU,GAEjC,MAAO,CACLvd,IAAKwd,GAAmBxd,GACxBvd,OAAQg7B,GAAQ9xB,EAAS,UAAYuC,OAAOvC,EAAQlJ,QAAQu4B,cAAgB,MAElF,CAEE,IAAMt4B,EAAM66B,EAAU,GACtB,MAAO,CACLvd,IAAKwd,GAAmB96B,GACxBD,OAAQg7B,GAAQ/6B,EAAK,UAAYwL,OAAOxL,EAAID,QAAQu4B,cAAgB,MAExE,CA5F8B0C,CAAehP,GAEjCiP,EAAgC,CACpCjP,KAAAA,EACAkP,UAAW,CACTn7B,OALU66B,EAAN76B,OAMJud,IANYsd,EAAAtd,KAQd+a,eAAgBplB,KAAKC,OAQvB,OALAkf,GAAgB,QAAOhrB,EAAA,GAClB6zB,IAIEN,EAAcnzB,MAAM1B,EAAYkmB,GAAMpqB,MAC3C,SAACu5B,GAQC,OADA/I,GAAgB,QANShrB,EAAA,GACpB6zB,EAAW,CACdnC,aAAc7lB,KAAKC,MACnBioB,SAAAA,KAIKA,CACjB,IACQ,SAACtI,GAWC,MAJAT,GAAgB,QANQhrB,EAAA,GACnB6zB,EAAW,CACdnC,aAAc7lB,KAAKC,MACnB2f,MAAAA,KAOIA,CAChB,GAEA,CACA,GACA,CAEA,SAASkI,GAA0Bx1B,EAAcC,GAC/C,QAASD,GAAsB,iBAARA,KAAuBA,EAA+BC,EAC/E,CAEA,SAASs1B,GAAmBM,GAC1B,MAAwB,iBAAbA,EACFA,EAGJA,EAIDL,GAAQK,EAAU,OACbA,EAAS9d,IAGd8d,EAASt3B,SACJs3B,EAASt3B,WAGX,GAXE,EAYX,CCzEA,ICbIu3B,GDaEvyB,GAAS7C,ICfT6C,GAAShD,EAYR,SAASw1B,GAAiC/oB,GAC/C,IAAM9R,EAAO,UACbwxB,GAAWxxB,EAAM8R,GACjB2f,GAAgBzxB,EAAM86B,GACxB,CAEA,SAASA,KACP,GDWMC,GADAC,EAAa3yB,GAAe4yB,SACOD,EAAUE,KAAOF,EAAUE,IAAI33B,QAElE43B,EAAgB,YAAa9yB,MAAYA,GAAO+yB,QAAQC,aAAehzB,GAAO+yB,QAAQE,cAEpFP,GAAuBI,ECf/B,CDIK,IAMCH,EACAD,EAEAI,ECTAI,EAAgBlzB,GAAOmzB,WAC7BnzB,GAAOmzB,WAAa,WAClB,IAAMC,EAAKpzB,GAAOstB,SAASC,KAErB8F,EAAOd,GAIb,GAHAA,GAAWa,EAEX9J,GAAgB,UADwB,CAAE+J,KAAAA,EAAMD,GAAAA,IAE5CF,EAIF,IAAI,QAAAjQ,EAAAxkB,UAAAlF,OAXoD2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GAY1D,OAAO+P,EAAcx0B,MAAMxG,KAAMgrB,EACzC,CAAQ,MAAOhiB,GACf,CAGA,EAkBEkC,EAAKpD,GAAO+yB,QAAS,YAAaO,GAClClwB,EAAKpD,GAAO+yB,QAAS,eAAgBO,EAvCvC,CAsBE,SAASA,EAA2BC,GAClC,OAAO,WAA+C,QAAA9K,EAAAhqB,UAAAlF,OAAnB2pB,EAAI,IAAAxiB,MAAA+nB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJxF,EAAIwF,GAAAjqB,UAAAiqB,GACrC,IAAMlU,EAAM0O,EAAK3pB,OAAS,EAAI2pB,EAAK,QAAKrnB,EACxC,GAAI2Y,EAAK,CAEP,IAAM6e,EAAOd,GACPa,EAAK1wB,OAAO8R,GAElB+d,GAAWa,EAEX9J,GAAgB,UADwB,CAAE+J,KAAAA,EAAMD,GAAAA,GAExD,CACM,OAAOG,EAAwB70B,MAAMxG,KAAMgrB,EACjD,CACA,CAIA,CC3Da,IAAAsQ,GAAsB,CAAC,QAAS,QAAS,UAAW,MAAO,OAAQ,SCGzE,SAAS/D,GAASjb,GACvB,IAAKA,EACH,MAAO,CAAC,EAGV,IAAMnD,EAAQmD,EAAInD,MAAM,gEAExB,IAAKA,EACH,MAAO,CAAC,EAIV,IAAMoiB,EAAQpiB,EAAM,IAAM,GACpBqiB,EAAWriB,EAAM,IAAM,GAC7B,MAAO,CACLsiB,KAAMtiB,EAAM,GACZuiB,KAAMviB,EAAM,GACZwiB,SAAUxiB,EAAM,GAChByiB,OAAQL,EACRM,KAAML,EACNM,SAAU3iB,EAAM,GAAKoiB,EAAQC,EAEjC,CCiBA,IAEM7O,GAAmB,cAwCZoP,GAtCoB,SAAC9zB,QAAO,IAAPA,IAAAA,EAAuC,CAAC,GACxE,IAAMsnB,EAAAnpB,EAAA,CACJV,SAAS,EACTs2B,KAAK,EACL/C,OAAO,EACP4B,SAAS,EACTjQ,QAAQ,EACRyF,KAAK,GACFpoB,GAGL,MAAO,CACLxG,KAAMkrB,GAENT,UAAS,WAAI,EACbC,MAAK,SAACzQ,GT3DH,IAA0CnK,ES4DvCge,EAAS7pB,UT5D8B6L,ESuMkC,SAAAmK,GACA,gBAAAue,GACA,GAAA9Z,OAAAzE,EAAA,CAIA,IAAAwE,EAAA,CACA+b,SAAA,UACAltB,KAAA,CACAxI,UAAA0zB,EAAAjP,KACAhlB,OAAA,WAEAH,OFjM3CA,EEiM2Co0B,EAAAp0B,MFhM/D,SAAVA,EAAmB,UAAYy1B,GAAoBtwB,SAASnF,GAASA,EAAQ,OEiMJkG,QAAA3B,EAAA6vB,EAAAjP,KAAA,MAGA,cAAAiP,EAAAp0B,MAAA,CACA,QAAAo0B,EAAAjP,KAAA,GAKA,OAJA9K,EAAAnU,QAAA,sBAAA3B,EAAA6vB,EAAAjP,KAAA1oB,MAAA,2BACA4d,EAAAnR,KAAAxI,UAAA0zB,EAAAjP,KAAA1oB,MAAA,EAKA,CAEA2d,GAAAC,EAAA,CACA7V,MAAA4vB,EAAAjP,KACAnlB,MAAAo0B,EAAAp0B,OAxBA,CFzL5E,IAAiCA,CEmN2C,CACA,CAzK1Cq2B,CAA6BxgB,GT3DpEuV,GADa,UACI1f,GACjB2f,GAFa,UAESsE,KS4DdjG,EAASyM,KACXnG,GAyE2E,SACAna,EACAsgB,GAEA,gBAAA/B,GACA,GAAA9Z,OAAAzE,EAAA,CAIA,IAAAvP,EACAgwB,EACA5zB,EAAA,iBAAAyzB,EAAAA,EAAAI,wBAAAz4B,EAEA+E,EACA,iBAAAszB,GAAA,iBAAAA,EAAAtzB,gBAAAszB,EAAAtzB,qBAAA/E,EACA+E,GAAAA,EAhHjD,OAqHiDA,EArHjD,MAwHiD,iBAAAH,IACAA,EAAA,CAAAA,IAIA,IACA,IAAA2F,EAAA+rB,EAAA/rB,MACAmuB,EAmNA,SAAAnuB,GACA,QAAAA,KAAAA,EAAA/B,MACA,CArNAmwB,CAAApuB,GAAAA,EAAA/B,OAAA+B,EAEA/B,EAAApE,EAAAs0B,EAAA,CAAA9zB,SAAAA,EAAAG,gBAAAA,IACAyzB,EAAAnyB,EAAAqyB,EACA,OAAA9+B,GACA4O,EAAA,WACA,CAEA,OAAAA,EAAA9K,OAAA,CAIA,IAAA6e,EAAA,CACA+b,SAAA,MAAAhC,EAAAx4B,KACAsK,QAAAI,GAGAgwB,IACAjc,EAAAnR,KAAA,qBAAAotB,IAGAlc,GAAAC,EAAA,CACAhS,MAAA+rB,EAAA/rB,MACAzM,KAAAw4B,EAAAx4B,KACAuD,OAAAi1B,EAAAj1B,QAdA,CAjCA,CAiDA,CACA,CAlIpCu3B,CAAyB7gB,EAAQ6T,EAASyM,MAE/EzM,EAASc,KACX4G,GAwK2E,SAAAvb,GACA,gBAAAue,GACA,GAAA9Z,OAAAzE,EAAA,CAIA,IAAA2b,EAAA4C,EAAA5C,eAAAS,EAAAmC,EAAAnC,aAEAO,EAAA4B,EAAA5J,IAAA2G,IAGA,GAAAK,GAAAS,GAAAO,EAAA,CAIA,IAAAt5B,EAAAs5B,EAAAt5B,OAAAud,EAAA+b,EAAA/b,IAAAub,EAAAQ,EAAAR,YAAAW,EAAAH,EAAAG,KAeAvY,GACA,CACAgc,SAAA,MACAltB,KAhBA,CACAhQ,OAAAA,EACAud,IAAAA,EACAub,YAAAA,GAcAp4B,KAAA,QAXA,CACA4wB,IAAA4J,EAAA5J,IACAhmB,MAAAmuB,EACAnB,eAAAA,EACAS,aAAAA,GAdA,CATA,CAkCA,CACA,CA/M9C0E,CAAyB9gB,IAEpD6T,EAAS0J,OACXP,GAiN2E,SAAAhd,GACA,gBAAAue,GACA,GAAA9Z,OAAAzE,EAAA,CAIA,IAAA2b,EAAA4C,EAAA5C,eAAAS,EAAAmC,EAAAnC,aAGA,GAAAA,KAIAmC,EAAAC,UAAA5d,IAAAnD,MAAA,wBAAA8gB,EAAAC,UAAAn7B,QAKA,GAAAk7B,EAAApI,MASA5R,GACA,CACAgc,SAAA,QACAltB,KAXAkrB,EAAAC,UAYAr0B,MAAA,QACApG,KAAA,QAZA,CACAsP,KAAAkrB,EAAApI,MACAxnB,MAAA4vB,EAAAjP,KACAqM,eAAAA,EACAS,aAAAA,QAYA,CACA,IAAAqC,EAAAF,EAAAE,SAWAla,GACA,CACAgc,SAAA,QACAltB,KAbA3I,EAAA,GACA6zB,EAAAC,UAAA,CACArC,YAAAsC,GAAAA,EAAA5lB,SAYA9U,KAAA,QAVA,CACA4K,MAAA4vB,EAAAjP,KACAmP,SAAAA,EACA9C,eAAAA,EACAS,aAAAA,GAUA,CApDA,CAqDA,CACA,CA3Q5C2E,CAA2B/gB,IAExD6T,EAASsL,SACXP,GA6Q2E,SAAA5e,GACA,gBAAAue,GACA,GAAA9Z,OAAAzE,EAAA,CAIA,IAAAyf,EAAAlB,EAAAkB,KACAD,EAAAjB,EAAAiB,GACAwB,EAAAnF,GAAAzvB,GAAAstB,SAAAC,MACAsH,EAAAxB,EAAA5D,GAAA4D,QAAAx3B,EACAi5B,EAAArF,GAAA2D,GAGAyB,GAAAA,EAAAjB,OACAiB,EAAAD,GAKAA,EAAAf,WAAAiB,EAAAjB,UAAAe,EAAAjB,OAAAmB,EAAAnB,OACAP,EAAA0B,EAAAd,UAEAY,EAAAf,WAAAgB,EAAAhB,UAAAe,EAAAjB,OAAAkB,EAAAlB,OACAN,EAAAwB,EAAAb,UAGA7b,GAAA,CACAgc,SAAA,aACAltB,KAAA,CACAosB,KAAAA,EACAD,GAAAA,IA1BA,CA6BA,CACA,CA/S1C2B,CAA6BnhB,IAE5D6T,EAAS3E,QAAUlP,EAAO0Q,IAC5B1Q,EAAO0Q,GAAG,kBAqClB,SAAqC1Q,GACnC,OAAO,SAA6BxN,GAC9BiS,OAAgBzE,GAIpBuE,GACE,CACEgc,SAAU,WAAyB,gBAAf/tB,EAAMzO,KAAyB,cAAgB,SACQ6O,SAAAJ,EAAAI,SACAzI,MAAAqI,EAAArI,MACAkG,QAAAqC,EAAAF,IAEA,CACAA,MAAAA,GAGA,CACA,CAvD9C4uB,CAA4BphB,GAEjE,EAEA,EAUaqhB,GAAcxQ,GAA4BI,GAAkBoP,ICjGlE,SAASiB,GACdC,EACAC,EACAC,EACAl5B,EACAm5B,EACAlvB,EACA0D,GAEA,QANa,IAAburB,IAAAA,EAAwB,KAMnBjvB,EAAMC,WAAcD,EAAMC,UAAUhM,QAAWyP,GAAShL,EAAagL,EAAKoV,kBAAmBnoB,OAAlG,CAKA,IAmHmCw+B,EAAyBjhB,EAnHtD4K,EACJ9Y,EAAMC,UAAUhM,OAAOd,OAAS,EAAI6M,EAAMC,UAAUhM,OAAO+L,EAAMC,UAAUhM,OAAOd,OAAS,QAAKsC,EAG9FqjB,IACF9Y,EAAMC,UAAUhM,QA8GiBk7B,EA7G/BC,GACEL,EACAC,EACAE,EACAxrB,EAAKoV,kBACL/iB,EACAiK,EAAMC,UAAUhM,OAChB6kB,EACA,GAqGsD5K,EAnGxD+gB,EAoGGE,EAAWzzB,KAAI,SAAAuE,GAIpB,OAHIA,EAAU7P,QACZ6P,EAAU7P,MAAQ2L,EAASkE,EAAU7P,MAAO8d,IAEvCjO,CACX,KA5HA,CAsBA,CAEA,SAASmvB,GACPL,EACAC,EACAE,EACAvL,EACA5tB,EACAs5B,EACApvB,EACAqvB,GAEA,GAAID,EAAel8B,QAAU+7B,EAAQ,EACnC,OAAOG,EAGT,IAAIE,EAAc,GAAA/gB,OAAM6gB,GAGxB,GAAI32B,EAAairB,EAAM5tB,GAAMpF,OAAQ,CACnC6+B,GAA4CvvB,EAAWqvB,GACvD,IAAMG,EAAeV,EAAiCC,EAAQrL,EAAM5tB,IAC9D25B,EAAiBH,EAAcp8B,OACrCw8B,GAA2CF,EAAc15B,EAAK25B,EAAgBJ,GAC9EC,EAAgBH,GACdL,EACAC,EACAE,EACAvL,EAAM5tB,GACNA,EAAG,CACF05B,GAAYjhB,OAAK+gB,GAClBE,EACAC,EAEN,CAyBE,OArBIp1B,MAAMC,QAAQopB,EAAMvd,SACtBud,EAAMvd,OAAO/T,SAAQ,SAACu9B,EAAYhgC,GAChC,GAAI8I,EAAak3B,EAAYj/B,OAAQ,CACnC6+B,GAA4CvvB,EAAWqvB,GACvD,IAAMG,EAAeV,EAAiCC,EAAQY,GACxDF,EAAiBH,EAAcp8B,OACrCw8B,GAA2CF,EAAc,UAAU7/B,EAAC,IAAK8/B,EAAgBJ,GACzFC,EAAgBH,GACdL,EACAC,EACAE,EACAU,EACA75B,EAAG,CACF05B,GAAYjhB,OAAK+gB,GAClBE,EACAC,EAEV,CACA,IAGSH,CACT,CAEA,SAASC,GAA4CvvB,EAAsBqvB,GAEzErvB,EAAUS,UAAYT,EAAUS,WAAa,CAAEnP,KAAM,UAAWoP,SAAS,GAEzEV,EAAUS,UAAAxI,EAAA,GACL+H,EAAUS,UACU,mBAAnBT,EAAU1O,MAA6B,CAAEs+B,oBAAoB,GAAM,CACvEC,aAAcR,GAElB,CAEA,SAASK,GACP1vB,EACAhD,EACAqyB,EACAS,GAGA9vB,EAAUS,UAAYT,EAAUS,WAAa,CAAEnP,KAAM,UAAWoP,SAAS,GAEzEV,EAAUS,UAAAxI,EAAA,GACL+H,EAAUS,UAAS,CACtBnP,KAAM,UACN0L,OAAAA,EACA6yB,aAAcR,EACdU,UAAWD,GAEf,CCxHA,IAGMtR,GAAmB,eA2BZwR,GAzBqB,SAACl2B,QAAO,IAAPA,IAAAA,EAA+B,CAAC,GACjE,IAAMm1B,EAAQn1B,EAAQm1B,OALF,EAMdn5B,EAAMgE,EAAQhE,KAPF,QASlB,MAAO,CACLxC,KAAMkrB,GAENT,UAAS,WAAI,EACbG,gBAAe,SAACne,EAAO0D,EAAM8J,GAC3B,IAAMzT,EAAUyT,EAAO+E,aAEvBuc,GAEE5K,GACAnqB,EAAQ2U,YACR3U,EAAQmU,eACRnY,EACAm5B,EACAlvB,EACA0D,EAER,EAEA,EASawsB,GAAe7R,GAA4BI,GAAkBwR,IC1CpExR,GAAmB,cA8BZ0R,GA5BoB,WAC/B,MAAO,CACL58B,KAAMkrB,GAENT,UAAS,WAAI,EACbG,gBAAe,SAACne,GAEd,GAAKpG,GAAOmiB,WAAcniB,GAAOstB,UAAattB,GAAOwO,SAArD,CAKA,IAAMgG,EAAOpO,EAAMmO,SAAWnO,EAAMmO,QAAQC,KAASxU,GAAOstB,UAAYttB,GAAOstB,SAASC,KAChFiJ,GAAax2B,GAAOwO,UAAY,CAAC,GAAjCgoB,SACAjqB,GAAcvM,GAAOmiB,WAAa,CAAC,GAAnC5V,UAEFkqB,EAAAn4B,EAAA,GACA8H,EAAMmO,SAAWnO,EAAMmO,QAAQkiB,QAC/BD,GAAY,CAAEE,QAASF,GACvBjqB,GAAa,CAAE,aAAcA,IAE7BgI,EAAQjW,EAAA,GAAO8H,EAAMmO,QAAaC,GAAO,CAAEA,IAAAA,GAAK,CAAGiiB,QAAAA,IAEzDrwB,EAAMmO,QAAUA,CAdtB,CAeA,EAEA,EASaoiB,GAAclS,GAA4BI,GAAkB0R,IC1CzE,SAASK,GAAgBphC,EAAGC,GAC1B,OAAOmhC,GAAkBlhC,OAAOmE,eAAiBnE,OAAOmE,eAAe2E,OAAS,SAAUhJ,EAAGC,GAC3F,OAAOD,EAAEsE,UAAYrE,EAAGD,CAC1B,EAAGohC,GAAgBphC,EAAGC,EACxB,CCHA,SAASohC,GAAerhC,EAAGM,GACzBN,EAAEG,UAAYD,OAAOoB,OAAOhB,EAAEH,WAAYH,EAAEG,UAAU+D,YAAclE,EAAGqE,GAAerE,EAAGM,EAC3F,CCHA,SAASb,GAAQa,GAGf,OAAOb,GAAU,mBAAqBc,QAAU,iBAAmBA,OAAOE,SAAW,SAAUH,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBC,QAAUD,EAAE4D,cAAgB3D,QAAUD,IAAMC,OAAOJ,UAAY,gBAAkBG,CACpH,EAAGb,GAAQa,EACb,CCNA,SAASghC,GAActhC,GACrB,IAAIQ,ECFN,SAAqBR,GACnB,GAAI,UAAYP,GAAQO,KAAOA,EAAG,OAAOA,EACzC,IAAIC,EAAID,EAAEO,OAAOghC,aACjB,QAAI,IAAWthC,EAAG,CAChB,IAAIO,EAAIP,EAAEoC,KAAKrC,EAAGF,UAClB,GAAI,UAAYL,GAAQe,GAAI,OAAOA,EACnC,MAAM,IAAI+C,UAAU,+CACtB,CACA,OAAyB2J,OAAiBlN,EAC5C,CDPUuhC,CAAYvhC,GACpB,MAAO,UAAYP,GAAQe,GAAKA,EAAIA,EAAI,EAC1C,CEJA,SAASghC,GAAkBvhC,EAAGH,GAC5B,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAEiE,OAAQ/D,IAAK,CACjC,IAAIM,EAAIR,EAAEE,GACVM,EAAEW,WAAaX,EAAEW,aAAc,EAAIX,EAAEY,cAAe,EAAI,UAAWZ,IAAMA,EAAEa,UAAW,GAAKjB,OAAOa,eAAed,EAAGqhC,GAAchhC,EAAEqG,KAAMrG,EAC5I,CACF,CACA,SAASmhC,GAAaxhC,EAAGH,EAAGE,GAC1B,OAAOF,GAAK0hC,GAAkBvhC,EAAEE,UAAWL,GAAIE,GAAKwhC,GAAkBvhC,EAAGD,GAAIE,OAAOa,eAAed,EAAG,YAAa,CACjHkB,UAAU,IACRlB,CACN,CCNO,ICCgByhC,GDDVC,GAAmC,gBAKnCC,GAAwC,qBAKxCC,GAA+B,YAK/BC,GAAmC,gBCwHzC,SAASC,GAAcjlB,EAAYklB,GASxCllB,EAAKwK,OAAO,mBAAoBpa,OAAO80B,IAEvCllB,EAAKmlB,QAAQ,4BAA6BD,GAE1C,IAAME,EApED,SAAmCF,GACxC,GAAIA,EAAa,KAAOA,GAAc,IACpC,MAAO,KAGT,GAAIA,GAAc,KAAOA,EAAa,IACpC,OAAQA,GACN,KAAK,IACH,MAAO,kBACT,KAAK,IACH,MAAO,oBACT,KAAK,IACH,MAAO,YACT,KAAK,IACH,MAAO,iBACT,KAAK,IACH,MAAO,sBACT,KAAK,IACH,MAAO,qBACT,QACE,MAAO,mBAIb,GAAIA,GAAc,KAAOA,EAAa,IACpC,OAAQA,GACN,KAAK,IACH,MAAO,gBACT,KAAK,IACH,MAAO,cACT,KAAK,IACH,MAAO,oBACT,QACE,MAAO,iBAIb,MAAO,eACT,CA8BqBG,CAA0BH,GAC1B,kBAAfE,GACFplB,EAAKslB,UAAUF,EAEnB,EAvJuB,SAAAR,GAEZA,EAAA,GAAJ,KAEiCA,EAAA,iBAAnB,oBAEgBA,EAAA,gBAAjB,kBAEoBA,EAAA,iBAAnB,oBAEGA,EAAA,SAAX,YAE6BA,EAAA,kBAApB,qBAEgBA,EAAA,gBAAlB,mBAEaA,EAAA,cAAf,gBAEWA,EAAA,YAAb,cAEkBA,EAAA,cAAhB,iBAEcA,EAAA,aAAf,gBAEQA,EAAA,UAAX,YAEoBA,EAAA,cAAhB,iBAE0BA,EAAA,mBAArB,sBAEFA,EAAA,QAAT,UAEiBA,EAAA,WAAd,eAESA,EAAA,SAAX,WACZ,CAnCsB,CAmCvBA,KAAAA,GAAA,KCJA,IAMaW,GAAa,WAKjB,SAAAA,EAAYC,QAAM,IAANA,IAAAA,EAAiB,KAClC5/B,KAAK6/B,QAAUD,EACf5/B,KAAKuf,MAAQ,EACjB,CAeE,OAbFogB,EAAAliC,UAMSsY,IAAA,SAAIqE,GACLpa,KAAKuf,MAAMle,OAASrB,KAAK6/B,QAE3BzlB,EAAK0lB,kBAAen8B,EAEpB3D,KAAKuf,MAAMte,KAAKmZ,EAEtB,EAAEulB,CAAA,CAvBwB,GA6BbI,GAAA,WA+DJ,SAAAA,EAAYzlB,GAA+B,IAAAuK,OAApB,IAAXvK,IAAAA,EAA2B,CAAC,GAC7Cta,KAAKggC,SAAW1lB,EAAYlB,SAAW9L,IACvCtN,KAAKigC,QAAU3lB,EAAYR,QAAUxM,IAAQuM,UAAU,IACvD7Z,KAAKkgC,WAAa5lB,EAAY+c,gBAAkBllB,KAEhDnS,KAAK6a,KAAOP,EAAYO,KAAKzU,EAAA,GAAOkU,EAAYO,MAAS,CAAC,EAE1D7a,KAAK+O,KAAOuL,EAAYvL,KAAK3I,EAAA,GAAOkU,EAAYvL,MAAS,CAAC,EAE1D/O,KAAKmgC,aAAe7lB,EAAY6lB,cAAgB,SAEhDngC,KAAKogC,YAAc,CAAC,EACpBpgC,KAAKqgC,cAAaj6B,IAAAye,EAAA,IACfua,IAAmC9kB,EAAYQ,QAAU,SAAQ+J,EACjEsa,IAA+B7kB,EAAYK,GAAEkK,GAC3CvK,EAAYgmB,aAIjBtgC,KAAKugC,MAAQjmB,EAAY7Y,MAAQ6Y,EAAYqH,YAEzCrH,EAAYjB,eACdrZ,KAAKwgC,cAAgBlmB,EAAYjB,cAG/B,YAAaiB,IACfta,KAAKygC,SAAWnmB,EAAYP,SAE1BO,EAAY/F,SACdvU,KAAK0gC,QAAUpmB,EAAY/F,QAEzB+F,EAAYwd,eACd93B,KAAK2gC,SAAWrmB,EAAYwd,mBAEIn0B,IAA9B2W,EAAYsmB,gBACd5gC,KAAK6gC,eAAiBvmB,EAAYsmB,eAEpC5gC,KAAK8gC,cAAgBxmB,EAAYymB,aAAa36B,EAAA,GAAOkU,EAAYymB,cAAiB,CAAC,CACvF,CAKA,IAAAC,EAAAjB,EAAAtiC,UA8fE,OAnTFujC,EACS1mB,YAAA,WAEL,MAAO,CACLR,OAFgE9Z,KAA1DigC,QAGN7mB,QAHgEpZ,KAAzCggC,SAIvBzkB,WAJgEvb,KAAtBygC,SxCzXd,EADH,EwCgY/B,EAEAO,EAMSC,WAAA,SACL3mB,GAEA,IAAM4mB,EAAY,IAAInB,EAAI35B,EAAC,CAAC,EACvBkU,EAAW,CACdjB,aAAcrZ,KAAKigC,QACnBlmB,QAAS/Z,KAAKygC,SACdrnB,QAASpZ,KAAKggC,YAIhBkB,EAAUpB,aAAe9/B,KAAK8/B,aAE1BoB,EAAUpB,cAEZoB,EAAUpB,aAAa/pB,IAAImrB,GAG7B,IAAM9e,EAAW9B,GAAYtgB,MAgB7B,OAZAkhC,EAAU3gB,YAAc6B,EAYjB8e,CACX,EAEAF,EASSpc,OAAA,SAAO3gB,EAAa3F,GAAwB,IAAA2mB,EAGjD,OADAjlB,KAAK6a,KAAKzU,EAAA,GAAOpG,KAAK6a,OAAIoK,EAAA,IAAGhhB,GAAM3F,EAAA2mB,IAC5BjlB,IACX,EAQAghC,EACSzB,QAAA,SAAQt7B,EAAa3F,GAAkB,IAAA6iC,EAG5C,OADAnhC,KAAK+O,KAAK3I,EAAA,GAAOpG,KAAK+O,OAAIoyB,EAAA,IAAGl9B,GAAM3F,EAAA6iC,IAC5BnhC,IACX,EAEAghC,EACSI,aAAA,SAAan9B,EAAa3F,QACjBqF,IAAVrF,SAEK0B,KAAKogC,YAAYn8B,GAExBjE,KAAKogC,YAAYn8B,GAAO3F,CAE9B,EAEA0iC,EACSX,cAAA,SAAcC,GAAkC,IAAAhwB,EAAA,KACrD9S,OAAOwE,KAAKs+B,GAAY//B,SAAQ,SAAA0D,GAAI,OAAGqM,EAAK8wB,aAAan9B,EAAKq8B,EAAWr8B,GAAK,GAClF,EAEA+8B,EAGStB,UAAA,SAAUphC,GAEf,OADA0B,KAAK0gC,QAAUpiC,EACR0B,IACX,EAEAghC,EAIS3B,cAAA,SAAcC,GAEnB,OADAD,GAAcr/B,KAAMs/B,GACbt/B,IACX,EAEAghC,EAKSK,QAAA,SAAQ5/B,GACbzB,KAAKshC,WAAW7/B,EACpB,EAEAu/B,EAGSM,WAAA,SAAW7/B,GAEhB,OADAzB,KAAKugC,MAAQ9+B,EACNzB,IACX,EAEAghC,EAKSO,UAAA,WACL,MAAwB,OAAjBvhC,KAAK0gC,OAChB,EAEAM,EAKSt+B,OAAA,SAAOo1B,GACZ,OAAO93B,KAAKwhC,IAAI1J,EACpB,EAEAkJ,EACSQ,IAAA,SAAI1J,GAEL93B,KAAK2gC,WAGQrgB,GAAYtgB,MAa7BA,KAAK2gC,SAAWzlB,GAAuB4c,GAC3C,EAEAkJ,EAKSS,cAAA,WACL,OAAO1mB,GAAkB/a,KAC7B,EAEAghC,EAKSU,UAAA,WACL,OAAO/0B,EAAkB,CACvBoC,KAAM/O,KAAK2hC,WACXhgB,YAAa3hB,KAAKugC,MAClBzI,aAAc93B,KAAK2gC,SAEnBhmB,GAAI3a,KAAK2a,GACTtB,aAAcrZ,KAAKwgC,cACnBzmB,QAAS/Z,KAAKygC,SACd3mB,OAAQ9Z,KAAKigC,QACb5I,eAAgBr3B,KAAKkgC,WACrB3rB,OAAQvU,KAAK0gC,QAEb7lB,KAAM7a,KAAK6a,KACXzB,QAASpZ,KAAKggC,UAEpB,EAEAgB,EAKSY,kBAAA,SAAkBtnB,GAiBvB,OAfAta,KAAK+O,KAAOuL,EAAYvL,MAAQ,CAAC,EAEjC/O,KAAKugC,MAAQjmB,EAAY7Y,MAAQ6Y,EAAYqH,YAC7C3hB,KAAK2gC,SAAWrmB,EAAYwd,aAE5B93B,KAAK2a,GAAKL,EAAYK,GACtB3a,KAAKwgC,cAAgBlmB,EAAYjB,aACjCrZ,KAAKygC,SAAWnmB,EAAYP,QAC5B/Z,KAAKigC,QAAU3lB,EAAYR,QAAU9Z,KAAKigC,QAC1CjgC,KAAKkgC,WAAa5lB,EAAY+c,gBAAkBr3B,KAAKkgC,WACrDlgC,KAAK0gC,QAAUpmB,EAAY/F,OAE3BvU,KAAK6a,KAAOP,EAAYO,MAAQ,CAAC,EACjC7a,KAAKggC,SAAW1lB,EAAYlB,SAAWpZ,KAAKggC,SAErChgC,IACX,EAEAghC,EAKSa,gBAAA,WACL,OAAO1nB,GAAmBna,KAC9B,EAEAghC,EAQS3lB,YAAA,WACL,OAAO1O,EAAkB,CACvBoC,KAAM/O,KAAK2hC,WACXhgB,YAAa3hB,KAAKugC,MAClB5lB,GAAI3a,KAAKogC,YAAYjB,IACrBvkB,eAAgB5a,KAAKwgC,cACrBjmB,QAASva,KAAKigC,QACd6B,gBAAiB9hC,KAAKkgC,WACtB3rB,OAAQvU,KAAK0gC,QAEb7lB,KAAMrd,OAAOwE,KAAKhC,KAAK6a,MAAMxZ,OAAS,EAAIrB,KAAK6a,UAAOlX,EACtDiQ,UAAW5T,KAAK2gC,SAChBnmB,SAAUxa,KAAKggC,SACfllB,OAAQ9a,KAAKogC,YAAYhB,IACzB2C,sBAAkBC,EAClBC,WAAYjiC,KAAKogC,YAAyC,WAC1D8B,eAAgBliC,KAAK6gC,eACrBE,aAAcvjC,OAAOwE,KAAKhC,KAAK8gC,eAAez/B,OAAS,EAAIrB,KAAK8gC,mBAAgBn9B,GAEtF,EAEAq9B,EACSmB,YAAA,WACL,OAAQniC,KAAK2gC,YAAc3gC,KAAKygC,QACpC,EAEAO,EAISnqB,OAAA,WACL,OAAO7W,KAAKqb,aAChB,EAEA2lB,EAKUW,SAAA,WAON,IAAQ5yB,EAAkC/O,KAAlC+O,KAAmBuxB,EAAetgC,KAA5BogC,YAERgC,EAAU5kC,OAAOwE,KAAK+M,GAAM1N,OAAS,EACrCghC,EAAgB7kC,OAAOwE,KAAKs+B,GAAYj/B,OAAS,EAEvD,GAAK+gC,GAAYC,EAIjB,OAAID,GAAWC,EACbj8B,EAAA,GACK2I,EACAuxB,GAIA8B,EAAUrzB,EAAOuxB,CAC5B,EAAEvB,GAAAgB,EAAA,EAAA97B,IAAA,OAAAC,IA1fO,WACL,OAAOlE,KAAKugC,OAAS,EACzB,EAEAj8B,IAIS,SAAS7C,GACdzB,KAAKshC,WAAW7/B,EACpB,GAEA,CAAAwC,IAAA,cAAAC,IAIS,WACL,OAAOlE,KAAKugC,KAChB,EAEAj8B,IAIS,SAAgBqd,GACrB3hB,KAAKugC,MAAQ5e,CACjB,GAEA,CAAA1d,IAAA,UAAAC,IAIS,WACL,OAAOlE,KAAKggC,QAChB,EAEA17B,IAIS,SAAY8U,GACjBpZ,KAAKggC,SAAW5mB,CACpB,GAEA,CAAAnV,IAAA,SAAAC,IAIS,WACL,OAAOlE,KAAKigC,OAChB,EAEA37B,IAIS,SAAWwV,GAChB9Z,KAAKigC,QAAUnmB,CACnB,GAEA,CAAA7V,IAAA,eAAAC,IAcS,WACL,OAAOlE,KAAKwgC,aAChB,EAEAl8B,IAbS,SAAiBg+B,GACtBtiC,KAAKwgC,cAAgB8B,CACzB,GAAE,CAAAr+B,IAAA,UAAAC,IAeO,WACL,OAAOlE,KAAKygC,QAChB,EAEAn8B,IAIS,SAAYyV,GACjB/Z,KAAKygC,SAAW1mB,CACpB,GAEA,CAAA9V,IAAA,aAAAC,IAIS,WACL,OAAOlE,KAAKogC,WAChB,EAEA97B,IAIS,SAAeg8B,GACpBtgC,KAAKogC,YAAcE,CACvB,GAEA,CAAAr8B,IAAA,iBAAAC,IAIS,WACL,OAAOlE,KAAKkgC,UAChB,EAEA57B,IAIS,SAAmBi+B,GACxBviC,KAAKkgC,WAAaqC,CACtB,GAEA,CAAAt+B,IAAA,eAAAC,IAIS,WACL,OAAOlE,KAAK2gC,QAChB,EAEAr8B,IAIS,SAAiBk+B,GACtBxiC,KAAK2gC,SAAW6B,CACpB,GAEA,CAAAv+B,IAAA,SAAAC,IAKS,WACL,OAAOlE,KAAK0gC,OAChB,EAEAp8B,IAKS,SAAWiQ,GAChBvU,KAAK0gC,QAAUnsB,CACnB,GAEA,CAAAtQ,IAAA,KAAAC,IAKS,WACL,OAAOlE,KAAKogC,YAAYjB,GAC5B,EAEA76B,IAMS,SAAOqW,GACZ3a,KAAKohC,aAAajC,GAA8BxkB,EACpD,GAEA,CAAA1W,IAAA,SAAAC,IAKS,WACL,OAAOlE,KAAKogC,YAAYhB,GAC5B,EAEA96B,IAKS,SAAWwW,GAChB9a,KAAKohC,aAAahC,GAAkCtkB,EACxD,IAAE,CAjTW,GC5DN,SAAS2nB,GACdC,GAMA,IAAMhnB,EAASyE,KACTlY,EAAUy6B,GAAiBhnB,GAAUA,EAAO+E,aAClD,QAASxY,IAAYA,EAAQ06B,eAAiB,qBAAsB16B,GAAW,kBAAmBA,EACpG,CCqKO,SAAS26B,GAAkBvvB,GAChC,GAAKovB,KAAL,CAIA,IAAMnoB,EA4NR,SAA0BjH,GACxB,GAAIA,EAAQkvB,UAAW,CACrB,IAAMM,EAAGz8B,EAAA,GAA4DiN,GAGrE,OAFAwvB,EAAIxL,eAAiBnc,GAAuB7H,EAAQkvB,kBAC7CM,EAAIN,UACJM,CACX,CAEE,OAAOxvB,CACT,CArOsByvB,CAAiBzvB,GAE/B6X,EAAMtL,KACNmjB,EAAa1vB,EAAQoI,MAEvBpI,EAAQoI,MAAM8J,UA6BXnF,KAAkBmF,UAxBzB,IAFuBlS,EAAQ2vB,cAAiBD,EAEhD,CAIA,IAKME,GALQ5vB,EAAQoI,OAAS2E,MAKcrC,QAE7C,OAsHF,SAEEmN,EAAGhT,GAYe,IAVhB6qB,EAAU7qB,EAAV6qB,WACAzoB,EAAWpC,EAAXoC,YACA4oB,EAAgBhrB,EAAhBgrB,iBACAznB,EAAKvD,EAALuD,MAQF,GAAKgnB,KAAL,CAIA,IAEIroB,EAFEuB,EAAiB4M,KAGvB,GAAIwa,IAAeG,EAEjB9oB,EAAO2oB,EAAW9B,WAAW3mB,QACxB,GAAIyoB,EAAY,CAErB,IAAM/oB,EAAMiH,GAAkC8hB,GAC9CI,EAA0CJ,EAAWzoB,cAA7ClB,EAAO+pB,EAAP/pB,QAAiBC,EAAa8pB,EAArBrpB,OACXC,EAAUkB,GAAc8nB,GAG9B3oB,EAAO8Q,EAAI5B,iBAAgBljB,EAAC,CAC1BgT,QAAAA,EACAC,aAAAA,EACAJ,cAAec,GACZO,EAAW,CACdgH,SAAQlb,EAAA,CACNiR,uBAAwB2C,GAErBM,EAAYgH,YAGvB,KAAS,CACL,IAAA8hB,EAAAh9B,EAAA,GACKuV,EAAekL,wBACfpL,EAAMoL,yBAFHzN,EAAOgqB,EAAPhqB,QAASY,EAAGopB,EAAHppB,IAAKX,EAAY+pB,EAAZ/pB,aAAcU,EAAQqpB,EAARrpB,QAMpCK,EAAO8Q,EAAI5B,iBAAgBljB,EAAC,CAC1BgT,QAAAA,EACAC,aAAAA,EACAJ,cAAec,GACZO,EAAW,CACdgH,SAAQlb,EAAA,CACNiR,uBAAwB2C,GAErBM,EAAYgH,YAGvB,CAUE,OAJA7F,EAAM6J,QAAQlL,GAiChB,SAAiCA,EAAwBqB,EAAcE,GACjEvB,IACF5O,EAAyB4O,EAAMipB,GAAqC1nB,GACpEnQ,EAAyB4O,EAAMkpB,GAA2B7nB,GAE9D,CApCE8nB,CAAwBnpB,EAAMqB,EAAOE,GAE9BvB,CAtDT,CAuDA,CA9LSopB,CAA6BtY,EAAK,CACvC6X,WAAAA,EACAzoB,YAAAA,EACA4oB,iBAAkB7vB,EAAQ6vB,iBAC1BznB,MAAOwnB,GAbX,CAdA,CA6BA,CA4MA,IAAMK,GAA4B,eAC5BD,GAAsC,wBChZ/BI,GAAA,SAAAC,GA4BJ,SAAAD,EAAYE,EAAwCzY,GAAW,IAAA5a,GACpEA,EAAAozB,EAAA/jC,KAAA,KAAMgkC,IAAmB,MACpBpgB,UAAY,CAAC,EAGlBjT,EAAKszB,KAAO1Y,GAAOtL,KAEnBtP,EAAKiwB,MAAQoD,EAAmBliC,MAAQ,GAExC6O,EAAKuzB,UAAAz9B,EAAA,GAEAu9B,EAAmBriB,UAGxBhR,EAAKwzB,SAAWH,EAAmBI,QAKnCzzB,EAAKiQ,YAAYjQ,EAIjB,IAAM0zB,EAAiC1zB,EAAKuzB,UAAUxsB,uBAItD,OAHI2sB,IAEF1zB,EAAK8Q,8BAAAhb,EAAA,GAAqC49B,IAC5C1zB,CACJ,CAKAquB,GAAA8E,EAAAC,GAAA,IAAAvzB,EAAAszB,EAAAhmC,UA2RE,OAvOF0S,EAKSkxB,QAAA,SAAQ5/B,EAAc0J,QAAM,IAANA,IAAAA,EAAwC,UACnEnL,KAAKugC,MAAQ9+B,EACbzB,KAAKohC,aAAanC,GAAkC9zB,EACxD,EAEAgF,EACSmxB,WAAA,SAAW7/B,GAEhB,OADAzB,KAAKugC,MAAQ9+B,EACNzB,IACX,EAEAmQ,EAIS8zB,iBAAA,SAAiBrE,QAAM,IAANA,IAAAA,EAAiB,KAElC5/B,KAAK8/B,eAER9/B,KAAK8/B,aAAe,IAAIH,GAAaC,IAGvC5/B,KAAK8/B,aAAa/pB,IAAI/V,KAC1B,EAEAmQ,EAISkV,WAAA,SAAWphB,EAAaoP,GACb,OAAZA,SAEKrT,KAAKujB,UAAUtf,GAEtBjE,KAAKujB,UAAUtf,GAAOoP,CAE5B,EAEAlD,EAKS+zB,eAAA,SAAeziC,EAAcnD,EAAe6lC,QAAI,IAAJA,IAAAA,EAAwB,IACzEnkC,KAAK8gC,cAAcr/B,GAAQ,CAAEnD,MAAAA,EAAO6lC,KAAAA,EACxC,EAEAh0B,EAISi0B,YAAA,SAAYC,GACjBrkC,KAAK6jC,UAAUz9B,EAAA,GAAOpG,KAAK6jC,UAAcQ,EAC7C,EAEAl0B,EAGSqxB,IAAA,SAAI1J,GACT,IAAMwM,EAAeppB,GAAuB4c,GACtCvX,EAAcvgB,KAAKukC,mBAAmBD,GAC5C,GAAK/jB,EAIL,OAAOvgB,KAAK4jC,KAAK5jB,aAAaO,EAClC,EAEApQ,EAGSuxB,UAAA,WAIL,OAAO/0B,EAAiBvG,EAAC,CAAC,EAFRs9B,EAAAjmC,UAAQikC,UAAS/hC,KAAC,MAGpB,CACd8B,KAAMzB,KAAKugC,MACXwD,QAAS/jC,KAAK8jC,WAEpB,EAEA3zB,EAGSyxB,kBAAA,SAAkB+B,GAOvB,OALAD,EAAAjmC,UAAMmkC,kBAAiBjiC,KAAC,KAAAgkC,GAExB3jC,KAAKugC,MAAQoD,EAAmBliC,MAAQ,GACxCzB,KAAK8jC,SAAWH,EAAmBI,QAE5B/jC,IACX,EAEAmQ,EAOSq0B,0BAAA,WACL,OAAOvjB,GAAkCjhB,KAC7C,EAQAmQ,EACSs0B,OAAA,SAAOvZ,GACZlrB,KAAK4jC,KAAO1Y,CAChB,EAEA/a,EAGSu0B,aAAA,WACL,QAAuB/gC,IAAnB3D,KAAKujB,gBAAyD5f,IAA9B3D,KAAKujB,UAAmB,QAC1D,OAAOvjB,KAAKujB,UAAmB,QAAE0e,UAGvC,EAEA9xB,EAGYo0B,mBAAA,SAAmBzM,GAAqD,IAAAnnB,EAAA,KAEhF,QAAsBhN,IAAlB3D,KAAK2gC,SAAT,CAIK3gC,KAAKugC,QAERvgC,KAAKugC,MAAQ,2BAIfmD,EAAAjmC,UAAM+jC,IAAG7hC,KAAC,KAAAm4B,GAGV,IAAMpc,EAAS1b,KAAK4jC,KAAKzjB,YAKzB,GAJIzE,GAAUA,EAAOsF,MACnBtF,EAAOsF,KAAK,oBAAqBhhB,OAGb,IAAlBA,KAAKygC,SAAT,CAYA,IAAMkE,EAAgB3kC,KAAK8/B,aAEvB9/B,KAAK8/B,aAAavgB,MAAM9V,QAAO,SAAA2Q,GAAA,OAAQA,IAASzJ,GAAQ+J,GAAWN,GAAMxG,SAAS,IAClF,GAEJ,GAAI5T,KAAK8jC,UAAYa,EAActjC,OAAS,EAAG,CAC7C,IAAMujC,EAAWD,EAAc/6B,KAAI,SAAAwQ,GAAA,OAAQM,GAAWN,GAAMxG,SAAS,IAAEnK,OAAOjC,SAC9ExH,KAAK2gC,SAAWiE,EAASrtB,QAAO,SAACnV,EAAMyiC,GACrC,OAAOziC,EAAOyiC,EAAUziC,EAAOyiC,CACvC,GACA,CAEI,IAAAC,ED8HK,CACLrpB,MC/HyGzb,KD+HzEsjC,IAChC3nB,eChIyG3b,KDgIhEqjC,KChI1B0B,EAAiBD,EAAxBrpB,MAA0CupB,EAAAF,EAAhBnpB,eAG1B2F,EAAathB,KAAbshB,SAEAnW,EAAWmW,EAAXnW,OAEFoV,EAAWna,EAAA,CACfgZ,SAAQhZ,EAAA,GACHpG,KAAKujB,UAAS,CAEjBjE,MAAOnF,GAAmBna,QAG5Buf,MAAOolB,EACP7C,gBAAiB9hC,KAAKkgC,WAEtBrlB,KAAM7a,KAAK6a,KACXjH,UAAW5T,KAAK2gC,SAChBpgB,YAAavgB,KAAKugC,MAClB9gC,KAAM,cACNoiB,sBAAqBzb,EAAA,GAChBkb,EAAQ,CACXyjB,kBAAAA,EACAC,2BAAAA,GACGr4B,EAAkB,CACnB0K,uBAAwB4J,GAAkCjhB,SAG9D+hC,sBAAkBC,GACd72B,GAAU,CACZ85B,iBAAkB,CAChB95B,OAAAA,KAmBN,OAdwB3N,OAAOwE,KAAKhC,KAAK8gC,eAAez/B,OAAS,IAQ/Dkf,EAAYwgB,aAAe/gC,KAAK8gC,eAM3BvgB,CAlEX,CALU7E,GACFA,EAAOwpB,mBAAmB,cAAe,cArBjD,CA4FA,EAAEnG,GAAA0E,EAAA,EAAAx/B,IAAA,OAAAC,IAvRO,WACL,OAAOlE,KAAKugC,KAChB,EAEAj8B,IAIS,SAAS6gC,GAEdnlC,KAAKqhC,QAAQ8D,EACjB,GAEA,CAAAlhC,IAAA,WAAAC,IAIS,WAEL,OAAAkC,EAAA,CAGE+E,OAAQ,SACRi6B,aAAc,CAAC,GAGZplC,KAAK6jC,UAGJ7jC,KAAKogC,YAAYnB,KAAqC,CACxD9zB,OAAQnL,KAAKogC,YAAYnB,KAEvBj/B,KAAKogC,YAAYlB,KAA0C,CAC7D1d,WAAYxhB,KAAKogC,YAAYlB,KAGrC,EAEA56B,IAIS,SAAagd,GAClBthB,KAAK6jC,UAAYviB,CACrB,IAAE,CA7GW,CAAoBye,2GCb1B,IAAMsF,GAAmB,CAC9BC,YAAa,IACbC,aAAc,IACdC,kBAAmB,KAKfC,GAAkC,CACtC,kBACA,cACA,iBACA,eACA,iBACA,aAMWC,GAA4B,SAAAC,GAChC,SAAAD,EACYE,EACAC,EACVC,EACPlG,GACA,IAAAtvB,EAEJ,OADIA,EAAAq1B,EAAAhmC,KAAA,KAAMigC,IAAO,MAAAgG,cAAAA,EAAAt1B,EAAAu1B,aAAAA,EAAAv1B,EAAAw1B,kBAAAA,EACjBx1B,CAAA,CAwBE,OAtBFquB,GAAA+G,EAAAC,GAAAD,EAAAjoC,UAGSsY,IAAA,SAAIqE,GAAkB,IAAAzJ,EAAA,KAG3B,GAAIyJ,EAAKE,cAAcR,SAAW9Z,KAAK8lC,kBAAmB,CAGxD,IAAMC,EAAc3rB,EAAKonB,IACzBpnB,EAAKonB,IAAM,WACT7wB,EAAKk1B,aAAazrB,EAAKE,cAAcR,QAAO,QAAAiR,EAAAxkB,UAAAlF,OAD/B8tB,EAAI,IAAA3mB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJkE,EAAIlE,GAAA1kB,UAAA0kB,GAEjB,OAAO8a,EAAYv/B,MAAM4T,EAAM+U,EACvC,OAGyCxrB,IAA/B+W,GAAWN,GAAMxG,WACnB5T,KAAK4lC,cAAcxrB,EAAKE,cAAcR,OAE9C,CAEI6rB,EAAAloC,UAAMsY,IAAGpW,KAAC,KAAAya,EACd,EAAEsrB,CAAA,CAhCuC,CAAQ/F,IA0CpCqG,GAAgB,SAAAC,GA6BpB,SAAAD,EACLrC,EAEiBuC,EAKAC,EAIAC,EACAC,EAEAC,EASjBC,GACA,IAAA11B,EA6BqG,YA9CxE,IAAZs1B,IAAAA,EAAuBd,GAAiBC,kBAI3B,IAAbc,IAAAA,EAAwBf,GAAiBE,mBACvB,IAAlBc,IAAAA,EAA6BhB,GAAiBG,wBAEtC,IAARc,IAAAA,GAAoB,QASX,IAA1BC,IAAAA,GAAsC,IAEtC11B,EAAAo1B,EAAAtmC,KAAA,KAAMgkC,EAAoBuC,IAAS,MAAAA,SAAAA,EAAAr1B,EAAAs1B,aAAAA,EAAAt1B,EAAAu1B,cAAAA,EAAAv1B,EAAAw1B,mBAAAA,EAAAx1B,EAAAy1B,SAAAA,EAEnCz1B,EAAK21B,WAAa,CAAC,EACnB31B,EAAK41B,kBAAoB,EACzB51B,EAAK61B,WAAY,EACjB71B,EAAK81B,iCAAkC,EACvC91B,EAAK+1B,uBAAyB,GAC9B/1B,EAAKg2B,cAAgBpB,GAAgC,GACrD50B,EAAKi2B,oBAAsBP,EAEvBD,GAKiGJ,EAAA7lB,WAAAiF,QAAAzU,GAGA01B,GACA11B,EAAAk2B,sBAGA7X,YAAA,WACAre,EAAA61B,YACA71B,EAAA6uB,UAAA,qBACA7uB,EAAAg2B,cAAApB,GAAA,GACA50B,EAAA2wB,MAEA,GAAA3wB,EAAAu1B,eAAAv1B,CACA,CAEA8tB,GAAAqH,EAAAC,GAAA,IAAAjF,EAAAgF,EAAAvoC,UAmQA,OAnQAujC,EACAQ,IAAA,SAAA1J,GAAA,IAAA9mB,EAAA,KACAg2B,EAAA9rB,GAAA4c,GAWA,GATA,KAAA4O,WAAA,EACA,KAAAF,WAAA,GAGA,yBAAA7rB,IACA,KAAAymB,aAvJ/E,eAuJ+E,KAAAyF,eAIA,KAAA/G,aAAA,CAKA,QAAAnU,EAAAC,gsBAAAC,CAAA,KAAA+a,0BAAAjb,EAAAC,KAAA9sB,OACA2G,EADAkmB,EAAArtB,OACA,KAAA0oC,GAIA,KAAAlH,aAAAvgB,MAAA,KAAAugB,aAAAvgB,MAAA9V,QAAA,SAAA2Q,GAEA,GAAAA,EAAAE,cAAAR,SAAA9I,EAAAsJ,cAAAR,OACA,SAIAY,GAAAN,GAAAxG,YACAwG,EAAAslB,UAAA,aACAtlB,EAAAonB,IAAAwF,IAKA,IAAAvsB,EAAAC,GAAAN,GAAAmoB,EAAA9nB,EAAAqnB,gBAAAU,EAAA/nB,EAAA7G,UACAqzB,EAAA1E,GAAAA,EAAAyE,EAGAE,GAAAl2B,EAAAo1B,cAAAp1B,EAAAm1B,cAAA,IAYA,OAAAc,IAXAzE,GAAAD,GAAAC,EAAAD,EAAA2E,EAYA,GAGA,CAKA,QAAAZ,SAAA,CAEA,IAAA7qB,EAAA,KAAAyqB,SAAA7lB,WAEA5E,EAAA+J,mBAAA,MAEA/J,EAAA6J,aAAA3hB,EAEA,CAEA,OAAAsiC,EAAAxoC,UAAA+jC,IAAA7hC,KAAA,KAAAm4B,EACA,EAEAkJ,EAOAmG,6BAAA,SAAA1hC,GACA,KAAAmhC,uBAAA3lC,KAAAwE,EACA,EAEAu7B,EAGAiD,iBAAA,SAAArE,GAAA,IAAA1uB,EAAA,KAEA,KAAA4uB,eAeA,KAAAA,aAAA,IAAA4F,IAdA,SAAA9hC,GACAsN,EAAAw1B,WAGAx1B,EAAA00B,cAAAhiC,EACA,IACA,SAAAA,GACAsN,EAAAw1B,WAGAx1B,EAAA20B,aAAAjiC,EACA,GAGA,KAAA0W,cAAAR,OAAA8lB,GAIA,KAAAwH,kBAGA,KAAAtH,aAAA/pB,IAAA,KACA,EAEAirB,EAMAqG,kBAAA,SACAvP,EAAAwP,GAQA,IANAC,QAMA,IAAAD,EAHA,CACAC,0BAAA,GACAD,GALAC,yBAOA,KAAAZ,iCAAA,IAAAY,EACA,KAAAC,iBACAzQ,aAAA,KAAAyQ,gBACA,KAAAA,oBAAA7jC,EAEA,IAAAnG,OAAAwE,KAAA,KAAAwkC,YAAAnlC,QAAA,KAAAslC,kCACA,KAAAE,cAAApB,GAAA,GACA,KAAAjE,IAAA1J,IAGA,EAEAkJ,EASAyG,gBAAA,SAAAl4B,GACA,KAAAs3B,cAAAt3B,CACA,EAEAyxB,EAGA0G,qBAAA,WACA,KAAAZ,qBAEA,KAAAC,sBACA,KAAAD,oBAAA,EAEA,EAEA9F,EAGA+F,oBAAA,SAAAjP,GAAA,IAAAzmB,EAAA,KACA,KAAAg2B,oBACA,KAAAG,eAAAtY,YAAA,WACA7d,EAAAq1B,WAAA,IAAAlpC,OAAAwE,KAAAqP,EAAAm1B,YAAAnlC,SACAgQ,EAAAw1B,cAAApB,GAAA,GACAp0B,EAAAmwB,IAAA1J,GAEA,QAAAqO,aACA,EAEAnF,EAIA4E,cAAA,SAAA9rB,GACA,KAAAutB,uBAAA1jC,EAAA,CAAA4jC,0BAAA,KAAAZ,kCAEA,KAAAH,WAAA1sB,IAAA,CAEA,EAEAknB,EAIA6E,aAAA,SAAA/rB,GAQA,GAPA,KAAA0sB,WAAA1sB,WAGA,KAAA0sB,WAAA1sB,GAIA,IAAAtc,OAAAwE,KAAA,KAAAwkC,YAAAnlC,OAAA,CACA,IAAAy2B,EAAA3lB,KACA,KAAAw0B,gCACA,KAAAG,qBACA,KAAAD,cAAApB,GAAA,GACA,KAAAjE,IAAA1J,IAKA,KAAAiP,oBAAAjP,EAAA,KAAAqO,aAAA,IAEA,CACA,EAEAnF,EAIA2G,MAAA,WAEA,SAAAjB,UAAA,CAIA,IAAAkB,EAAApqC,OAAAwE,KAAA,KAAAwkC,YAAAz9B,KAAA,IAEA6+B,IAAA,KAAAC,qBACA,KAAApB,oBAEA,KAAAA,kBAAA,EAGA,KAAAoB,qBAAAD,EAEA,KAAAnB,mBAAA,EACA,KAAAK,qBAEA,KAAApH,UAAA,qBACA,KAAAmH,cAAApB,GAAA,GACA,KAAAjE,OAGA,KAAA4F,gBApBA,CAsBA,EAEApG,EAGAoG,eAAA,eAAAU,EAAA,KAEA5Y,YAAA,WACA4Y,EAAAH,OACA,QAAAtB,mBACA,EAAAL,CAAA,CAzV5E,CAAQvC,IC7D9B,SAASsE,GAA4CC,GAM1D,OAJYA,GAAYpoB,MAENS,WAELmF,gBACf,CAiBO,IC1BHyiB,IAAqB,EAkBzB,SAASC,KAEP,IAAMC,EAAoBJ,KAC1B,GAAII,EAAmB,CAGrBA,EAAkBzI,UAFa,iBAGnC,CACA,CClBO,SAAS0I,GACd7nB,EACAtY,EACAogC,GAGA,OAAK5F,GAAkBx6B,QAQKtE,IAAxB4c,EAAYxG,SAEdwG,EAAY6gB,aAAalC,GAAuCoJ,OAAO/nB,EAAYxG,UAC5EwG,IAM4B,mBAA1BtY,EAAQsgC,eACjB/mB,EAAavZ,EAAQsgC,cAAcF,GACnC9nB,EAAY6gB,aAAalC,GAAuCoJ,OAAO9mB,UAC5B7d,IAAlC0kC,EAAgBpvB,cACzBuI,EAAa6mB,EAAgBpvB,mBACgB,IAA7BhR,EAAQugC,kBACxBhnB,EAAavZ,EAAQugC,iBACrBjoB,EAAY6gB,aAAalC,GAAuCoJ,OAAO9mB,MAGvEA,EAAa,EACbjB,EAAY6gB,aAAalC,GAAuC1d,IAK7DinB,GAAkBjnB,IAQlBA,GAiBEjB,EAAAxG,QAAAlV,KAAA6I,SAAA8T,EAIAjB,EAAAxG,QAaAwG,IAvCLA,EAAYxG,SAAU,EACfwG,KAnCPA,EAAYxG,SAAU,EACfwG,GAaT,IAAIiB,CA4DG,CAKA,SAAAinB,GAAAC,GAGA,QAAAtnC,EAAAsnC,IAAA,iBAAAA,GAAA,kBAAAA,GAWAA,EAAA,GAAAA,EAAA,EAMA,CC/GT,SAASjf,KAEP,IAEMrP,EAFQpa,KAAKqgB,WAEAkF,UAEnB,OAAOnL,EACH,CACE,eAAgBW,GAAkBX,IAEpC,CAAC,CACP,CAiBA,SAASuuB,GAGPhF,EACApa,GAGA,IAAM7N,EAAS1b,KAAKmgB,YACdlY,EAAmCyT,GAAUA,EAAO+E,cAAiB,CAAC,GAEjDxY,EAAQk4B,cAAgB,aACnBwD,EAAmBxD,cAAgB,YAUjEwD,EAAmB5pB,SAAU,GAI/B,IAAIwG,EAAc,IAAIkjB,GAAYE,EAAoB3jC,MAkBtD,OAjBAugB,EAAc6nB,GAAkB7nB,EAAatY,EAAO7B,EAAA,CAClD3E,KAAMkiC,EAAmBliC,KACzBwX,cAAe0qB,EAAmB1qB,cAClC0qB,mBAAAA,EACArD,WAAUl6B,EAAA,GAELu9B,EAAmB50B,KACnB40B,EAAmBrD,aAErB/W,KAEW4Y,eACd5hB,EAAY0jB,iBAAiBh8B,EAAQ2gC,cAAiB3gC,EAAQ2gC,aAAaC,UAEzEntB,GAAUA,EAAOsF,MACnBtF,EAAOsF,KAAK,mBAAoBT,GAE3BA,CACT,CAKO,SAASuoB,GAEd5d,EACAyY,EACA2B,EACAC,EACAwD,EACAxf,EACAic,EACAe,QAA0B,IAA1BA,IAAAA,GAAsC,GAGtC,IAAM7qB,EAASwP,EAAI/K,YACblY,EAAmCyT,GAAUA,EAAO+E,cAAiB,CAAC,EAGxEF,EAAc,IAAIylB,GACpBrC,EACAzY,EACAoa,EACAC,EACAC,EACAuD,EACAxC,GAmBF,OAjBAhmB,EAAc6nB,GAAkB7nB,EAAatY,EAAO7B,EAAA,CAClD3E,KAAMkiC,EAAmBliC,KACzBwX,cAAe0qB,EAAmB1qB,cAClC0qB,mBAAAA,EACArD,WAAUl6B,EAAA,GAELu9B,EAAmB50B,KACnB40B,EAAmBrD,aAErB/W,KAEW4Y,eACd5hB,EAAY0jB,iBAAiBh8B,EAAQ2gC,cAAiB3gC,EAAQ2gC,aAAaC,UAEzEntB,GAAUA,EAAOsF,MACnBtF,EAAOsF,KAAK,mBAAoBT,GAE3BA,CACT,CF9FA2nB,GAAcc,IAAM,8BGjCb,ICiCHC,GCtCSnhC,GAAShD,ECgBTokC,GAAe,SAC1BzjC,EACA0jC,EACAC,GAEA,IAAIC,EACAC,EACJ,OAAO,SAACC,GACFJ,EAAO7qC,OAAS,IACdirC,GAAeH,MACjBE,EAAQH,EAAO7qC,OAAS+qC,GAAa,UAMV1lC,IAAd0lC,KACXA,EAAYF,EAAO7qC,MACnB6qC,EAAOG,MAAQA,EACf7jC,EAAS0jC,GAInB,CACA,ECFaK,GAAqB,WAChC,OAAI1hC,GAAO2hC,wBAEP3hC,GAAOsK,cACLA,YAAYs3B,kBAAoBt3B,YAAYs3B,iBAAiB,cAAc,IAzBnC,WAE9C,IAAM12B,EAASlL,GAAOsK,YAAYY,OAE5BvT,EAAOqI,GAAOsK,YAAYu3B,WAAWlqC,KAErCmqC,EAAsD,CAC1DC,UAAW,aACXtH,UAAW,EACX9iC,KAAc,GAARA,EAAY,eAA0B,IAATA,EAAa,SAAW,YAG7D,IAAK,IAAMwE,KAAO+O,EACJ,oBAAR/O,GAAqC,WAARA,IAE/B2lC,EAAgB3lC,GAAOY,KAAKsF,IAAK6I,EAAO/O,GAA6C+O,EAAOD,gBAAiB,IAGjH,OAAO62B,CACT,CAOQE,IAGGhiC,GAAOsK,aAAeA,YAAYs3B,kBAAoBt3B,YAAYs3B,iBAAiB,cAAc,EAE5G,EChCaK,GAAqB,WAChC,IAAMC,EAAWR,KACjB,OAAQQ,GAAYA,EAASC,iBAAoB,CACnD,ECCaC,GAAa,SAACzoC,EAAsBnD,GAC/C,IAAM0rC,EAAWR,KACbW,EAA2C,WAU/C,OARIH,IAEAG,EADGriC,GAAOwO,UAAYxO,GAAOwO,SAAS8zB,cAAiBL,KAAuB,EAC7D,YAEAC,EAASvqC,KAAKmO,QAAQ,KAAM,MAI1C,CACLnM,KAAAA,EACAnD,WAAwB,IAAVA,GAAyB,EAAIA,EAC3C+rC,OAAQ,OACRf,MAAO,EACPhyB,QAAS,GACT1T,GClBK,MAAMqO,KAAKC,MAAK,KAAIrN,KAAKylC,MAAkB,cAAZzlC,KAAK6I,UAAyB,MDmBlEy8B,eAAAA,EAEJ,EEFaI,GAAU,SACrB9qC,EACAgG,EACA+kC,GAEA,IACE,GAAIC,oBAAoBC,oBAAoB1/B,SAASvL,GAAO,CAC1D,IAAMwpC,EAAK,IAAIwB,qBAAoB,SAAAE,GACjCllC,EAASklC,EAAKC,aACtB,IAUM,OATA3B,EAAGsB,QACD/sC,OAAO6I,OACL,CACE5G,KAAAA,EACAorC,UAAU,GAEZL,GAAQ,CAAC,IAGNvB,CACb,CACA,CAAI,MAAO1rC,GACX,CAGA,EC5CautC,GAAW,SAACC,EAAsBC,GAC7C,IAAMC,EAAqB,SAAC/8B,GACP,aAAfA,EAAMzO,MAA4D,WAArCqI,GAAOwO,SAAU40B,kBAChDH,EAAG78B,GACC88B,IACFG,oBAAoB,mBAAoBF,GAAoB,GAC5DE,oBAAoB,WAAYF,GAAoB,IAG5D,EAEMnjC,GAAOwO,WACT4f,iBAAiB,mBAAoB+U,GAAoB,GAGzD/U,iBAAiB,WAAY+U,GAAoB,GAErD,ECpBIG,IAAmB,EAiBVC,GAAuB,WAWlC,OARID,GAAkB,IAflBtjC,GAAOwO,UAAYxO,GAAOwO,SAAS40B,kBACrCE,GAAsD,WAApCtjC,GAAOwO,SAAS40B,iBAAiCpjC,GAAOwO,SAAS8zB,aAAmBkB,IAAJ,GAMpGR,IAAS,SAAApxB,GAAmB,IAAhB6xB,EAAU7xB,EAAV6xB,UACVH,GAAkBG,CACtB,IAAK,IAcI,CACL,mBAAIH,GACF,OAAOA,EACb,EAEA,ET3BII,GAA2B,EAC3BC,GAAwBH,IACxBI,GAAwB,EAEtBC,GAAiB,SAACr0B,GACrBA,EAAqC/W,SAAQ,SAAAhD,GACxCA,EAAEquC,gBACJH,GAAwB5mC,KAAKgnC,IAAIJ,GAAuBluC,EAAEquC,eAC1DF,GAAwB7mC,KAAKsF,IAAIuhC,GAAuBnuC,EAAEquC,eAE1DJ,GAA2BE,IAAyBA,GAAwBD,IAAyB,EAAI,EAAI,EAEnH,GACA,EAeaK,GAA+B,WACtC,qBAAsB15B,aAAe62B,KAEzCA,GAAKsB,GAAQ,QAASoB,GAAgB,CACpClsC,KAAM,QACNorC,UAAU,EACVkB,kBAAmB,IAEvB,EU3BMC,GAAmC,WACvC,OVYO/C,GAAKuC,GAA2Bp5B,YAAY65B,kBAAoB,CUXzE,EAQMC,GAAwC,GAIxCC,GAAkE,CAAC,EAQnEC,GAAe,SAACC,GAEpB,IAAMC,EAAwBJ,GAAuBA,GAAuB7qC,OAAS,GAG/EkrC,EAAsBJ,GAAsBE,EAAMT,eAIxD,GACEW,GACAL,GAAuB7qC,OA3BU,IA4BjCgrC,EAAMn4B,SAAWo4B,EAAsBE,QACvC,CAEA,GAAID,EACFA,EAAoBj1B,QAAQrW,KAAKorC,GACjCE,EAAoBC,QAAU3nC,KAAKsF,IAAIoiC,EAAoBC,QAASH,EAAMn4B,cACrE,CACL,IAAMu4B,EAAc,CAElB7oC,GAAIyoC,EAAMT,cACVY,QAASH,EAAMn4B,SACfoD,QAAS,CAAC+0B,IAEZF,GAAsBM,EAAY7oC,IAAM6oC,EACxCP,GAAuBjrC,KAAKwrC,EAClC,CAGIP,GAAuBvY,MAAK,SAAC31B,EAAGmhB,GAAC,OAAKA,EAAEqtB,QAAUxuC,EAAEwuC,OAAO,IAC3DN,GAAuBl2B,OA/CU,IA+C2BzV,SAAQ,SAAAzC,UAE3DquC,GAAsBruC,EAAE8F,GACrC,GACA,CACA,ECnEM8oC,GAA6C,CAAC,ECG9CC,GAAY,SAAClnC,GACZqC,GAAOwO,WAIRxO,GAAOwO,SAAS8zB,aAClBlU,iBAAiB,sBAAsB,kBAAMyW,GAAUlnC,EAAS,IAAE,GAC1B,aAA/BqC,GAAOwO,SAASshB,WACzB1B,iBAAiB,QAAQ,kBAAMyW,GAAUlnC,EAAS,IAAE,GAGpDypB,WAAWzpB,EAAU,GAEzB,yGCyDA,IAGImnC,GACAC,GACAC,GACAC,GACAC,GAPEjc,GAA6E,CAAC,EAC9EC,GAA6D,CAAC,EA6B7D,SAASic,GACdxnC,EACAynC,GAEA,YAFA,IAAAA,IAAAA,GAAiB,GAEVC,GAAkB,MAAO1nC,EAAU2nC,GAAeN,GAAcI,EACzE,CAyCO,SAASG,GACd5tC,EACAgG,GASA,OAPAwrB,GAAWxxB,EAAMgG,GAEZurB,GAAavxB,KAoGpB,SAAuCA,GACrC,IAAMwI,EAAmC,CAAC,EAG7B,UAATxI,IACFwI,EAAQ8jC,kBAAoB,GAG9BxB,GACE9qC,GACA,SAAA6X,GACE8Z,GAAgB3xB,EAAM,CAAE6X,QAAAA,GAC9B,GACIrP,EAEJ,CAlHIqlC,CAA8B7tC,GAC9BuxB,GAAavxB,IAAQ,GAGhB8tC,GAAmB9tC,EAAMgG,EAClC,CAGA,SAAS2rB,GAAgB3xB,EAA6BsP,GACpD,IAAMsiB,EAAeN,GAAStxB,GAE9B,GAAK4xB,GAAiBA,EAAahwB,OAInC,IAAK,IAA6BsqB,EAAlCC,gsBAAAC,CAAsBwF,KAAY1F,EAAAC,KAAA9sB,MAAE,KAAzByS,EAAQoa,EAAArtB,MACjB,IACEiT,EAAQxC,EACd,CAAM,MAAOxR,GAMb,CACA,CACA,CAEA,SAASiwC,KACP,OCvKmB,SACnBC,EACAxlC,QAAO,IAAPA,IAAAA,EAA0C,CAAC,GAE3C,IACIylC,EADEvE,EAASe,GAAW,MAAO,GAG7ByD,EAAe,EACfC,EAAqC,GAGnCC,EAAgB,SAACv2B,GACrBA,EAAQ/W,SAAQ,SAAA8rC,GAEd,IAAKA,EAAMyB,eAAgB,CACzB,IAAMC,EAAoBH,EAAe,GACnCI,EAAmBJ,EAAeA,EAAevsC,OAAS,GAM9DssC,GAC0B,IAA1BC,EAAevsC,QACfgrC,EAAM9J,UAAYyL,EAAiBzL,UAAY,KAC/C8J,EAAM9J,UAAYwL,EAAkBxL,UAAY,KAEhDoL,GAAgBtB,EAAM/tC,MACtBsvC,EAAe3sC,KAAKorC,KAEpBsB,EAAetB,EAAM/tC,MACrBsvC,EAAiB,CAACvB,IAKhBsB,EAAexE,EAAO7qC,QACxB6qC,EAAO7qC,MAAQqvC,EACfxE,EAAO7xB,QAAUs2B,EACbF,GACFA,IAGZ,CACA,GACA,EAEQzE,EAAKsB,GAAQ,eAAgBsD,GACnC,GAAI5E,EAAI,CACNyE,EAASxE,IDuHT,SAAAC,GACE/X,GAAgB,MAAO,CACrB+X,OAAAA,IAEFyD,GAAezD,CACrB,GC5HoCA,EAAQlhC,EAAQmhC,kBAEhD,IAAM6E,EAAgB,WACpBJ,EAAc5E,EAAGiF,eACjBR,GAAO,EACb,EAII,OAFA5C,GAASmD,GAEFA,CACX,CAGA,CDyGSE,CACL,EAMA,CAAE/E,kBAAkB,GAExB,CAEA,SAASgF,KACP,OE9LmB,WACnB,IAGIV,EAHEW,EAAoBhD,KACpBlC,EAASe,GAAW,OAIpBoE,EAAc,SAACjC,GAEfA,EAAM9J,UAAY8L,EAAkBjD,kBACtCjC,EAAO7qC,MAAQ+tC,EAAMkC,gBAAkBlC,EAAM9J,UAC7C4G,EAAO7xB,QAAQrW,KAAKorC,GACpBqB,GAAO,GAEb,EAEQG,EAAgB,SAACv2B,GACpBA,EAAqC/W,QAAQ+tC,EAClD,EAEQrF,EAAKsB,GAAQ,cAAesD,GAClCH,EAASxE,IF0KI,SAAAC,GACX/X,GAAgB,MAAO,CACrB+X,OAAAA,IAEF0D,GAAe1D,CACnB,GE/KkCA,GAE5BF,GACF6B,IAAS,WACP+C,EAAc5E,EAAGiF,eACjBjF,EAAGuF,YACT,IAAO,EAEP,CFkKSC,EAMT,CAEA,SAASrB,KACP,OFtMmB,WACnB,IAEIM,EAFEW,EAAoBhD,KACpBlC,EAASe,GAAW,OAGpB2D,EAAgB,SAACv2B,GACrB,IAAMo3B,EAAYp3B,EAAQA,EAAQjW,OAAS,GAC3C,GAAIqtC,EAAW,CAKb,IAAMpwC,EAAQuG,KAAKsF,IAAIukC,EAAUnM,UAAYwH,KAAsB,GAG/DzrC,EAAQ+vC,EAAkBjD,kBAC5BjC,EAAO7qC,MAAQA,EACf6qC,EAAO7xB,QAAU,CAACo3B,GAClBhB,IAER,CACA,EAEQzE,EAAKsB,GAAQ,2BAA4BsD,GAE/C,GAAI5E,EAAI,CACNyE,EAASxE,IE4KE,SAAAC,GACX/X,GAAgB,MAAO,CACrB+X,OAAAA,IAEF2D,GAAe3D,CACnB,GFjLoCA,GAEhC,IAAM8E,EAAgB,WACfvB,GAAkBvD,EAAOvlC,MAC5BiqC,EAAc5E,EAAGiF,eACjBjF,EAAGuF,aACH9B,GAAkBvD,EAAOvlC,KAAM,EAC/B8pC,GAAO,GAEf,EAaI,MARA,CAAC,UAAW,SAASntC,SAAQ,SAAAd,GACvBqI,GAAOwO,UACT4f,iBAAiBz2B,EAAMwuC,EAAe,CAAEjD,MAAM,EAAM2D,SAAS,GAErE,IAEI7D,GAASmD,GAAe,GAEjBA,CACX,CAGA,CEkJSW,EAMT,CAEA,SAASC,KACP,ODtLoB,SAACpB,EAA0BjD,GAG/CA,EAAOA,GAAQ,CAAC,EAKhB,IAAMrB,EAASe,GAAW,QACpBwD,EAASxE,IC6KD,SAAAC,GACZ/X,GAAgB,OAAQ,CACtB+X,OAAAA,IAEF4D,GAAgB5D,CACpB,GDlLwCA,EAAQqB,EAAKpB,kBAEnDuD,IAAU,WACR,IAAM3C,EAAWR,KAEjB,GAAIQ,EAAU,CAWZ,GANAb,EAAO7qC,MAAQuG,KAAKsF,IAAI6/B,EAAS8E,cAAgB/E,KAAsB,GAMnEZ,EAAO7qC,MAAQ,GAAK6qC,EAAO7qC,MAAQ8T,YAAYF,MAAO,OAE1Di3B,EAAO7xB,QAAU,CAAC0yB,GAElB0D,GAAO,EACb,CACA,GACA,CCsJSqB,EAMT,CAEA,SAASC,KACP,OHnHmB,SAACvB,EAA0BjD,GAG9CA,EAAOA,GAAQ,CAAC,EAMhBsB,KAEA,IAEI4B,EAFEvE,EAASe,GAAW,OAIpB2D,EAAgB,SAACv2B,GACrBA,EAAQ/W,SAAQ,SAAA8rC,GACVA,EAAMT,eACRQ,GAAaC,GAWS,gBAApBA,EAAMxC,YACiBqC,GAAuBrhC,MAAK,SAAA4hC,GACnD,OAAOA,EAAYn1B,QAAQzM,MAAK,SAAAokC,GAC9B,OAAO5C,EAAMn4B,WAAa+6B,EAAU/6B,UAAYm4B,EAAM9J,YAAc0M,EAAU1M,SAC1F,GACA,KAEU6J,GAAaC,EAGvB,IAEI,IA5EI6C,EA4EEC,GA5EFD,EAA4BrqC,KAAKgnC,IACrCK,GAAuB7qC,OAAS,EAChCwD,KAAKylC,MAAM0B,KAAqC,KAG3CE,GAAuBgD,IAyExBC,GAAOA,EAAI3C,UAAYrD,EAAO7qC,QAChC6qC,EAAO7qC,MAAQ6wC,EAAI3C,QACnBrD,EAAO7xB,QAAU63B,EAAI73B,QACrBo2B,IAEN,EAEQzE,EAAKsB,GAAQ,QAASsD,EAAe,CAOzC9B,kBAAmBvB,EAAKuB,mBAAqB,KAG/C2B,EAASxE,GAAauE,EAAUtE,EAAQqB,EAAKpB,kBAEzCH,IAGFA,EAAGsB,QAAQ,CAAE9qC,KAAM,cAAeorC,UAAU,IAE5CC,IAAS,WACP+C,EAAc5E,EAAGiF,eAIb/E,EAAO7qC,MAAQ,GAAK0tC,KAAqC,IAC3D7C,EAAO7qC,MAAQ,EACf6qC,EAAO7xB,QAAU,IAGnBo2B,GAAO,EACb,IAEA,CGmCS0B,EAAM,SAAAjG,GACX/X,GAAgB,MAAO,CACrB+X,OAAAA,IAEF6D,GAAe7D,CACnB,GACA,CAEA,SAASgE,GACP1tC,EACAgG,EACA0rB,EACAke,EACAnC,GAIA,IAAIe,EAWJ,YAfA,IAAAf,IAAAA,GAAiB,GAEjBjc,GAAWxxB,EAAMgG,GAIZurB,GAAavxB,KAChBwuC,EAAgB9c,IAChBH,GAAavxB,IAAQ,GAGnB4vC,GACF5pC,EAAS,CAAE0jC,OAAQkG,IAGd9B,GAAmB9tC,EAAMgG,EAAUynC,EAAiBe,OAAgBtqC,EAC7E,CAmBA,SAASstB,GAAWxxB,EAA6B8R,GAC/Cwf,GAAStxB,GAAQsxB,GAAStxB,IAAS,GAClCsxB,GAAStxB,GAAsCwB,KAAKsQ,EACvD,CAGA,SAASg8B,GACP9tC,EACAgG,EACAwoC,GAEA,OAAO,WACDA,GACFA,IAGF,IAAM5c,EAAeN,GAAStxB,GAE9B,GAAK4xB,EAAL,CAIA,IAAMxf,EAAQwf,EAAapF,QAAQxmB,IACpB,IAAXoM,GACFwf,EAAarb,OAAOnE,EAAO,EAJjC,CAMA,CACA,CG9TA,IAAMy9B,GAAY,kEAeX,SAASC,GAAYC,EAAoBC,QAAY,IAAZA,IAAAA,GAAwB,GACtE,IAAQhU,EAA2D+T,EAA3D/T,KAAMC,EAAqD8T,EAArD9T,KAAMgU,EAA+CF,EAA/CE,KAAMC,EAAyCH,EAAzCG,KAAMC,EAAmCJ,EAAnCI,UAChC,OADmEJ,EAAxB7T,SAExC,MAFgE6T,EAAd5uB,WAElD6uB,GAAAC,EAAA,IAAAA,EAAA,QACAjU,GAAAkU,EAAA,IAAAA,EAAA,SAAAjU,EAAAA,EAAA,IAAAA,GAAAkU,CAEA,CAwCA,SAAAC,GAAAC,GACA,OACAnU,SAAAmU,EAAAnU,SACA/a,UAAAkvB,EAAAlvB,WAAA,GACA8uB,KAAAI,EAAAJ,MAAA,GACAjU,KAAAqU,EAAArU,KACAkU,KAAAG,EAAAH,MAAA,GACAjU,KAAAoU,EAAApU,MAAA,GACAkU,UAAAE,EAAAF,UAEA,CA4CA,SAAAG,GAAA5U,GACA,IAAA2U,EAAA,iBAAA3U,EAvFA,SAAAjxB,GACA,IAAAiP,EAAAm2B,GAAAU,KAAA9lC,GAEA,GAAAiP,EAAA,CASA,IAAA82B,EAAA92B,EAAA7W,MAAA,GAAAq5B,EAAAsU,EAAA,GAAArvB,EAAAqvB,EAAA,GAAAC,EAAAD,EAAA,GAAAP,OAAA,IAAAQ,EAAA,GAAAA,EAAAzU,EAAAwU,EAAA,GAAAE,EAAAF,EAAA,GAAAN,OAAA,IAAAQ,EAAA,GAAAA,EACAzU,EAAA,GACAkU,EAFAK,EAAA,GAIAnmC,EAAA8lC,EAAA9lC,MAAA,KAMA,GALAA,EAAAzI,OAAA,IACAq6B,EAAA5xB,EAAAxH,MAAA,MAAAyG,KAAA,KACA6mC,EAAA9lC,EAAA5H,OAGA0tC,EAAA,CACA,IAAAQ,EAAAR,EAAAz2B,MAAA,QACAi3B,IACAR,EAAAQ,EAAA,GAEA,CAEA,OAAAP,GAAA,CAAApU,KAAAA,EAAAiU,KAAAA,EAAAhU,KAAAA,EAAAkU,UAAAA,EAAAD,KAAAA,EAAAhU,SAAAA,EAAA/a,UAAAA,GAnBA,CALApb,GAAA,WAEAE,QAAAmsB,MAAA,uBAAA3nB,EACA,GAsBA,CAyDAmmC,CAAAlV,GAAA0U,GAAA1U,GACA,GAAA2U,EAGA,OAAAA,CACA,yyBCtGE,SAASQ,GAAmC/R,EAAegS,GAChE,YADqE,IAALA,IAAAA,EAAc,IACvE,CAAChS,EAASgS,EACnB,CAkBO,SAASC,GACdC,EACAhrC,GAIA,IAFA,IAEwCkmB,EAAxCC,EAAAC,GAFsB4kB,EAAS,MAES9kB,EAAAC,KAAA9sB,MAAE,KAA/B4xC,EAAa/kB,EAAArtB,MAItB,GAFemH,EAASirC,EADCA,EAAa,GAAGjxC,MAIvC,OAAO,CAEb,CAEE,OAAO,CACT,CAYA,SAASkxC,GAAWtmC,EAAeumC,GAEjC,OADaA,GAAe,IAAIC,aACpBC,OAAOzmC,EACrB,CAKO,SAAS0mC,GAAkBN,EAAoBG,GACpD,IAAOI,EAAqBP,EAAQ,GAAjBF,EAASE,EAAQ,GAGhCQ,EAA+Bz7B,KAAKC,UAAUu7B,GAElD,SAASE,EAAOpwC,GACO,iBAAVmwC,EACTA,EAAwB,iBAATnwC,EAAoBmwC,EAAQnwC,EAAO,CAAC6vC,GAAWM,EAAOL,GAAc9vC,GAEnFmwC,EAAMhwC,KAAqB,iBAATH,EAAoB6vC,GAAW7vC,EAAM8vC,GAAe9vC,EAE5E,CAEE,IAAK,IAAmBqwC,EAAxBC,EAAAvlB,GAAmB0kB,KAAKY,EAAAC,KAAAtyC,MAAE,KAAfuO,EAAK8jC,EAAA7yC,MACP+yC,EAAwBhkC,EAAI,GAAfikC,EAAWjkC,EAAI,GAInC,GAFA6jC,EAAO,KAAK17B,KAAKC,UAAU47B,GAAY,MAEhB,iBAAZC,GAAwBA,aAAmBvjC,WACpDmjC,EAAOI,OACF,CACL,IAAIC,OAAkB,EACtB,IACEA,EAAqB/7B,KAAKC,UAAU67B,EAC5C,CAAQ,MAAO/zC,GAIPg0C,EAAqB/7B,KAAKC,UAAUZ,GAAUy8B,GACtD,CACMJ,EAAOK,EACb,CACA,CAEE,MAAwB,iBAAVN,EAAqBA,EAGrC,SAAuBO,GAKrB,IAJA,IAI4BC,EAJtBC,EAAcF,EAAQj6B,QAAO,SAACU,EAAK05B,GAAG,OAAK15B,EAAM05B,EAAItwC,MAAM,GAAE,GAE7DuwC,EAAS,IAAI7jC,WAAW2jC,GAC1BG,EAAS,EACbC,EAAAjmB,GAAqB2lB,KAAOC,EAAAK,KAAAhzC,MAAE,KAAnBizC,EAAON,EAAAnzC,MAChBszC,EAAOttC,IAAIytC,EAAQF,GACnBA,GAAUE,EAAO1wC,MACrB,CAEE,OAAOuwC,CACT,CAd6CI,CAAcf,EAC3D,CA+DO,SAASgB,GACd5rB,EACAuqB,GAEA,IAAMmB,EAAoC,iBAApB1rB,EAAWtX,KAAoB4hC,GAAWtqB,EAAWtX,KAAM6hC,GAAevqB,EAAWtX,KAE3G,MAAO,CACLpC,EAAkB,CAChBlN,KAAM,aACN4B,OAAQ0wC,EAAO1wC,OACfkc,SAAU8I,EAAW9I,SACrB20B,aAAc7rB,EAAW8rB,YACzBC,gBAAiB/rB,EAAWgsB,iBAE9BN,EAEJ,CAEA,IAAMO,GAAyE,CAC7El/B,QAAS,UACTm/B,SAAU,UACVlsB,WAAY,aACZ9F,YAAa,cACbrS,MAAO,QACPskC,cAAe,WACfC,YAAa,UACbC,QAAS,UACTC,aAAc,SACdC,iBAAkB,SAClBC,SAAU,UACVC,SAAU,WACV14B,KAAM,OACN24B,OAAQ,iBAMH,SAASC,GAA+BvzC,GAC7C,OAAO6yC,GAA+B7yC,EACxC,CAGO,SAASwzC,GAAgCC,GAC9C,GAAKA,GAAoBA,EAAgBz2B,IAAzC,CAGA,IAAA02B,EAA0BD,EAAgBz2B,IAC1C,MAAO,CAAEhb,KADG0xC,EAAJ1xC,KACOomB,QADDsrB,EAAAtrB,QADhB,CAGA,CAMO,SAASurB,GACdllC,EACAmlC,EACAC,EACA9D,GAEA,IAAMn4B,EAAyBnJ,EAAM2T,uBAAyB3T,EAAM2T,sBAAsBxK,uBAC1F,OAAAjR,EAAA,CACEkI,SAAUJ,EAAMI,SAChBilC,SAAS,IAAIthC,MAAOkY,eAChBkpB,GAAW,CAAE52B,IAAK42B,KAChBC,GAAU9D,GAAO,CAAEA,IAAKD,GAAYC,IACtCn4B,GAA0B,CAC5BiI,MAAO3S,EAAiBvG,EAAC,CAAC,EAAIiR,KAGpC,CCvOA,SAASm8B,GAAep5B,GAItB,MAAO,CAH0B,CAC/B3a,KAAM,QAEa2a,EACvB,2BCnBO,SAASq5B,GAAmBn1C,GACjC,MAAwB,iBAAVA,GAAsBo1C,SAASp1C,EAC/C,CAUO,SAASq1C,GAAYpzB,EAAW7G,GAA8D,IAA7C2d,EAAc3d,EAAd2d,eAAmBwL,EClB3E,SAAuCzlC,EAAGG,GACxC,GAAI,MAAQH,EAAG,MAAO,CAAC,EACvB,IAAIE,EAAI,CAAC,EACT,IAAK,IAAII,KAAKN,EAAG,GAAI,CAAC,EAAEO,eAAegC,KAAKvC,EAAGM,GAAI,CACjD,IAAK,IAAMH,EAAE0uB,QAAQvuB,GAAI,SACzBJ,EAAEI,GAAKN,EAAEM,EACX,CACA,OAAOJ,CACT,CDU2Es2C,CAAAl6B,EAAAm6B,IAQzE,OANIxc,GAAkB9W,EAAY8W,eAAiBA,IAEjD9W,EAAY8W,eAAiBA,GAIxB9W,EAAY0gB,WAAU76B,EAAC,CAC5BixB,eAAAA,GACGwL,GAEP,yyBEWA,SAASiR,GAAQC,GACf,OAAOA,EAAO,GAChB,CAEA,SAASC,KAEP,OAAOlsC,IAAUA,GAAOouB,kBAAoBpuB,GAAOsK,WACrD,CAEA,IAGI6hC,GACAC,GAJAC,GAA6B,EAE7BrT,GAA8B,CAAC,EAU5B,SAASsT,KACd,IRqDAlH,EQrDM96B,EAAc4hC,KACpB,GAAI5hC,GAAeI,GAA8B,CAE3CJ,EAAY1Q,MACdoG,GAAOsK,YAAY1Q,KAAK,uBAE1B,IAAM2yC,ER8EDlH,GAAkB,OQiDgB,SAAAmH,GAAA,IAAAnL,EAAAmL,EAAAnL,OACAkD,EAAAlD,EAAA7xB,QAAA6xB,EAAA7xB,QAAAjW,OAAA,GACA,GAAAgrC,EAAA,CAIA,IAAA/5B,EAAAwhC,GAAAthC,IACA+vB,EAAAuR,GAAAzH,EAAA9J,WAEAzB,GAAA,KAAAxiC,MAAA6qC,EAAA7qC,MAAA6lC,KAAA,eACArD,GAAA,aAAAxiC,MAAAgU,EAAAiwB,EAAA4B,KAAA,SANA,CAOA,GR5DCiK,GAAevB,IQ7EjD0H,QR8CR,KAAArH,GQ6DyC,KR7DzCA,GAAiB,GAEVC,GAAkB,OQkDgB,SAAA10B,GAAA,IAAA0wB,EAAA1wB,EAAA0wB,OACAkD,EAAAlD,EAAA7xB,QAAA6xB,EAAA7xB,QAAAjW,OAAA,GACAgrC,IAKAvL,GAAA,KAAAxiC,MAAA6qC,EAAA7qC,MAAA6lC,KAAA,IACA+P,GAAA7H,EACA,GR3DCmB,GAAeZ,GAAcM,IQ/C/DsH,EA+GiCvH,IAAA,SAAAx1B,GAAA,IAAA0xB,EAAA1xB,EAAA0xB,OACAkD,EAAAlD,EAAA7xB,QAAA6xB,EAAA7xB,QAAAjW,OAAA,GACAgrC,IAKAvL,GAAA,KAAAxiC,MAAA6qC,EAAA7qC,MAAA6lC,KAAA,eACA8P,GAAA5H,EACA,OAvHjCoI,ERmEDtH,GAAkB,QQwEgB,SAAAuH,GAAA,IAAAvL,EAAAuL,EAAAvL,OACAA,EAAA7xB,QAAA6xB,EAAA7xB,QAAAjW,OAAA,KAMAy/B,GAAA,MAAAxiC,MAAA6qC,EAAA7qC,MAAA6lC,KAAA,eACA,GRhFE0K,GAAgB9B,IQjEzD,OAAO,WACLsH,IACAE,IACAC,IACAC,GACN,CACA,CAEE,OAAO,WAAe,CACxB,CA2I2C,IAAAE,GAAA,CACAC,MAAA,QACAC,YAAA,QACAC,UAAA,QACAC,UAAA,QACAC,QAAA,QACAC,WAAA,QACAC,SAAA,QACAC,UAAA,QACAC,SAAA,QACAC,WAAA,QACAC,WAAA,QACAC,YAAA,QACAC,WAAA,QACAC,aAAA,QACAC,aAAA,QACAC,UAAA,OACAC,QAAA,OACAC,KAAA,OACAC,UAAA,OACAC,UAAA,OACAC,SAAA,OACAC,KAAA,OACAC,QAAA,QACAC,MAAA,QACAC,SAAA,QACA/rC,MAAA,SAkOA,SAAAgsC,GACA91B,EAEA8rB,EACAn+B,EACAoE,EACAqP,EACA20B,GAEA,IAAA9U,EAAA8U,EAAAjK,EAAAiK,GAAAjK,EAAAn+B,EAAA,OACAqoC,EAAAlK,EAAAn+B,EAAA,SACAqoC,GAAA/U,GAGAmS,GAAApzB,EAAA,CACA5F,GAAA,UACAG,OAAA,+BACA6G,YAAAA,GAAAzT,EACAmpB,eAAA/kB,EAAAwhC,GAAAyC,GACAze,aAAAxlB,EAAAwhC,GAAAtS,IAEA,CAyKA,SAAAgV,GACAznC,EACAs9B,EACApoC,EACAwyC,GAEA,IAAAC,EAAArK,EAAApoC,GACA,MAAAyyC,GAAAA,EA5nBlB,aA6nBkB3nC,EAAA0nC,GAAAC,EAEA,4GCnoB9BC,GAAoC,CAAC,YAAa,aAoDlDC,GAAsE,CACjFC,YAAY,EACZC,UAAU,EACVC,mBAAmB,EAEnBC,eAAgBL,GAChBM,wBAAyBN,IAIpB,SAASO,GAA2B3nB,GACzC,IAAA4nB,EAAA/wC,EAAA,CAUEywC,WAAYD,GAAqCC,WACjDC,SAAUF,GAAqCE,UAC5CvnB,GAXHsnB,EAAUM,EAAVN,WACAC,EAAQK,EAARL,SAEAG,EAAuBE,EAAvBF,wBAEAD,EAAcG,EAAdH,eACAI,EAA0BD,EAA1BC,2BACAL,EAAiBI,EAAjBJ,kBAOIM,EACkC,mBAA/BD,EAA4CA,EAA6B,SAACppC,GAAC,OAAa,CAAI,EAK/FspC,EAAiC,SAACh7B,GAAG,OAwItC,SAA6BA,EAAa26B,GAC/C,OAAOxsC,EAAyB6R,EAAK26B,GAA2BN,GAClE,CAzIIY,CAAoBj7B,EAAK26B,GAA2BD,EAAe,EAE/Dz3B,EAA8B,CAAC,EAEjCs3B,GACFne,IAA+B,SAAAuB,GAC7B,IAAMud,ECrFL,SACLvd,EACAod,EACAE,EACAh4B,EACAk4B,GACkB,IAAArX,EAClB,QAFU,IAAVqX,IAAAA,EAAyB,qBAEpBhV,MAAwBxI,EAAYC,UAAzC,CAIA,IAAMwd,EAAyBL,EAAiBpd,EAAYC,UAAU5d,KAEtE,IAAI2d,EAAYnC,eAAgB4f,EAAhC,CAaA,IAAMj8B,EAAQ2E,KACR1E,EAASyE,KAEfw3B,EAAwB1d,EAAYC,UAA5Bn7B,EAAM44C,EAAN54C,OAAQud,EAAAq7B,EAAAr7B,IAEVs7B,EA2HO,SAAAt7B,GACA,IAEA,OADA,IAAAu7B,IAAAv7B,GACA+Y,IACA,OAAA93B,GACA,MACA,CACA,CAlIGu6C,CAAWx7B,GACrBmf,EAAOmc,EAAUrgB,GAASqgB,GAASnc,UAAO93B,EAE1CyW,EAAOs9B,EACT9U,GAAkB,CAChBnhC,KAAO1C,EAAA,IAAAud,EACA0mB,cAAA,EACA1C,YAAAF,EAAA,CACA9jB,IAAAA,EACA7c,KAAA,QACA,cAAAV,EACA,WAAA64C,EACA,iBAAAnc,GAAA2E,EACAhB,IAAAqY,EAAArX,GAEAzlB,GAAA,qBAEAhX,EAOA,GALAyW,IACA6f,EAAAC,UAAA6d,OAAA39B,EAAAE,cAAAR,OACAyF,EAAAnF,EAAAE,cAAAR,QAAAM,GAGAm9B,EAAAtd,EAAAC,UAAA5d,MAAAZ,EAAA,CACA,IAAAW,EAAA4d,EAAAjP,KAAA,GAGAiP,EAAAjP,KAAA,GAAAiP,EAAAjP,KAAA,OAGA,IAAA/iB,EAAAgyB,EAAAjP,KAAA,GAGA/iB,EAAAs2B,QASA,SACAliB,EACAX,EACAD,EACAxT,EAOA+vC,GAGA,IAAA59B,EAAA49B,GAAAv8B,EAAA8J,UAIA6d,EAAAh9B,EAAA,GAFAmiB,KAGA1B,wBACApL,EAAAoL,yBAFAzN,EAAAgqB,EAAAhqB,QAAAU,EAAAspB,EAAAtpB,OAAAC,EAAAqpB,EAAArpB,QAAAC,EAAAopB,EAAAppB,IAKAi+B,EAAA79B,EAAAW,GAAAX,GAAAH,GAAAb,EAAAU,EAAAC,GAEAm+B,EAAA9gC,GACA4C,IACAI,EAAA6G,GAAA7G,GAAAoG,GAAApH,EAAAsC,EAAAD,KAGA8iB,EACAt2B,EAAAs2B,UACA,oBAAAzF,SAAAlyB,EAAAyV,EAAAyc,SAAAzc,EAAAkiB,aAAA56B,GAEA,GAAA46B,EAEA,wBAAA1F,SAAAjyB,EAAA23B,EAAA1F,SAAA,CACA,IAAAsf,EAAA,IAAAtf,QAAA0F,GAUA,OARA4Z,EAAAjH,OAAA,eAAA+G,GAEAC,GAGAC,EAAAjH,OAAAh6B,GAAAghC,GAGAC,CACA,IAAA3vC,MAAAC,QAAA81B,GAAA,CACA,IAAA4Z,EAAA,GAAAz7B,OAAA6hB,EAAA,iBAAA0Z,KAQA,OANAC,GAGAC,EAAAl3C,KAAA,CAAAiW,GAAAghC,IAGAC,CACA,CACA,IAAAC,EAAA,YAAA7Z,EAAAA,EAAAzlB,aAAAnV,EACA00C,EAAA,GAYA,OAVA7vC,MAAAC,QAAA2vC,GACAC,EAAAp3C,KAAAuF,MAAA6xC,EAAAD,GACAA,GACAC,EAAAp3C,KAAAm3C,GAGAF,GACAG,EAAAp3C,KAAAi3C,GAGA9xC,EAAA,GACAm4B,EAAA,CACA,eAAA0Z,EACAn/B,QAAAu/B,EAAAh3C,OAAA,EAAAg3C,EAAAtvC,KAAA,UAAApF,GAEA,CA1CA,sBAAAs0C,EAAAn/B,QAAAo/B,EA2CA,CAvFAI,CAAAj8B,EAAAX,EAAAD,EAAAxT,EAAAmS,EACA,CAEA,OAAAA,CA5Cf,CAVI,IAAMN,EAASmgB,EAAYC,UAAU6d,OACrC,IAAKj+B,EAAQ,OAEb,IAAMM,EAAOmF,EAAMzF,GACfM,IAiJO,SAAAA,EAAA6f,GACA,GAAAA,EAAAE,SAAA,CACAkF,GAAAjlB,EAAA6f,EAAAE,SAAA5lB,QAEA,IAAAgkC,EACAte,EAAAE,UAAAF,EAAAE,SAAAoE,SAAAtE,EAAAE,SAAAoE,QAAAr6B,IAAA,kBAEA,GAAAq0C,EAAA,CACA,IAAAC,EAAAtjB,SAAAqjB,GACAC,EAAA,GACAp+B,EAAAgnB,aAAA,+BAAAoX,EAEA,CACA,MAAAve,EAAApI,OACAzX,EAAAslB,UAAA,kBAEAtlB,EAAAonB,KACA,CAjKTiX,CAAQr+B,EAAM6f,UAEP1a,EAAMzF,GAZnB,CA4De,CDgBW4+B,CAAuBze,EAAaod,EAAkBC,EAAgC/3B,GAI1G,GAAIi4B,EAAa,CACf,IAAMI,EAAUE,GAAW7d,EAAYC,UAAU5d,KAC3Cmf,EAAOmc,EAAUrgB,GAASqgB,GAASnc,UAAO93B,EAChD6zC,EAAYnX,cAAc,CACxB,WAAYuX,EACZ,iBAAkBnc,GAE5B,CAEUsb,GAAqBS,GACvBmB,GAAenB,EAEvB,IAGMV,GACF7f,IAA6B,SAAAgD,GAC3B,IAAMud,EAsHL,SACLvd,EACAod,EACAE,EACAh4B,GACkB,IAAA6gB,EACZ/P,EAAM4J,EAAY5J,IAClBgI,EAAgBhI,GAAOA,EAAI2G,IAEjC,GAAKyL,MAAwBpS,IAAOA,EAAIoH,wBAA2BY,EAAnE,CAIA,IAAMqf,EAAyBL,EAAiBhf,EAAc/b,KAG9D,IAAI2d,EAAYnC,eAAgB4f,EAAhC,CAeA,IAAMj8B,EAAQ2E,KACRzE,EAAiB4M,KAEjBqvB,EAAUE,GAAWzf,EAAc/b,KACnCmf,EAAOmc,EAAUrgB,GAASqgB,GAASnc,UAAO93B,EAE1CyW,EAAOs9B,EACT9U,GAAkB,CAChBnhC,KAAO42B,EAAAt5B,OAAA,IAAAs5B,EAAA/b,IACA0mB,cAAA,EACA1C,YAAAF,EAAA,CACA3gC,KAAA,MACA,cAAA44B,EAAAt5B,OACA,WAAA64C,EACAt7B,IAAA+b,EAAA/b,IACA,iBAAAmf,GAAA2E,EACAhB,IAAA,oBAAAgB,GAEAzlB,GAAA,qBAEAhX,EAEAyW,IACAiW,EAAAuoB,uBAAAx+B,EAAAE,cAAAR,OACAyF,EAAA8Q,EAAAuoB,wBAAAx+B,GAGA,IAAAsB,EAAAyE,KAEA,GAAAkQ,EAAAwoB,kBAAAtB,EAAAlf,EAAA/b,MAAAZ,EAAA,CACA,IAAA0nB,EAAAh9B,EAAA,GACAuV,EAAAkL,wBACApL,EAAAoL,yBAFAzN,EAAAgqB,EAAAhqB,QAAAU,EAAAspB,EAAAtpB,OAAAC,EAAAqpB,EAAArpB,QAAAC,EAAAopB,EAAAppB,KAkBA,SACAqW,EACA4nB,EACAC,GAEA,IAEA7nB,EAAAwoB,iBAAA,eAAAZ,GACAC,GAKA7nB,EAAAwoB,iBAAA3hC,GAAAghC,EAEA,OAAAlqC,GACA,CAEA,CAxBA8qC,CAAAzoB,EAPAjW,EAAAW,GAAAX,GAAAH,GAAAb,EAAAU,EAAAC,GAEA3C,GACA4C,IACAI,EAAA6G,GAAA7G,GAAAoG,GAAApH,EAAAsC,EAAAD,KAIA,CAEA,OAAArB,CA/Cf,CAZI,IAAMN,EAASuW,EAAIuoB,uBACnB,IAAK9+B,EAAQ,OAEb,IAAMM,EAAOmF,EAAMzF,GACfM,QAAsCzW,IAA9B00B,EAAcR,cACxBwH,GAAcjlB,EAAMie,EAAcR,aAClCzd,EAAKonB,aAGEjiB,EAAMzF,GAfnB,CAkEe,CAnMWi/B,CAAY9e,EAAaod,EAAkBC,EAAgC/3B,GAC3Fw3B,GAAqBS,GACvBmB,GAAenB,EAEvB,GAEA,CAiBA,SAASmB,GAAev+B,GACtB,IAAQkC,GAAQ5B,GAAWN,GAAMrL,MAAQ,CAAC,GAAlCuN,IAER,GAAKA,GAAsB,iBAARA,EAInB,IAAM08B,EAAU3L,GAAqC,YAAY,SAAAn1B,GAAGA,EAAAZ,QAC1D/W,SAAQ,SAAA8rC,IAvBpB,SAAqCA,GACnC,MACsB,aAApBA,EAAMxC,WACN,kBAAmBwC,GAC6C,iBAAxDA,EAAoC4M,kBACnB,UAAxB5M,EAAM6M,eAAqD,mBAAxB7M,EAAM6M,cAE9C,EAiBUC,CAA4B9M,IAAUA,EAAM5qC,KAAK23C,SAAS98B,KA8CpE,SAAuC+8B,GACrC,IAAAC,EA9BK,SAAgCL,GAIrC,IAHA,IAGkCttB,EAH9BlqB,EAAO,UACPomB,EAAU,UACV0Y,EAAQ,GACZ3U,gsBAAAC,CAAmBotB,KAAettB,EAAAC,KAAA9sB,MAAE,KAAzBy6C,EAAK5tB,EAAArtB,MAEd,GAAa,MAATi7C,EAAc,KAAAC,EACEP,EAAgBnvC,MAAM,KAAvCrI,EAAI+3C,EAAA,GAAE3xB,EAAO2xB,EAAA,GACd,KACN,CAEI,IAAKp4C,MAAMknC,OAAOiR,IAAQ,CACxB93C,EAAiB,MAAV8+B,EAAgB,OAASA,EAChC1Y,EAAUoxB,EAAgBnvC,MAAMy2B,GAAO,GACvC,KACN,CACIA,GAASgZ,CACb,CAKE,OAJIhZ,IAAU0Y,IAEZx3C,EAAO8+B,GAEF,CAAE9+B,KAAAA,EAAMomB,QAAAA,EACjB,CAO4B4xB,CAAuBJ,EAAeJ,iBAAxDx3C,EAAI63C,EAAJ73C,KAAMomB,EAAQyxB,EAARzxB,QAER6xB,EAA8C,GAIpD,OAFAA,EAAez4C,KAAK,CAAC,2BAA4B4mB,GAAU,CAAC,wBAAyBpmB,IAEhF+Q,GAGE,GAAPkK,OACKg9B,EAAc,CACjB,CAAC,8BAA+BC,GAAgBN,EAAeO,gBAC/D,CAAC,2BAA4BD,GAAgBN,EAAeQ,aAC5D,CAAC,mCAAoCF,GAAgBN,EAAeS,oBACpE,CAAC,iCAAkCH,GAAgBN,EAAeU,kBAClE,CAAC,6BAA8BJ,GAAgBN,EAAeW,eAC9D,CAAC,uCAAwCL,GAAgBN,EAAeY,wBACxE,CAAC,8BAA+BN,GAAgBN,EAAea,aAC/D,CAAC,6BAA8BP,GAAgBN,EAAec,eAC9D,CAAC,8BAA+BR,GAAgBN,EAAevK,gBAC/D,CAAC,4BAA6B6K,GAAgBN,EAAee,gBAbtDV,CAeX,CApEyBW,CAA8BhO,GACtC9rC,SAAQ,SAAAwO,GAAK,OAAGqL,EAAKgnB,aAAY56B,MAAjB4T,EAAqBrL,EAAK,IAGnDmgB,WAAW8pB,GAEnB,GACA,GACA,CAiCA,SAASW,GAAgB5F,GACvB,YAD2B,IAAJA,IAAAA,EAAe,KAC7BvhC,IAAgCJ,YAAYE,YAAcyhC,GAAQ,GAC7E,CA6Ie,SAAA+D,GAAAx7B,GACA,IAIA,OADA,IAAAu7B,IAAAv7B,EAAAxU,GAAAstB,SAAAta,QACAua,IACA,OAAA93B,GACA,MACA,CACA,CEpVR,IAqID+8C,GAA+Bl0C,EAAA,GAChCi/B,GAAgB,CACnBkV,4BAA4B,EAC5BC,uBC5JK,SACLC,EACAC,EACAC,GAEA,QAH0B,IAA1BD,IAAAA,GAAsC,QACN,IAAhCC,IAAAA,GAA4C,GAEvC7yC,IAAWA,GAAOstB,SAAvB,CAKA,IAEI+S,EAFAyS,EAAkC9yC,GAAOstB,SAASC,KAGlDqlB,IACFvS,EAAoBsS,EAAuB,CACzCh5C,KAAMqG,GAAOstB,SAASylB,SAEtBxjB,eAAgB7kB,GAA+BA,GAA+B,SAAO7O,EACrFgX,GAAI,WACJG,OAAQ,wBACRwG,SAAU,CAAEnW,OAAQ,UAIpBwvC,GACFrgB,IAAiC,SAAA5gB,GAAkB,IAAfwhB,EAAExhB,EAAFwhB,GAAIC,EAAAzhB,EAAAyhB,UAUzBx3B,IAATw3B,GAAsByf,IAA4C,IAA7BA,EAAY3uB,QAAQiP,GAC3D0f,OAAcj3C,EAIZw3B,IAASD,IACX0f,OAAcj3C,EACVwkC,GAGiGA,EAAA3G,MAEA2G,EAAAsS,EAAA,CACAh5C,KAAAqG,GAAAstB,SAAAylB,SACAlgC,GAAA,aACAG,OAAA,0BACAwG,SAAA,CAAAnW,OAAA,SAGA,GA9C7G,CAgD6G,EDqG3GwvC,kCAAkC,EAClCD,4BAA4B,EAC5BI,gBAAgB,EAChBC,WAAW,EACXC,uBAAwB,EACxBpS,aAAc,CAAC,GACZgO,IAeQqE,GAAA,WA0BJ,SAAAA,EAAY1rB,G1B1Ed,IACChE,E0B0EJvrB,KAAKyB,KAzLqC,iBA0L1CzB,KAAKk7C,gCAAiC,G1B3ElC3vB,EAAUV,MACHxlB,aAGbkmB,EAAQlmB,WAAWylB,WAAaS,EAAQlmB,WAAWylB,YAAc,CAAC,EAC7DS,EAAQlmB,WAAWylB,WAAWxB,mBACjCiC,EAAQlmB,WAAWylB,WAAWxB,iBAAmBqf,IAE9Cpd,EAAQlmB,WAAWylB,WAAWrB,eACjC8B,EAAQlmB,WAAWylB,WAAWrB,aAAeA,IFrI3Cwe,KAIJA,IAAqB,EACrB1W,GAAqC2W,IACrCjW,GAAkDiW,M4B6MhDloC,KAAKiI,QAAA7B,EAAA,GACAk0C,GACA/qB,QAK4C5rB,IAA7C3D,KAAKiI,QAAQ2gC,aAAakS,iBAC5B96C,KAAKiI,QAAQ6yC,eAAiB96C,KAAKiI,QAAQ2gC,aAAakS,gBAOtDvrB,IAAaA,EAAS0nB,yBAA2B1nB,EAASynB,iBAE5Dh3C,KAAKiI,QAAQgvC,wBAA0B1nB,EAASynB,gBAGlDh3C,KAAKm7C,kBAAoB/G,KAEzBp0C,KAAKo7C,iCAAmC,CAAC,EAErCp7C,KAAKiI,QAAQ8yC,WHrGsB,SACAM,EACAL,GAGA,GADAhH,MACAxhC,GAAA,CACA,IAAA8oC,EAgGA,SACAC,EACAP,GAEA,ORrGzCv1C,EQqGyC,SAAA+1C,GAAA,IAAArS,EAAAqS,EAAArS,OACA,QAAAxlC,IAAAwlC,EAAA7qC,MAAA,CAGA,IAAA+tC,EAAAlD,EAAA7xB,QAAAmkC,MACA,SAAApP,GAAA,OAAAA,EAAAn4B,WAAAi1B,EAAA7qC,YAAAqF,IAAAgxC,GAAAtI,EAAA5qC,KAAA,IAEAia,EAAAyE,KACA,GAAAksB,GAAA3wB,EAAA,CAGA,IAAAggC,EAAA/G,GAAAtI,EAAA5qC,MACAwG,EAAAyT,EAAA+E,aAEA8hB,EAAAuR,GAAAthC,GAAA65B,EAAA9J,WACAruB,EAAA4/B,GAAA3K,EAAA7qC,OACAmuC,OACA9oC,IAAA0oC,EAAAT,cAAA2P,EAAAlP,EAAAT,oBAAAjoC,EACA,QAAAA,IAAA8oC,EAAA,CAGA,IAAAkP,EAAAlP,EAAAkP,UAAAC,EAAAnP,EAAAmP,cAAAzT,EAAAsE,EAAAtE,kBAAA70B,EAAAm5B,EAAAn5B,KAAAuoC,EAAApP,EAAAoP,SACAC,OAAAn4C,IAAA2P,EAAAA,EAAAI,OAAAJ,EAAA1P,IAAA0P,EAAAE,gBAAA7P,EAEAo4C,OAAAp4C,IAAAwkC,EAAAA,EAAAzD,oBAAA/gC,EACAyW,EAAA,IAAA2lB,GAAA,CACA1I,eAAAkL,EACAzK,aAAAyK,EAAAruB,EACAyG,GAAA,kBAAA+gC,EACAj6C,KAAAsG,EAAAskC,EAAAlgC,QACAm0B,WAAAl6B,EAAA,CACA+N,QAAAlM,EAAAkM,QACAC,YAAAnM,EAAAmM,YACAmM,YAAAo7B,QACAh4C,IAAAm4C,GAAA,KAAAA,EAAA,CAAAxoC,KAAAwoC,GAAA,QACAn4C,IAAAo4C,EAAA,CAAA9Z,WAAA8Z,GAAA,QACAp4C,IAAAk4C,EAAA,CAAAG,UAAAH,GAAA,IAEAjb,cAAAuI,EAAA7qC,MACAyiC,aAAA,CACAoO,IAAA,CAAA7wC,MAAA6qC,EAAA7qC,MAAA6lC,KAAA,kBAKA3iB,EA8YA,SACAmiB,EACA17B,EACA+yC,GAEA,QAAAvY,GAAAx6B,MAuBAwgC,GAlBAjnB,OADA7d,IAAAggC,GAAA,mBAAA17B,EAAAsgC,cACAtgC,EAAAsgC,cAAA,CACA5E,mBAAAA,EACAliC,KAAAkiC,EAAAliC,KACAwX,cAAA0qB,EAAA1qB,cACAqnB,WAAAl6B,EAAA,GAEAu9B,EAAA50B,KACA40B,EAAArD,YAEAlL,SAAAttB,GAAAstB,gBAEAzxB,IAAAggC,QAAAhgC,IAAAggC,EAAA5pB,QACA4pB,EAAA5pB,aACA,IAAA9R,EAAAugC,iBACAvgC,EAAAugC,iBAEA,MAMA,IAAAhnB,EACAw5B,GACA,IAAAx5B,EACA,EAEAA,EAAAw5B,GA7BA,IAAAx5B,CA8BA,CApbAy6B,CAAAL,EAAA3zC,EAAA+yC,GAEA,GAAAx5B,EAIA,GAAA3c,KAAA6I,SAAA8T,EAAA,CACA,IAAAivB,EAAAr2B,GH7SRmF,EG6SQ,CAAAnF,GH7SOo1B,EG6SP9zB,EAAAiF,SH5SnC4d,EAA2B,CAC/BgV,SAAS,IAAIthC,MAAOkY,eAGlBqlB,IACFjR,EAAQiR,IAAMD,GAAYC,IAIrBc,GAA6B/R,EADtBhf,EAAM3V,IAAI4pC,WGoSiB7vC,EACAu4C,EAAAxgC,GAAAA,EAAAygC,eACAD,GAAAzL,GACAyL,EAAAE,KAAA3L,GAAA7vC,KAAA,eAAA2O,GAEA,GAGA,MHrTpC,IAA4BgQ,EAAeiwB,EAC1CjR,CG4QmC,CAVA,CAPA,CA0DA,ERhKlC4O,GAAkB,MAAO1nC,EAAUupC,GAAehC,IAHpD,IACLvnC,CQmKyC,CAlKA42C,CAAAhB,EAAAL,GAEA,kBACAM,GACA,CACA,CAGA,CGwFrCgB,CAAiBt8C,KAAKo7C,iCAAkCp7C,KAAKiI,QAAQ+yC,wBAEnEh7C,KAAKiI,QAAQ6yC,gBHrKnBzN,GAAqC,YAAY,SAAA3zB,GAC/C,IADgE,IACrCiS,EAA3BC,EAAAC,GADkDnS,EAAApC,WACvBqU,EAAAC,KAAA9sB,MAAE,KAAlButC,EAAM1gB,EAAArtB,MAETiiB,EAAcwnB,KACpB,IAAKxnB,EACH,OAEF,IAAMgiB,EAAYuR,GAASthC,GAA0C65B,EAAM9J,WACrEruB,EAAW4/B,GAAQzH,EAAMn4B,UAG/BqM,EAAY0gB,WAAW,CACrBtf,YAAa,yBACbhH,GAAI,eACJG,OAAQ,0BACRuc,eAAgBkL,EAChBzK,aAAcyK,EAAYruB,GAElC,CACA,IGqJQlU,KAAKiI,QAAQ2gC,aAAa2T,oBH9IhClP,GAAqC,SAAS,SAAAn1B,GAC5C,IAD6D,IAClCi5B,EAA3BC,EAAAvlB,GAD+C3T,EAAAZ,WACpB65B,EAAAC,KAAAtyC,MAAE,KAAlButC,EAAM8E,EAAA7yC,MAETiiB,EAAcwnB,KACpB,IAAKxnB,EACH,OAGF,GAAmB,UAAf8rB,EAAM5qC,KAAkB,CAC1B,IAAM8gC,EAAYuR,GAASthC,GAA0C65B,EAAM9J,WACrEruB,EAAW4/B,GAAQzH,EAAMn4B,UAEzBkG,EAAoB,CACxBuH,YAAa5Z,EAAiBskC,EAAMlgC,QACpCwO,GAAI,kBAAkB0xB,EAAM5qC,KACKqZ,OAAA,0BACAuc,eAAAkL,EACAzK,aAAAyK,EAAAruB,GAGAioB,EAAAnyB,EAAAqiC,EAAAlgC,QACAgwB,IACA/hB,EAAAkmB,WAAA,qBAAAnE,IAIA5b,EAAA0gB,WAAA7mB,EACA,CACA,CACA,IGqHvCpa,KAAKw8C,aAAe,CAClB/6C,UAAMkC,EACN0P,aAAS1P,EAEf,CAKA,IAAAwM,EAAA8qC,EAAAx9C,UA8TE,OA9TF0S,EACS+b,UAAA,SAAUle,EAAuC4R,GAAgC,IAAAtP,EAAA,KACtFtQ,KAAKy8C,eAAiB78B,EACtB,IAEMlE,EAFMkE,IAEOO,YACb2M,EAAgBpR,GAAUA,EAAO+E,aAEvCi8B,EAUI18C,KAAKiI,QATiB00C,EAAiBD,EAAzClC,uBACAG,EAAgC+B,EAAhC/B,iCACAD,EAA0BgC,EAA1BhC,2BACAH,EAA0BmC,EAA1BnC,2BACA1D,EAAU6F,EAAV7F,WACAC,EAAQ4F,EAAR5F,SACAM,EAA0BsF,EAA1BtF,2BACAL,EAAiB2F,EAAjB3F,kBACAnO,EAAY8T,EAAZ9T,aAeIqO,EAZuCnqB,GAAiBA,EAAcmqB,yBAYJj3C,KAAKiI,QAAQgvC,wBAOrF0F,GACE,SAACtpC,GACC,IAAMkN,EAAcjQ,EAAKssC,wBAAwBvpC,GAKjD,OAHA/C,EAAKrI,QAAQ2gC,aAAaiU,yBACxBvsC,EAAKrI,QAAQ2gC,aAAaiU,wBAAwBt8B,EAAalN,EAASuM,GAEnEW,CACf,GACMm6B,EACAC,GAGEJ,GEtTFzyC,GAAOwO,UACTxO,GAAOwO,SAAS4f,iBAAiB,oBAAoB,WAEnD,IAAMiS,EAAoBJ,KAC1B,GAAIjgC,GAAOwO,SAAU+iB,QAAU8O,EAAmB,CAChD,IAEA1tB,EAAuBC,GAAWytB,GAAxB1tB,EAAFE,GAAIF,EAAAlG,QAOsF4zB,EAAAzI,UAT/D,aAa+DyI,EAAAvjB,OAAA,sCACAujB,EAAA3G,KACA,CACA,IFqSlGoH,EAAa2T,oBACfv8C,KAAK88C,+BAGH98C,KAAKiI,QAAQ8yC,WACf/6C,KAAK+8C,kCAGP7F,GAA2B,CACzBL,WAAAA,EACAC,SAAAA,EACAG,wBAAAA,EACAG,2BAAAA,EACAL,kBAAAA,GAEN,EAEA5mC,EACUysC,wBAAA,SAAwBvpC,GAAsD,IAAA1C,EAAA,KACpF,GAAK3Q,KAAKy8C,eAAV,CAMA,IAMIO,EANE9xB,EAAMlrB,KAAKy8C,iBAEjBQ,EAAyEj9C,KAAKiI,QAAtEi1C,EAAcD,EAAdC,eAAgB5X,EAAW2X,EAAX3X,YAAaC,EAAY0X,EAAZ1X,aAAcC,EAAkByX,EAAlBzX,kBAE7C2X,EAAuC,aAAf9pC,EAAQsH,GAGtC,GAAIwiC,EAAuB,CACzB,IAEAC,EAAgDxkC,GAF5BukC,EAAwBE,GAAe,gBAAkB,GAC7DF,EAAwBE,GAAe,gBAAa15C,GAC5DyV,EAAOgkC,EAAPhkC,QAASY,EAAGojC,EAAHpjC,IACjBgjC,EAAA52C,EAAA,CACEgT,QAAAA,EACAC,aAHgC+jC,EAAZ/jC,aAIpBJ,cAJ0CmkC,EAARrjC,SAK/B1G,EAAO,CACViO,SAAQlb,EAAA,GAEHiN,EAAQiO,SAAQ,CACnBjK,uBAAwB2C,IAE1B+pB,SAAS,GAEjB,MACMiZ,EAAA52C,EAAA,CACE29B,SAAS,GACN1wB,GAIP,IAAMiqC,EAA4C,mBAAnBJ,EAAgCA,EAAeF,GAAmBA,EAI3FO,OAAmC55C,IAApB25C,EAAoBl3C,EAAA,GAAiB42C,EAAiB,CAAAjjC,SAAS,IAAUujC,EAI9FC,EAAaj8B,SACXi8B,EAAa97C,OAASu7C,EAAgBv7C,KAC5C2E,EAAA,GACem3C,EAAaj8B,SAAU,CAAAnW,OAAQ,WAEpCoyC,EAAaj8B,SAEnBthB,KAAKw8C,aAAa/6C,KAAO87C,EAAa97C,KACtCzB,KAAKw8C,aAAanpC,QAAUkqC,EAGxBA,EAAaxjC,QAMjB,IAEMyjC,EAAkB1U,GACtB5d,EACAqyB,EACAjY,EACAC,GACA,EACA,CAAEnQ,SARiBttB,GAAbstB,UASNoQ,EACA2X,GAsBF,OAnBIA,GACEr1C,GAAOwO,WACTxO,GAAOwO,SAAS4f,iBAAiB,oBAAoB,WAC/C,CAAC,cAAe,YAAYlrB,SAASlD,GAAOwO,SAAUshB,aACxD4lB,EAAgB9V,sBAE5B,IAEY,CAAC,cAAe,YAAY18B,SAASlD,GAAOwO,SAASshB,aACvD4lB,EAAgB9V,wBAKtB8V,EAAgBrW,8BAA6B,SAAA5mB,GAC3C5P,EAAKwqC,oBHjHgC,SAAA56B,GACA,IAAAnO,EAAA4hC,KACA,GAAA5hC,GAAAtK,GAAAsK,YAAAw4B,YAAAp4B,GAAA,CAMA,IAAAF,EAAAwhC,GAAAthC,IAEAirC,EAAArrC,EAAAw4B,aAEAnwB,EAAAC,GAAA6F,GAAA5F,EAAAF,EAAAE,GAAA+iC,EAAAjjC,EAAAqnB,gBAmDA,GAhDA2b,EAAAn7C,MAAA6xC,IAAA5zC,SAAA,SAAA8rC,GACA,IAAA9J,EAAAuR,GAAAzH,EAAA9J,WACAruB,EAAA4/B,GAAAzH,EAAAn4B,UAGA,oBAAAqM,EAAA5F,IAAA+iC,GAAAprC,EAAAiwB,EAAAmb,GAIA,OAAArR,EAAAxC,WACA,kBAqHA,SAAAtpB,EAAA8rB,EAAA/5B,GACA,yEAAA/R,SAAA,SAAA2N,GACAmoC,GAAA91B,EAAA8rB,EAAAn+B,EAAAoE,EACA,IACA+jC,GAAA91B,EAAA8rB,EAAA,mBAAA/5B,EAAA,wBACA+jC,GAAA91B,EAAA8rB,EAAA,QAAA/5B,EAAA,6BACA+jC,GAAA91B,EAAA8rB,EAAA,eAAA/5B,EAAA,OA8BA,SAAAiO,EAAA8rB,EAAA/5B,GACA+5B,EAAA+N,cAKAzG,GAAApzB,EAAA,CACA5F,GAAA,UACAG,OAAA,+BACA6G,YAAA,UACA0V,eAAA/kB,EAAAwhC,GAAAzH,EAAA8N,cACAriB,aAAAxlB,EAAAwhC,GAAAzH,EAAA+N,eAGAzG,GAAApzB,EAAA,CACA5F,GAAA,UACAG,OAAA,+BACA6G,YAAA,WACA0V,eAAA/kB,EAAAwhC,GAAAzH,EAAAyC,eACAhX,aAAAxlB,EAAAwhC,GAAAzH,EAAA+N,eAGA,CAnDAuD,CAAAp9B,EAAA8rB,EAAA/5B,EACA,CA5HAsrC,CAAAr9B,EAAA8rB,EAAA/5B,GACA,MAEA,WACA,YACA,eAuFA,SACAiO,EAEA8rB,EACA9J,EACAruB,EACA5B,GAEA,IAAAurC,EAAAvrC,EAAAiwB,EACAub,EAAAD,EAAA3pC,EAEAy/B,GAAApzB,EAAA,CACAoB,YAAA0qB,EAAA5qC,KACAq2B,aAAAgmB,EACAnjC,GAAA0xB,EAAAxC,UACA/uB,OAAA,gCACAuc,eAAAwmB,GAIA,CA1GAE,CAAAx9B,EAAA8rB,EAAA9J,EAAAruB,EAAA5B,GAGA,IAAA0rC,EAAA3S,KAEA4S,EAAA5R,EAAA9J,UAAAyb,EAAA5S,gBAEA,gBAAAiB,EAAA5qC,MAAAw8C,IAEAnd,GAAA,IAAAxiC,MAAA+tC,EAAA9J,UAAA4B,KAAA,gBAEA,2BAAAkI,EAAA5qC,MAAAw8C,IAEAnd,GAAA,KAAAxiC,MAAA+tC,EAAA9J,UAAA4B,KAAA,gBAEA,MAEA,gBAkKA,SACA5jB,EACA8rB,EACA6R,EACA3b,EACAruB,EACA5B,GAIA,sBAAA+5B,EAAA6M,eAAA,UAAA7M,EAAA6M,cAAA,CAIA,IAAAiF,EAAA5mB,GAAA2mB,GAGAnvC,EAAA,GACAynC,GAAAznC,EAAAs9B,EAAA,8CACAmK,GAAAznC,EAAAs9B,EAAA,kDACAmK,GAAAznC,EAAAs9B,EAAA,0DAEA,yBAAAA,IACAt9B,EAAA,mCAAAs9B,EAAA+R,sBAEAD,EAAAxiB,WACA5sB,EAAA,cAAAovC,EAAAxiB,SAAA7xB,MAAA,KAAA5H,OAGAi8C,EAAA1iB,OACA1sB,EAAA,kBAAAovC,EAAA1iB,MAGA1sB,EAAA,mBAAAmvC,EAAAlzC,SAAAlD,GAAAstB,SAAAta,QAEA,IAAAuc,EAAA/kB,EAAAiwB,EACAzK,EAAAT,EAAAnjB,EAEAy/B,GAAApzB,EAAA,CACAoB,YAAAu8B,EAAAtwC,QAAA9F,GAAAstB,SAAAta,OAAA,IACAgd,aAAAA,EACAnd,GAAA0xB,EAAA6M,cAAA,YAAA7M,EAAA6M,cAAA,iBACAp+B,OAAA,gCACAuc,eAAAA,EACAtoB,KAAAA,GAhCA,CAkCA,CA/MAsvC,CAAA99B,EAAA8rB,EAAAA,EAAA5qC,KAAA8gC,EAAAruB,EAAA5B,GAMA,IAEA6hC,GAAAtvC,KAAAsF,IAAAszC,EAAAp8C,OAAA,KA4MA,SAAAkf,GACA,IAAA0J,EAAAniB,GAAAmiB,UACA,GAAAA,EAAA,CAKA,IAAAq0B,EAAAr0B,EAAAq0B,WACAA,IACAA,EAAAC,eAGAh+B,EAAAqE,OAAA,0BAAA05B,EAAAC,eAGAD,EAAA7+C,MAGA8gB,EAAAqE,OAAA,iBAAA05B,EAAA7+C,MAGAg0C,GAAA6K,EAAAE,OACA1d,GAAA,mBAAAxiC,MAAAggD,EAAAE,IAAAra,KAAA,iBAIAsP,GAAAxpB,EAAAw0B,eAGAl+B,EAAAqE,OAAA,eAAAqF,EAAAw0B,aAAA,OAGAhL,GAAAxpB,EAAAy0B,sBAGAn+B,EAAAqE,OAAA,sBAAApa,OAAAyf,EAAAy0B,qBA/BA,CAiCA,CA/OAC,CAAAp+B,GAGA,aAAA5F,EAAA,EAySA,SAAAmmB,GACA,IAAAkJ,EAAAR,KACA,GAAAQ,EAAA,CAIA,IAAA8E,EAAA9E,EAAA8E,cAAAqL,EAAAnQ,EAAAmQ,aAEAA,GAAArL,IAEAhO,EAAA,qBACAxiC,MAAAwwC,EAAAqL,EACAhW,KAAA,eARA,CAWA,CAvTAya,CAAA9d,IAEA,mBAAAvgC,SAAA,SAAAkB,GACA,GAAAq/B,GAAAr/B,IAAAi8C,KAAAprC,GAAAorC,GAAA,CAMA,IAAAmB,EAAA/d,GAAAr/B,GAAAnD,MACAwgD,EAAAxsC,EAAAwhC,GAAA+K,GAGAE,EAAAl6C,KAAAgO,IAAA,KAAAisC,EAAApB,IAIA5c,GAAAr/B,GAAAnD,MAAAygD,CAZA,CAaA,IAEA,IAAAC,EAAAle,GAAA,YACAke,GAAAle,GAAA,MAEA6S,GAAApzB,EAAA,CACAoB,YAAA,oBACAmW,aAAAknB,EAAA1gD,MAAAw1C,GAAAhT,GAAA,IAAAxiC,OACAqc,GAAA,YACAG,OAAA,0BACAuc,eAAA2nB,EAAA1gD,eAIAwiC,GAAA,aAKA,QAAAA,WACAA,GAAAme,IAGAzhD,OAAAwE,KAAA8+B,IAAAvgC,SAAA,SAAA2+C,IMnapC,SAAwBz9C,EAAcnD,EAAe6lC,GAE1D,IAAM5jB,EAAcwnB,KAChBxnB,GAEFA,EAAY2jB,eAAeziC,EAAMnD,EAAO6lC,EAE5C,CN6Z2CD,CAAAgb,EAAApe,GAAAoe,GAAA5gD,MAAAwiC,GAAAoe,GAAA/a,KACA,IAmMA,SAAA5jB,GACA0zB,KAKAA,GAAA5X,SAGA9b,EAAAqE,OAAA,cAAA7c,EAAAksC,GAAA5X,UAGA4X,GAAArwC,IAGA2c,EAAAqE,OAAA,SAAAqvB,GAAArwC,IAGAqwC,GAAA33B,KAIAiE,EAAAqE,OAAA,UAAAqvB,GAAA33B,IAAA9D,OAAAlW,MAAA,QAKAie,EAAAqE,OAAA,WAAAqvB,GAAAkL,OAIAjL,IAAAA,GAAAkL,SAEAlL,GAAAkL,QAAA7+C,SAAA,SAAA4K,EAAA0G,GAAA,OAGA0O,EAAAqE,OAAA,eAAA/S,EAAA,GAAA9J,EAAAoD,EAAAk0C,MAAA,GAGA,CAxOAC,CAAA/+B,EACA,CAEA0zB,QAAAtwC,EACAuwC,QAAAvwC,EACAm9B,GAAA,EA7GA,CA8GA,CGDrCye,CAAsBh/B,EAC5B,IAEWi9B,CAzFX,CA0FA,EAEArtC,EACU2sC,6BAAA,WAAqC,IACvC0C,EADuC3uC,EAAA,KAErC4uC,EAAiC,WAAY,IAAAC,EACjDC,EAAyD9uC,EAAK5I,QAAtDq9B,EAAWqa,EAAXra,YAAaC,EAAYoa,EAAZpa,aAAcC,EAAAma,EAAAna,kBAI7Boa,EAAqB7X,KAC3B,KAAI6X,GAAsBA,EAAmBjlC,IAAM,CAAC,aAAc,YAAY3P,SAAS40C,EAAmBjlC,OAQtG6kC,IACFA,EAA+B/X,gBAAgB,0BAC/C+X,EAA+Bhe,MAC/Bge,OAAiC77C,GAG9BkN,EAAK4rC,gBAKL5rC,EAAK2rC,aAAa/6C,MAAvB,CAKA,IAAMypB,EAAMra,EAAK4rC,iBACTrnB,EAAattB,GAAbstB,SAEF/hB,EAA8B,CAClC5R,KAAMoP,EAAK2rC,aAAa/6C,KACxBkZ,GAjCS,kBAkCTopB,SAAS,EACTh1B,MAAI2wC,EAAA,GAAAA,EACDzgB,IAAmCpuB,EAAK2rC,aAAanpC,QAClDwsC,GAAUhvC,EAAK2rC,aAAanpC,SACf,MAAKqsC,IAI1BF,EAAiC1W,GAC/B5d,EACA7X,EACAiyB,EACAC,GACA,EACA,CAAEnQ,SAAAA,GACFoQ,EAvBR,CAyBA,EAEI,CAAC,SAASjlC,SAAQ,SAAAd,GACZqI,GAAOwO,UACT4f,iBAAiBz2B,EAAMggD,EAAgC,CAAEzU,MAAM,EAAO2D,SAAS,GAEvF,GACA,EAEAx+B,EACU4sC,gCAAA,WAAwC,IAAA/rC,EAAA,KACxC68B,EAAgB,SAAFn0B,GAA0D,IAArDpC,EAAAoC,EAAApC,QACjBoE,EAASyE,KAGT2/B,OACOn8C,IAAX+X,QAAwD/X,IAAhC+X,EAAOqkC,qBAC1BrkC,EAAOqkC,qBAAqB,eAC7Bp8C,EACAk4C,OAAsBl4C,IAAXm8C,EAAuBA,EAAOE,mBAAgBr8C,EAEzDwkC,EAAoBJ,KACpBkY,EAAe7/B,KACf9M,OAAwB3P,IAAjBs8C,EAA6BA,EAAan/B,eAAYnd,EACnE2T,EAAQ/W,SAAQ,SAAA8rC,GACd,GAyFR,SAAkCA,GAChC,MAAO,aAAcA,CACvB,CA3FY6T,CAAyB7T,GAAQ,CACnC,IAAMT,EAAgBS,EAAMT,cAC5B,QAAsBjoC,IAAlBioC,EACF,OAEF,IAAMW,EAAsBv7B,EAAKoqC,iCAAiCxP,GAC5D13B,EAAWm4B,EAAMn4B,SACjBquB,EAAY8J,EAAM9J,UAClBvgC,EAAOxE,OAAOwE,KAAKgP,EAAKoqC,kCACxB+E,EACJn+C,EAAKX,OAAS,EACVW,EAAKuV,QAAO,SAACvZ,EAAGmhB,GACd,OAAOnO,EAAKoqC,iCAAiCp9C,GAAGkW,SAC9ClD,EAAKoqC,iCAAiCj8B,GAAGjL,SACvClW,EACAmhB,CACtB,SACgBxb,EAGN,GAAwB,gBAApB0oC,EAAMxC,WACc7nC,EACnB4H,KAAI,SAAA3F,GAAI,OAAG+M,EAAKoqC,iCAAiCn3C,EAAI,IACrD4G,MAAK,SAAA4hC,GACJ,OAAOA,EAAYv4B,WAAaA,GAAYu4B,EAAYlK,YAAcA,CACtF,IAEc,OAIJ,IAAKqJ,EACH,OAGF,GAAIW,EACFA,EAAoBr4B,SAAWrP,KAAKsF,IAAIoiC,EAAoBr4B,SAAUA,QACjE,GACLlS,EAAKX,OAhYQ,SAiYQsC,IAArBw8C,GACAjsC,EAAWlD,EAAKoqC,iCAAiC+E,GAAkBjsC,SACnE,CAEA,IAAMynC,EAAY3qC,EAAKwrC,aAAa/6C,KAC9Bm6C,EAAgB5qC,EAAKwrC,aAAanpC,QACpCsoC,GAAaC,IACXuE,GAAoB3iD,OAAOwE,KAAKgP,EAAKoqC,kCAAkC/5C,QAxYhE,WA0YF2P,EAAKoqC,iCAAiC+E,GAE/CnvC,EAAKoqC,iCAAiCxP,GAAiB,CACrD+P,UAAAA,EACAznC,SAAAA,EACA0nC,cAAAA,EACAtoC,KAAAA,EACA60B,kBAAAA,EACA0T,SAAAA,EACAtZ,UAAAA,GAGhB,CACA,CACA,GACA,EACI8K,GAAqC,QAASQ,GAC9CR,GAAqC,cAAeQ,EACxD,EAAEoN,CAAA,CAjZW,GAqZN,SAASoC,GAAe+C,GAI7B,IzFnbyBC,EyFmbnBC,GzFnbmBD,EyFmbK,aAAaD,EAAQ,IzFlb1Bt4C,EAAAwO,UAAAxO,EAAAwO,SAAAiqC,cACAz4C,EAAAwO,SAAAiqC,cAAAF,GAEA,MyFibzB,OAAOC,EAAUA,EAAQ32C,aAAa,gBAAahG,CACrD,CAEA,SAASk8C,GAAUxsC,GACjB,IAAMmtC,EAAuBntC,EAAQitB,YAAcjtB,EAAQitB,WAAWrB,IAEhEwhB,EAAiBptC,EAAQtE,MAAQsE,EAAQtE,KAAKkwB,IAE9CyhB,EAAqBrtC,EAAQiO,UAAYjO,EAAQiO,SAASnW,OAEhE,OAAOq1C,GAAwBC,GAAkBC,CACnD,CIjmBA,SAASC,GAAmBjjD,EAAGJ,EAAGC,EAAGH,EAAGQ,EAAGI,EAAGI,GAC5C,IACE,IAAIN,EAAIJ,EAAEM,GAAGI,GACXF,EAAIJ,EAAEQ,KACV,CAAE,MAAOZ,GACP,YAAYH,EAAEG,EAChB,CACAI,EAAEgB,KAAOxB,EAAEY,GAAK6D,QAAQrB,QAAQxC,GAAG0C,KAAKxD,EAAGQ,EAC7C,CACA,SAASgjD,GAAkBljD,GACzB,OAAO,WACL,IAAIJ,EAAI0C,KACNzC,EAAIgJ,UACN,OAAO,IAAIxE,SAAQ,SAAU3E,EAAGQ,GAC9B,IAAII,EAAIN,EAAE8I,MAAMlJ,EAAGC,GACnB,SAASsjD,EAAMnjD,GACbijD,GAAmB3iD,EAAGZ,EAAGQ,EAAGijD,EAAOC,EAAQ,OAAQpjD,EACrD,CACA,SAASojD,EAAOpjD,GACdijD,GAAmB3iD,EAAGZ,EAAGQ,EAAGijD,EAAOC,EAAQ,QAASpjD,EACtD,CACAmjD,OAAM,EACR,GACF,CACF,CCxBA,SAASE,GAAgBzjD,GACvB,OAAOyjD,GAAkBvjD,OAAOmE,eAAiBnE,OAAO0C,eAAeoG,OAAS,SAAUhJ,GACxF,OAAOA,EAAEsE,WAAapE,OAAO0C,eAAe5C,EAC9C,EAAGyjD,GAAgBzjD,EACrB,CCJA,SAAS0jD,KACP,IACE,IAAI1jD,GAAKkK,QAAQ/J,UAAUwjD,QAAQthD,KAAKuhD,QAAQC,UAAU35C,QAAS,IAAI,WAAa,IACtF,CAAE,MAAOlK,GAAI,CACb,OAAQ0jD,GAA4B,WAClC,QAAS1jD,CACX,IACF,CCHA,SAAS8jD,GAAiB9jD,GACxB,IAAIF,EAAI,mBAAqB0P,IAAM,IAAIA,SAAQ,EAC/C,OAAOs0C,GAAmB,SAA0B9jD,GAClD,GAAI,OAASA,ICPjB,SAA2BA,GACzB,IACE,OAAQ,IAAM8F,SAASN,SAASnD,KAAKrC,GAAG2uB,QAAQ,gBAClD,CAAE,MAAOvuB,GACP,MAAO,mBAAqBJ,CAC9B,CACF,CDCuB+jD,CAAiB/jD,GAAI,OAAOA,EAC/C,GAAI,mBAAqBA,EAAG,MAAM,IAAIuD,UAAU,sDAChD,QAAI,IAAWzD,EAAG,CAChB,GAAIA,EAAE0Y,IAAIxY,GAAI,OAAOF,EAAE8G,IAAI5G,GAC3BF,EAAEkH,IAAIhH,EAAGgkD,EACX,CACA,SAASA,IACP,OEZN,SAAoBhkD,EAAGC,EAAGH,GACxB,GAAImkD,KAA4B,OAAOL,QAAQC,UAAU36C,MAAM,KAAMD,WACrE,IAAI3I,EAAI,CAAC,MACTA,EAAEqD,KAAKuF,MAAM5I,EAAGL,GAChB,IAAI0C,EAAI,IAAK3C,EAAEgJ,KAAKE,MAAMlJ,EAAGM,IAC7B,OAAOR,GAAKuE,GAAe1B,EAAG7C,EAAEK,WAAYwC,CAC9C,CFMakhD,CAAU7jD,EAAGiJ,UAAWrG,GAAeF,MAAMwB,YACtD,CACA,OAAO8/C,EAAQ7jD,UAAYD,OAAOoB,OAAOtB,EAAEG,UAAW,CACpD+D,YAAa,CACXlD,MAAOgjD,EACP/iD,YAAY,EACZE,UAAU,EACVD,cAAc,KAEdmD,GAAe2/C,EAAShkD,EAC9B,EAAG8jD,GAAiB9jD,EACtB,CGWO,SAASkkD,GAAeC,GAI7B,IAHA,IAAIC,OAAyB/9C,EACzBrF,EAAQmjD,EAAI,GACZ3jD,EAAI,EACDA,EAAI2jD,EAAIpgD,QAAQ,CACrB,IAAMsZ,EAAK8mC,EAAI3jD,GACT8W,EAAK6sC,EAAI3jD,EAAI,GAGnB,GAFAA,GAAK,GAEO,mBAAP6c,GAAkC,iBAAPA,IAAmC,MAATrc,EAExD,OAES,WAAPqc,GAA0B,mBAAPA,GACrB+mC,EAAgBpjD,EAChBA,EAAQsW,EAAGtW,IACK,SAAPqc,GAAwB,iBAAPA,IAC1Brc,EAAQsW,GAAG,mBAAAxD,EAAA2Z,EAAAxkB,UAAAlF,OAAI2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,GAAA,OAAgB7Z,EAAC9S,GAA0BqB,KAAI6G,MAAA4K,EAAA,CAACswC,GAAahlC,OAAKsO,GAAK,IAC1F02B,OAAgB/9C,EAEtB,CACE,OAAOrF,CACT,CCzBA,SAASqjD,GAAoBz3C,GAC3B,MAA+B,MAAxBA,EAAIA,EAAI7I,OAAS,GAAa6I,EAAI5H,MAAM,GAAI,GAAK4H,CAC1D,CCjCA,IACa03C,GAAY,SAAAC,GAMhB,SAAAD,EAAmB71C,EAAiB+1C,GAAiC,IAAAxxC,EAQlD,YARyB,IAARwxC,IAAAA,EAAyB,SAClExxC,EAAAuxC,EAAAliD,KAAA,KAAMoM,IAAQ,MAAAA,QAAAA,EAEduE,EAAK7O,MAAO,gBAAAmgD,EAAA,KAAApgD,iBAAA,GAAW/D,UAAU+D,YAAYC,KAI7CjE,OAAOmE,eAAc2O,GAAO,gBAAAsxC,EAAA,KAAApgD,iBAAA,GAAW/D,WACvC6S,EAAKwxC,SAAWA,EAAQxxC,CAC5B,CAAE,OAAAquB,GAAAijB,EAAAC,GAAAD,CAAA,CAfuB,CAevBR,GAf+BviD,QCGjC,SAASkjD,GAAmBvS,GAC1B,IAAM7T,EAAW6T,EAAI7T,SAAY6T,EAAA7T,SAAA,OACAgU,EAAAH,EAAAG,KAAA,IAAAH,EAAAG,KAAA,GACA,OAAAhU,EAAA,KAAA6T,EAAA/T,KAAAkU,GAAAH,EAAA9T,KAAA,IAAA8T,EAAA9T,KAAA,WACA,CAuBA,SAAAsmB,GACAxS,EAGAyS,QAAA,IAAAA,IAAAA,EAAA,IAMA,IAAA3O,EAAA,iBAAA2O,EAAAA,EAAAA,EAAA3O,OACAD,EACA,iBAAA4O,GAAAA,EAAApe,UAAAoe,EAAApe,UAAApnB,SAAA9Y,EAEA,OAAA2vC,GAlCA,SAAA9D,GACA,SAAAuS,GAAAvS,GAAAA,EAAAI,UAAA,YACA,CAgCAsS,CAAA1S,GAAA,IA7BA,SAAAA,EAAA6D,GACA,OpGuETl+B,EoGvES/O,EAAA,CAGA+7C,WAAA3S,EAAA5uB,UACAwhC,eApBR,KAqBQ/O,GAAA,CAAAgP,cAAAhP,EAAA5xC,KAAA,IAAA4xC,EAAAxrB,UpGmE1BrqB,OAAOwE,KAAKmT,GAChBvL,KAAI,SAAA3F,GAAI,OAAI6T,mBAAA7T,GAAA,IAAA6T,mBAAA3C,EAAAlR,GAAA,IACA8E,KAAA,KAHV,IAAmBoM,CoGhES,CAqBAmtC,CAAA9S,EAAA6D,EACA,wGCzC5B,SAASkP,GACdC,EACAhT,EACAluB,EACAgyB,GAEA,IAAM/U,EAA6B,CACjCgV,SAAS,IAAIthC,MAAOkY,eAGlB7I,GAAYA,EAAS7E,MACvB8hB,EAAQ9hB,IAAM,CACZhb,KAAM6f,EAAS7E,IAAIhb,KACnBomB,QAASvG,EAAS7E,IAAIoL,UAIpByrB,GAAU9D,IACdjR,EAAQiR,IAAMD,GAAYC,IAG5B,IAAMniC,EAIR,SAAkCm1C,GAChC,IAAMlR,ECYE,SAAAkR,GAEA,IADA,IACA72B,EADAvjB,EAAA,GACAwjB,gsBAAAC,CAAA22B,KAAA72B,EAAAC,KAAA9sB,MAAA,KAAAuO,EAAAse,EAAArtB,MACAmkD,EAAAjlD,OAAA8Z,QAAAjK,EAAAwN,MACA6nC,EAAAD,EAAAphD,OAAA,OAAAohD,EAAA74C,KAAA,SAAA8P,GAAA,OAAAA,EAAA,OAAAA,EAAA,MAAA3Q,KAAA,QACAX,GAAAiF,EAAA5L,KAAA,IAAA4L,EAAA82B,KAAA,IAAA92B,EAAA87B,OAAA,IAAA97B,EAAAs1C,WAAAD,EAAA,KAAAr1C,EAAAuG,UAAA,IACA,CACA,OAAAxL,CACA,CDpBQw6C,CAAuBJ,GAKvC,MAAO,CAJ8B,CACnC/iD,KAAM,SACN4B,OAAQiwC,EAAQjwC,QAEKiwC,EACzB,CAXeuR,CAAyBL,GACtC,OAAOlS,GAA+B/R,EAAS,CAAClxB,GAClD,yyBEiCA,IAiCsBy1C,GAAU,WAsCpB,SAAAA,EAAY76C,GAepB,GAdAjI,KAAKuvB,SAAWtnB,EAChBjI,KAAK+iD,cAAgB,CAAC,EACtB/iD,KAAKgjD,0BAA2B,EAChChjD,KAAKijD,eAAiB,EACtBjjD,KAAKkjD,UAAY,CAAC,EAClBljD,KAAKmjD,OAAS,CAAC,EACfnjD,KAAKijB,iBAAmB,GAEpBhb,EAAQunC,MACVxvC,KAAKojD,KAAOrT,GAAQ9nC,EAAQunC,MAK1BxvC,KAAKojD,KAAM,CACb,IAAM9mC,EAAM0lC,GAAsChiD,KAAKojD,KAAMn7C,GAC7DjI,KAAKqjD,WAAap7C,EAAQi0C,UAAS91C,EAAC,CAClCktC,OAAQtzC,KAAKuvB,SAAS+jB,OACtBpO,mBAAoBllC,KAAKklC,mBAAmB5+B,KAAKtG,OAC9CiI,EAAQq7C,iBAAgB,CAC3BhnC,IAAAA,IAER,CACA,CAKA,IAAAnM,EAAA2yC,EAAArlD,UAstBmB,OAttBnB0S,EACSwP,iBAAA,SAAiBxR,EAAgByD,EAAkB6J,GAAmC,IAAAnL,EAAA,KAE3F,IAAItB,EAAwBb,GAA5B,CAKA,IAAIE,EAA8BuD,GAAQA,EAAKtD,SAU/C,OARAtO,KAAKujD,SACHvjD,KAAKwjD,mBAAmBr1C,EAAWyD,GAChChR,MAAK,SAAAsN,GAAA,OAASoC,EAAKmzC,cAAcv1C,EAAO0D,EAAM6J,EAAM,IACpD7a,MAAK,SAAA2P,GACJlC,EAAUkC,CACpB,KAGWlC,CAZX,CAaA,EAEA8B,EAGS8W,eAAA,SACLlb,EAEAlG,EACA+L,EACA6J,GACoB,IAAA9K,EAAA,KAChBtC,EAA8BuD,GAAQA,EAAKtD,SAEzCo1C,EAAex8C,EAAsB6E,GAAWA,EAAUvB,OAAOuB,GAEjE43C,EAAgBx8C,EAAY4E,GAC9B/L,KAAK4jD,iBAAiBF,EAAc79C,EAAO+L,GAC3C5R,KAAKwjD,mBAAmBz3C,EAAS6F,GAUrC,OARA5R,KAAKujD,SACHI,EACG/iD,MAAK,SAAAsN,GAAA,OAASyC,EAAK8yC,cAAcv1C,EAAO0D,EAAM6J,EAAM,IACpD7a,MAAK,SAAA2P,GACJlC,EAAUkC,CACpB,KAGWlC,CACX,EAEA8B,EAGS6P,aAAA,SAAa9R,EAAc0D,EAAkB6J,GAElD,KAAI7J,GAAQA,EAAKoV,mBAAqBhY,EAAwB4C,EAAKoV,oBAAnE,CAKA,IAAI3Y,EAA8BuD,GAAQA,EAAKtD,SAGzCy2B,GADwB72B,EAAM2T,uBAAyB,CAAC,GACKkjB,kBAQnE,OANA/kC,KAAKujD,SACHvjD,KAAKyjD,cAAcv1C,EAAO0D,EAAMmzB,GAAqBtpB,GAAO7a,MAAK,SAAA2P,GAC/DlC,EAAUkC,CAClB,KAGWlC,CAbX,CAcA,EAEA8B,EAGSuZ,eAAA,SAAetW,GACa,iBAApBA,EAAQe,UAGnBnU,KAAK6jD,YAAYzwC,GAEjBD,GAAcC,EAAS,CAAEY,MAAM,IAErC,EAEA7D,EAGSwQ,OAAA,WACL,OAAO3gB,KAAKojD,IAChB,EAEAjzC,EAGSsQ,WAAA,WACL,OAAOzgB,KAAKuvB,QAChB,EAEApf,EAKS2zC,eAAA,WACL,OAAO9jD,KAAKuvB,SAASsU,SACzB,EAEA1zB,EAGSgsC,aAAA,WACL,OAAOn8C,KAAKqjD,UAChB,EAEAlzC,EAGS4zC,MAAA,SAAMC,GACX,IAAM9H,EAAYl8C,KAAKqjD,WACvB,OAAInH,GACEl8C,KAAKikD,mBACPjkD,KAAKikD,kBAAkBF,QAElB/jD,KAAKkkD,wBAAwBF,GAASpjD,MAAK,SAAAujD,GAChD,OAAOjI,EAAU6H,MAAMC,GAASpjD,MAAK,SAAAwjD,GAAiB,OAAGD,GAAkBC,CAAgB,GACnG,KAEah1C,GAAoB,EAEjC,EAEAe,EAGSk0C,MAAA,SAAML,GAAwC,IAAAnzC,EAAA,KACnD,OAAO7Q,KAAK+jD,MAAMC,GAASpjD,MAAK,SAAA2P,GAK9B,OAJAM,EAAK4P,aAAa1a,SAAU,EACxB8K,EAAKozC,mBACPpzC,EAAKozC,kBAAkBI,QAElB9zC,CACb,GACA,EAEAJ,EACSiO,mBAAA,WACL,OAAOpe,KAAKijB,gBAChB,EAEA9S,EACSkU,kBAAA,SAAkBigC,GACvBtkD,KAAKijB,iBAAiBhiB,KAAKqjD,EAC/B,EAEAn0C,EAIS6X,kBAAA,SAAkBu8B,IAClBA,IAAoBvkD,KAAKgjD,0BAA8BhjD,KAAKwkD,eAAiBxkD,KAAKgjD,2BACrFhjD,KAAKykD,oBAEX,EAEAt0C,EACS6D,KAAA,WACDhU,KAAKwkD,cACPxkD,KAAKykD,oBAEX,EAEAt0C,EAMSu0C,mBAAA,SAAmBC,GACxB,OAAO3kD,KAAK+/C,qBAAqB4E,EACrC,EAEAx0C,EAKS4vC,qBAAA,SAA0D6E,GAC/D,OAAO5kD,KAAK+iD,cAAc6B,EAC9B,EAEAz0C,EAISiZ,eAAA,SAAsCC,GAC3C,IACE,OAAQrpB,KAAK+iD,cAAc15B,EAAYzlB,KAAa,IAC1D,CAAM,MAAOoF,GAEP,OAAO,IACb,CACA,EAEAmH,EAGS00C,eAAA,SAAex7B,GACpB,IAAMy7B,EAAqB9kD,KAAK+iD,cAAc15B,EAAY5nB,MAG1DsqB,GAAiB/rB,KAAMqpB,EAAarpB,KAAK+iD,eAEpC+B,GACHp5B,GAAuB1rB,KAAM,CAACqpB,GAEpC,EAEAlZ,EAGS40C,UAAA,SAAU72C,EAAc0D,GAA4B,IAAAZ,EAAA,UAAxB,IAAJY,IAAAA,EAAkB,CAAC,GAChD5R,KAAKghB,KAAK,kBAAmB9S,EAAO0D,GAIpC,IAFA,IAE+C+Z,EvBrWG8kB,EAAauU,EAC1DzmB,EAASgS,EuBkWV0U,EvB3UD,SACL/2C,EACAshC,EACAluB,EACAgyB,GAEA,IAAMD,EAAUJ,GAAgC3xB,GAS1CoV,EAAYxoB,EAAMzO,MAAuB,iBAAfyO,EAAMzO,KAA0ByO,EAAMzO,KAAO,SAlD/E,SAAiCyO,EAAcmlC,GACxCA,IAGLnlC,EAAMuO,IAAMvO,EAAMuO,KAAO,GACzBvO,EAAMuO,IAAIhb,KAAOyM,EAAMuO,IAAIhb,MAAQ4xC,EAAQ5xC,KAC3CyM,EAAMuO,IAAIoL,QAAU3Z,EAAMuO,IAAIoL,SAAWwrB,EAAQxrB,QACjD3Z,EAAMuO,IAAIR,aAAa,GAAAS,OAAOxO,EAAMuO,IAAIR,cAAgB,GAASo3B,EAAQp3B,cAAgB,IACzF/N,EAAMuO,IAAIyoC,SAAS,GAAAxoC,OAAOxO,EAAMuO,IAAIyoC,UAAY,GAAS7R,EAAQ6R,UAAY,IAE/E,CA0CEC,CAAwBj3C,EAAOoT,GAAYA,EAAS7E,KAEpD,IAAM2oC,EAAkBhS,GAA2BllC,EAAOmlC,EAASC,EAAQ9D,GAS3E,cAHOthC,EAAM2T,sBAGNyuB,GAA8B8U,EAAiB,CADzB,CAAC,CAAE3lD,KAAMi3B,GAAaxoB,IAErD,CuB8Scm3C,CAAoBn3C,EAAOlO,KAAKojD,KAAMpjD,KAAKuvB,SAASsU,UAAW7jC,KAAKuvB,SAAS+jB,QAEvF1nB,EAAAC,GAAyBja,EAAK4M,aAAe,MAAEmN,EAAAC,KAAA9sB,MAAE,CvBrWC2xC,EuBuW9CwU,EvBvW2DD,EuBwW3D/S,GAHkBtmB,EAAArtB,MAKhB0B,KAAKuvB,SAAS+zB,kBAAoBtjD,KAAKuvB,SAAS+zB,iBAAiB1S,kBvBzWlErS,OAASgS,EAAThS,EAAkBkS,EAAQ,GAAjBF,EAASE,EAAQ,GuBqW7BwU,EvBpWG,CAAC1mB,EAAS,GAAF7hB,OAAM6zB,EAAO,CAAAyU,IuB2W9B,CAEI,IAAMM,EAAUtlD,KAAKulD,cAAcN,GAC/BK,GACFA,EAAQ1kD,MAAK,SAAA4kD,GAAa,OAAGx0C,EAAKgQ,KAAK,iBAAkB9S,EAAOs3C,EAAa,GAAE,KAErF,EAEAr1C,EAGS0zC,YAAA,SAAYzwC,GACjB,IAAM6xC,EvBvXH,SACL7xC,EACAo8B,EACAluB,EACAgyB,GAEA,IAAMD,EAAUJ,GAAgC3xB,GAUhD,OAAOgvB,GATDlqC,EAAA,CACJmtC,SAAS,IAAIthC,MAAOkY,eAChBkpB,GAAW,CAAE52B,IAAK42B,KAChBC,GAAU9D,GAAO,CAAEA,IAAKD,GAAYC,KAMY,CAFtD,eAAgBp8B,EAAU,CAAC,CAAE3T,KAAM,YAAc2T,GAAW,CAAC,CAAE3T,KAAM,WAAa2T,EAAQyD,WAG9F,CuBsWgB4uC,CAAsBryC,EAASpT,KAAKojD,KAAMpjD,KAAKuvB,SAASsU,UAAW7jC,KAAKuvB,SAAS+jB,QAI7FtzC,KAAKulD,cAAcN,EACvB,EAEA90C,EAGS+0B,mBAAA,SAAmB31B,EAAyB0sB,EAAwBypB,GACzE,GAAI1lD,KAAKuvB,SAASo2B,kBAAmB,CAGnC,IAAMC,EAAgC,iBAAjBF,EAA4BA,EAAe,EAQ1DzhD,EAAOsL,EAAA,IAAA0sB,EAEA,KAAAinB,UAAAj/C,IAAA,KAAAi/C,UAAAj/C,IAAA,GAAA2hD,CACA,CACA,EAEAz1C,EAGA01C,wBAAA,SAAArD,GAEA,IAAAsD,EAAAvD,GACAC,EACA,KAAAY,KACA,KAAA7zB,SAAAsU,UACA,KAAAtU,SAAA+jB,QAKA,KAAAiS,cAAAO,EACA,EA+CA31C,EACAic,GAAA,SAAA25B,EAAAtgD,GACA,KAAA09C,OAAA4C,KACA,KAAA5C,OAAA4C,GAAA,IAIA,KAAA5C,OAAA4C,GAAA9kD,KAAAwE,EACA,EAsCA0K,EACA6Q,KAAA,SAAA+kC,GAAA,QAAAh7B,EAAAxkB,UAAAlF,OAAA8tB,EAAA,IAAA3mB,MAAAuiB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAkE,EAAAlE,EAAA,GAAA1kB,UAAA0kB,GACA,KAAAk4B,OAAA4C,IACA,KAAA5C,OAAA4C,GAAAxlD,SAAA,SAAAkF,GAAA,OAAAA,EAAAe,WAAA,EAAA2oB,EAAA,GAEA,EAIAhf,EACAs0C,mBAAA,WACA,IAAAxoC,EAAA,KAAAsT,SAAAtT,aACA,KAAA8mC,cjF9cZ,SAA2BrnC,EAAgBO,GAChD,IAAM+P,EAAqC,CAAC,EAS5C,OAPA/P,EAAa1b,SAAQ,SAAA8oB,GAEfA,GACF0C,GAAiBrQ,EAAQ2N,EAAa2C,EAE5C,IAESA,CACT,CiFmcmBhE,CAAA,KAAA/L,GACAyP,GAAA,KAAAzP,GAGA,KAAA+mC,0BAAA,CACA,EAEA7yC,EACA61C,wBAAA,SAAA5yC,EAAAlF,GACA,IAAA+3C,GAAA,EACAC,GAAA,EACA7oB,EAAAnvB,EAAAC,WAAAD,EAAAC,UAAAhM,OAEA,GAAAk7B,EAAA,CACA6oB,GAAA,EAEA,QAAA/U,EAAAC,EAAAvlB,GAAAwR,KAAA8T,EAAAC,KAAAtyC,MAAA,KACA8P,EADAuiC,EAAA7yC,MACAsQ,UACA,GAAAA,IAAA,IAAAA,EAAAC,QAAA,CACAo3C,GAAA,EACA,KACA,CACA,CACA,CAKA,IAAAE,EAAA,OAAA/yC,EAAAmB,QACA4xC,GAAA,IAAA/yC,EAAAkB,QAAA6xC,GAAAF,KAGA9yC,GAAAC,EAAAhN,EAAC,CAAD,EACA6/C,GAAI,CAAJ1xC,OAAA,YACAD,OAAAlB,EAAAkB,QAAAg0B,OAAA4d,GAAAD,MAEA,KAAAv8B,eAAAtW,GAEA,EAEAjD,EAUA+zC,wBAAA,SAAAF,GAAA,IAAA9yC,EAAA,KACA,WAAA7B,GAAA,SAAA3O,GACA,IAAA0lD,EAAA,EAGAC,EAAA12B,aAAA,WACA,GAAAze,EAAA+xC,gBACAqD,cAAAD,GACA3lD,GAAA,KAEA0lD,GAPA,EAQApC,GAAAoC,GAAApC,IACAsC,cAAAD,GACA3lD,GAAC,IAGD,GAbA,EAcA,GACA,EAEAyP,EACAq0C,WAAA,WACA,gBAAA/jC,aAAA1a,cAAApC,IAAA,KAAA0/C,UACA,EAEAlzC,EAcAo2C,cAAA,SACAr4C,EACA0D,EACA6J,EACAE,GACA,IAAAtK,EAAA,UADA,IAAAsK,IAAAA,EAAA4M,MAEA,IAAAtgB,EAAA,KAAAwY,aACAxE,EAAAze,OAAAwE,KAAA,KAAA+gD,eAOA,OANAnxC,EAAAqK,cAAAA,EAAA5a,OAAA,IACAuQ,EAAAqK,aAAAA,GAGA,KAAA+E,KAAA,kBAAA9S,EAAA0D,GAEA4J,GAAAvT,EAAAiG,EAAA0D,EAAA6J,EAAA,KAAAE,GAAA/a,MAAA,SAAA+d,GACA,UAAAA,EACA,OAAAA,EAGA,IAAAiE,EAAAxc,EAAA,GACAuV,EAAAkL,wBACApL,EAAAA,EAAAoL,6BAAAljB,GAIA,KADAgb,EAAAS,WAAAT,EAAAS,SAAAE,QACAsD,EAAA,CACA,IAAApI,EAAAoI,EAAAxJ,QAAAU,EAAA8I,EAAA9I,OAAAT,EAAAuJ,EAAAvJ,aAAAW,EAAA4I,EAAA5I,IACA2E,EAAAS,SAAAhZ,EAAA,CACAkZ,MAAA,CACA9E,SAAAA,EACAD,QAAAT,EACAc,eAAAvB,IAEAsF,EAAAS,UAGA,IAAA/H,EAAA2C,GAAAwG,GAAAhG,EAAAnJ,EAAAoK,GAEAkD,EAAAkD,sBAAAzb,EAAA,CACAiR,uBAAAA,GACAsH,EAAAkD,sBAEA,CACA,OAAAlD,CACA,GACA,EAEAxO,EAMAszC,cAAA,SAAAv1C,EAAA0D,EAAA6J,GACA,YADA,IAAA7J,IAAAA,EAAA,IACA,KAAA40C,cAAAt4C,EAAA0D,EAAA6J,GAAA7a,MACA,SAAA6lD,GACA,OAAAA,EAAAn4C,QACA,IACA,SAAAiB,GAYA,GAEA,EAEAY,EAaAq2C,cAAA,SAAAt4C,EAAA0D,EAAA6J,GAAA,IAAAqsB,EAAA,KACA7/B,EAAA,KAAAwY,aACAe,EAAAvZ,EAAAuZ,WAEAklC,EAAAC,GAAAz4C,GACAxH,EAAAK,GAAAmH,GACAwoB,EAAAxoB,EAAAzO,MAAA,QACAmnD,EAAA,yBAAAlwB,EAAA,IAKA,GAAAhwB,GAAA,iBAAA8a,GAAA3c,KAAA6I,SAAA8T,EAEA,OADA,KAAA0jB,mBAAA,sBAAAh3B,GACAoB,EACA,IAAAsyC,GAAA,oFACApgC,EAAA,IACA,QAKA,IAAAqlC,EAAA,iBAAAnwB,EAAA,SAAAA,EAGAsO,GADA92B,EAAA2T,uBAAA,IACAmjB,2BAEA,YAAAuhB,cAAAr4C,EAAA0D,EAAA6J,EAAAupB,GACApkC,MAAA,SAAAob,GACA,UAAAA,EAEA,MADA8rB,EAAA5C,mBAAA,kBAAA2hB,EAAA34C,GACA,IAAA0zC,GAAA,kEAIA,GADAhwC,EAAA7C,OAAA,IAAA6C,EAAA7C,KAAA+3C,WAEA,OAAA9qC,EAGA,IAAAzL,EA8JA,SACAtI,EACAiG,EACA0D,GAEA,IAAAm1C,EAAA9+C,EAAA8+C,WAAAC,EAAA/+C,EAAA++C,sBAEA,GAAAjgD,GAAAmH,IAAA64C,EACA,OAAAA,EAAA74C,EAAA0D,GAGA,GAAA+0C,GAAAz4C,IAAA84C,EAAA,CACA,GAAA94C,EAAAqR,MAAE,CAGF,IAAA0nC,EAAA/4C,EAAAqR,MAAAle,OACA6M,EAAA2T,sBAAAzb,EAAA,GACA8H,EAAA2T,sBAAA,CACAqlC,0BAAAD,GAEA,CACA,OAAAD,EAAA94C,EAAA0D,EACA,CAEA,OAAA1D,CACA,CAvLAi5C,CAAAl/C,EAAA+T,EAAApK,GACA,OAmIA,SACAw1C,EACAR,GAEA,IAAAS,EAAAT,EAAA,wCACA,GAAAr/C,EAAA6/C,GACA,OAAAA,EAAAxmD,MACA,SAAAsN,GACA,IAAA9G,EAAA8G,IAAA,OAAAA,EACA,UAAA0zC,GAAAyF,GAEA,OAAAn5C,CACA,IACA,SAAA3Q,GACA,UAAAqkD,GAAAgF,EAAA,kBAAArpD,EACA,IAEA,IAAA6J,EAAAggD,IAAA,OAAAA,EACA,UAAAxF,GAAAyF,GAEA,OAAAD,CACA,CAxJAE,CAAA/2C,EAAAq2C,EACA,IACAhmD,MAAA,SAAA2mD,GACA,UAAAA,EAAA,CAEA,GADAzf,EAAA5C,mBAAA,cAAA2hB,EAAA34C,GACAw4C,EAAA,CACA,IAEAc,EAAA,GAFAt5C,EAAAqR,OAAA,IAEAle,OACAymC,EAAA5C,mBAAA,qBAAAsiB,EACA,CACA,UAAA5F,GAAAgF,EAAA,+CACA,CAEA,IAAAxzC,EAAAqI,GAAAA,EAAAiK,aAKA,IAJAghC,GAAAtzC,GACA00B,EAAAke,wBAAA5yC,EAAAm0C,GAGAb,EAAA,CACA,IAKAe,GAJAF,EAAA1lC,uBAAA0lC,EAAA1lC,sBAAAqlC,2BACA,IACAK,EAAAhoC,MAAAgoC,EAAAhoC,MAAAle,OAAA,GAGAomD,EAAA,GACA3f,EAAA5C,mBAAA,qBAAAuiB,EAEA,CAKA,IAAAC,EAAAH,EAAAtiB,iBAUA,OATAyhB,GAAAgB,GAAAH,EAAAhnC,cAAArS,EAAAqS,cAEAgnC,EAAAtiB,iBAAA7+B,EAAA,GACAshD,EAAA,CACAv8C,OAHA,YAOA28B,EAAAid,UAAAwC,EAAA31C,GACA21C,CACA,IACA3mD,KAAA,eAAA2O,GACA,GAAAA,aAAAqyC,GACA,MAAAryC,EASA,MANAu4B,EAAAnoB,iBAAApQ,EAAA,CACAR,KAAA,CACA+3C,YAAA,GAEA9/B,kBAAAzX,IAEA,IAAAqyC,GAAA,8HACAryC,EAEA,GACA,EAEAY,EAGAozC,SAAA,SAAA+B,GAAA,IAAAqC,EAAA,KACA,KAAA1E,iBACAqC,EAAA1kD,MACA,SAAAtC,GAEA,OADAqpD,EAAA1E,iBACA3kD,CACA,IACA,SAAAiR,GAEA,OADAo4C,EAAA1E,iBACA1zC,CACA,GAEA,EAEAY,EAGAo1C,cAAA,SAAA9U,GAGA,GAFA,KAAAzvB,KAAA,iBAAAyvB,GAEA,KAAA+T,cAAA,KAAAnB,WACA,YAAAA,WAAAjH,KAAA3L,GAAA7vC,KAAA,eAAA2O,GAEA,GAIA,EAEAY,EAGAy3C,eAAA,WACA,IAAAC,EAAA,KAAA3E,UAEA,OADA,KAAAA,UAAA,GACA1lD,OAAAwE,KAAA6lD,GAAAj+C,KAAA,SAAA3F,GACA,IAAA6jD,EAAA7jD,EAAA6F,MAAA,KACA,OACAyF,OAFAu4C,EAAA,GAGA7rB,SAHA6rB,EAAA,GAIAC,SAAAF,EAAA5jD,GAEA,GACA,EAKA6+C,CAAA,CAzxBa,GA+1Bb,SAAA/7C,GAAAmH,GACA,YAAAvK,IAAAuK,EAAAzO,IACA,CAEA,SAAAknD,GAAAz4C,GACA,MAAK,gBAALA,EAAAzO,IACA,yyBC55Ba,SAAAuoD,GAAAC,EAAApB,EAAA30C,GACA,YADA,IAAAA,IAAAA,EAAAD,KAAAC,OAPA,SAAA+1C,EAAApB,GACA,OAAAoB,EAAApB,IAAAoB,EAAAC,KAAA,CACA,CAMAC,CAAAF,EAAApB,GAAA30C,CACA,CAOA,SAAAk2C,GACAH,EAAAvuC,EAEAxH,GACA,IAFAm2C,EAAA3uC,EAAA2uC,WAAA9pB,EAAA7kB,EAAA6kB,aACA,IAAArsB,IAAAA,EAAAD,KAAAC,OAEA,IAAAo2C,EAAAliD,EAAA,GACA6hD,GAKAM,EAAAhqB,GAAAA,EAAA,wBACAiqB,EAAAjqB,GAAAA,EAAA,eAEA,GAAAgqB,EAeA,QAAA58B,EAAAC,EAAAC,GAAA08B,EAAA/vC,OAAA1O,MAAA,QAAA6hB,EAAAC,KAAA9sB,MAAA,KACA2pD,EADA98B,EAAArtB,MACAwL,MAAA,OAAA4+C,EAAAD,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAH,EAAA,GACAI,EAAA3zB,SAAAwzB,EAAA,IACAI,EAAA,KAAA1nD,MAAAynD,GAAA,GAAAA,GACA,GAAAF,EAGA,QAAAxX,EAAAC,EAAAvlB,GAAA88B,EAAA7+C,MAAA,QAAAqnC,EAAAC,KAAAtyC,MAAA,KAAAm9B,EAAAkV,EAAA7yC,MACA,kBAAA29B,GAEA2sB,IAAAA,EAAA9+C,MAAA,KAAAkB,SAAA,YAIAs9C,EAAArsB,GAAA/pB,EAAA42C,EAEA,MAXAR,EAAAJ,IAAAh2C,EAAA42C,CAaA,MACAN,EACAF,EAAAJ,IAAAh2C,EAtFzB,SAA+BkmB,EAAgBlmB,QAAG,IAAHA,IAAAA,EAAcD,KAAKC,OACvE,IAAM22C,EAAc3zB,SAAS,GAACkD,EAAA,IACA,IAAAh3B,MAAAynD,GACA,WAAAA,EAGA,IAAAE,EAAA92C,KAAA+2C,MAAA,GAAA5wB,GACA,OAAAh3B,MAAA2nD,GAfG,IAgBHA,EAAA72C,CAIA,CA0EA+2C,CAAAT,EAAAt2C,GACA,MAAAm2C,IACAC,EAAAJ,IAAAh2C,EAAA,KAGA,OAAAo2C,CACA,cCnGzB,SAASY,KAEd,MAAyB,oBAAX/kD,WAA4BvB,EAAAA,GAAAA,YASRe,IAA/BmB,EAAmB/B,SAAmF,aAAxD+B,EAAmB/B,QAA4BtD,KARlG,yyBCHO,ICNH0pD,GDMSrhD,GAAShD,EAETskD,GAAqB,sBAGrBC,GAAwB,wBAqBxBC,GAAwB,KAGxBC,GAAuB,IAQvBC,GAA+B,IAQ/BC,GAAsB,KCnDnC,SAAAC,GAAAjI,GAAA,QAAAC,OAAA/9C,EAAArF,EAAAmjD,EAAA,GAAA3jD,EAAA,EAAAA,EAAA2jD,EAAApgD,QAAA,KAAAsZ,EAAA8mC,EAAA3jD,GAAA8W,EAAA6sC,EAAA3jD,EAAA,MAAAA,GAAA,sBAAA6c,GAAA,iBAAAA,IAAA,MAAArc,EAAA,kBAAAqc,GAAA,mBAAAA,GAAA+mC,EAAApjD,EAAAA,EAAAsW,EAAAtW,IAAA,SAAAqc,GAAA,iBAAAA,IAAArc,EAAAsW,GAAA,mBAAA+0C,EAAA5+B,EAAAxkB,UAAAlF,OAAA2pB,EAAA,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAA1kB,UAAA0kB,GAAA,OAAA0+B,EAAArrD,GAAAqB,KAAA6G,MAAAmjD,EAAA,CAAAjI,GAAAhlC,OAAAsO,GAAA,IAAA02B,OAAA/9C,EAAA,QAAArF,CAAA,CAaA,SAASsrD,GAAalsD,GAClB,IAAM+9B,EAAOiuB,GAAA,CAAAhsD,EAAC,0BAAAsQ,GAAA,OAAAA,EAAEytB,IAAI,IACpB,OAAOj0B,QAAQkiD,GAAA,CAAAjuB,EAAI,0BAAAouB,GAAA,OAAAA,EAAEC,UAAW,MAAIpsD,EACxC,CACA,SAASqsD,GAAkBD,GACvB,MAAsD,wBAA/CtsD,OAAOC,UAAUqF,SAASnD,KAAKmqD,EAC1C,CA2BA,SAASE,GAAoBxqD,GACzB,IACI,IAAMyqD,EAAQzqD,EAAEyqD,OAASzqD,EAAE0qD,SAC3B,OAAOD,IA7B6BE,EA8BK3hD,MAAM2yB,KAAK8uB,EAAOG,IAAerhD,KAAK,KA7BvEiC,SAAS,6BAChBm/C,EAAQn/C,SAAS,qCAClBm/C,EAAUA,EAAQv8C,QAAQ,0BAA2B,2DAElDu8C,GA0BG,IACV,CACA,MAAOt4B,GACH,OAAO,IACX,CAnCJ,IAA4Cs4B,CAoC5C,CACA,SAASC,GAAcC,GACnB,IAAIC,EAgBEC,EAfN,GAkBJ,SAAyBF,GACrB,MAAO,eAAgBA,CAC3B,CApBQG,CAAgBH,GAChB,IACIC,EACIN,GAAoBK,EAAKI,aAnCzC,SAA+BJ,GAC3B,IAAQF,EAAYE,EAAZF,QACR,GAAIA,EAAQrgD,MAAM,KAAKzI,OAAS,EAC5B,OAAO8oD,EACX,IAAMO,EAAY,CAAC,UAAW,OAAOl1C,KAAKC,UAAU40C,EAAKh1B,MAAK,KAa9D,MAZuB,KAAnBg1B,EAAKM,UACLD,EAAUzpD,KAAK,SAEVopD,EAAKM,WACVD,EAAUzpD,KAAK,SAASopD,EAAKM,UAAS,KAEtCN,EAAKO,cACLF,EAAUzpD,KAAK,YAAYopD,EAAKO,aAAY,KAE5CP,EAAKQ,MAAMxpD,QACXqpD,EAAUzpD,KAAKopD,EAAKQ,MAAMC,WAEvBJ,EAAU3hD,KAAK,KAAO,GACjC,CAkBoBgiD,CAAsBV,EAClC,CACA,MAAOx4B,GACP,MAEC,GAYT,SAAwBw4B,GACpB,MAAO,iBAAkBA,CAC7B,CAdaW,CAAeX,IAASA,EAAKY,aAAajgD,SAAS,KACxD,OAKEu/C,EAAQ,uCALaF,EAAKF,QAMVv8C,QAAQ28C,EAAO,UAJrC,OAAOD,GAAqBD,EAAKF,OACrC,EAvEA,SAAWe,GACPA,EAASA,EAAmB,SAAI,GAAK,WACrCA,EAASA,EAAuB,aAAI,GAAK,eACzCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAkB,QAAI,GAAK,SACvC,CAPD,CAOG/B,KAAaA,GAAW,CAAE,IA0E7B,IACMgC,GAAA,WACF,SAAAA,IACInrD,KAAKorD,UAAY,IAAIt+C,IACrB9M,KAAKqrD,YAAc,IAAI5rC,OAC3B,KAAAtP,EAAAg7C,EAAA1tD,UA8CA,OA9CA0S,EACAm7C,MAAA,SAAM5tD,GACF,OAAKA,EAzFb,OAAA6tD,EA2FiB7B,GAAA,CAAE1pD,KAAI,kBAAAwrD,GAAA,OAAAA,EAACC,OAAO,EAAC,gBAAAC,GAAA,OAAAA,EAAAhuD,EAAE,4BAAAiuD,GAAA,OAAAA,EAAE/nD,EAAE,KA3FtC2nD,GA4FsB,GAFF,EACZ,IA3FRA,CA6FI,EAAAp7C,EACAy7C,QAAA,SAAQhoD,GACJ,OAAO5D,KAAKorD,UAAUlnD,IAAIN,IAAO,IACrC,EAAAuM,EACA07C,OAAA,WACI,OAAOrjD,MAAM2yB,KAAKn7B,KAAKorD,UAAUppD,OACrC,EAAAmO,EACAs7C,QAAA,SAAQ/tD,GACJ,OAAOsC,KAAKqrD,YAAYnnD,IAAIxG,IAAM,IACtC,EAAAyS,EACA27C,kBAAA,SAAkBpuD,GAAG,IAAA4S,EAAA,KACX1M,EAAK5D,KAAKsrD,MAAM5tD,GACtBsC,KAAKorD,UAAS,OAAQxnD,GAClBlG,EAAEquD,YACFruD,EAAEquD,WAAWxrD,SAAQ,SAACyrD,GAAS,OAAK17C,EAAKw7C,kBAAkBE,EAAU,GAE7E,EAAA77C,EACA2F,IAAA,SAAIlS,GACA,OAAO5D,KAAKorD,UAAUt1C,IAAIlS,EAC9B,EAAAuM,EACA87C,QAAA,SAAQ5M,GACJ,OAAOr/C,KAAKqrD,YAAYv1C,IAAIupC,EAChC,EAAAlvC,EACA4F,IAAA,SAAIrY,EAAGwuD,GACH,IAAMtoD,EAAKsoD,EAAKtoD,GAChB5D,KAAKorD,UAAU9mD,IAAIV,EAAIlG,GACvBsC,KAAKqrD,YAAY/mD,IAAI5G,EAAGwuD,EAC5B,EAAA/7C,EACAvC,QAAA,SAAQhK,EAAIlG,GACR,IAAMyuD,EAAUnsD,KAAK4rD,QAAQhoD,GAC7B,GAAIuoD,EAAS,CACT,IAAMD,EAAOlsD,KAAKqrD,YAAYnnD,IAAIioD,GAC9BD,GACAlsD,KAAKqrD,YAAY/mD,IAAI5G,EAAGwuD,EAChC,CACAlsD,KAAKorD,UAAU9mD,IAAIV,EAAIlG,EAC3B,EAAAyS,EACAhP,MAAA,WACInB,KAAKorD,UAAY,IAAIt+C,IACrB9M,KAAKqrD,YAAc,IAAI5rC,OAC3B,EAAA0rC,CAAA,CAlDE,GAuDN,SAASiB,GAAe1yC,GAAuC,IAApC2yC,EAAgB3yC,EAAhB2yC,iBAAkBjjD,EAAOsQ,EAAPtQ,QAAS3J,EAAIia,EAAJja,KAIlD,MAHgB,WAAZ2J,IACAA,EAAU,UAEP5B,QAAQ6kD,EAAiBjjD,EAAQG,gBACnC9J,GAAQ4sD,EAAiB5sD,IACjB,aAATA,GACa,UAAZ2J,IAAwB3J,GAAQ4sD,EAAuB,KAChE,CACA,SAASC,GAAcp0C,GAA6C,IAA1Cq0C,EAAQr0C,EAARq0C,SAAUlwB,EAAOnkB,EAAPmkB,QAAS/9B,EAAK4Z,EAAL5Z,MAAOkuD,EAAWt0C,EAAXs0C,YAC5CC,EAAOnuD,GAAS,GACpB,OAAKiuD,GAGDC,IACAC,EAAOD,EAAYC,EAAMpwB,IAEtB,IAAIqwB,OAAOD,EAAKprD,SALZorD,CAMf,CACA,SAASljD,GAAYW,GACjB,OAAOA,EAAIX,aACf,CACA,SAAS+tB,GAAYptB,GACjB,OAAOA,EAAIotB,aACf,CACA,IAAMq1B,GAA0B,qBAwChC,SAASC,GAAavwB,GAClB,IAAM58B,EAAO48B,EAAQ58B,KACrB,OAAO48B,EAAQwwB,aAAa,uBACtB,WACAptD,EAEM8J,GAAY9J,GACd,IACd,CACA,SAASqtD,GAAc7jD,EAAIG,EAAS3J,GAChC,MAAgB,UAAZ2J,GAAiC,UAAT3J,GAA6B,aAATA,EAGzCwJ,EAAG3K,MAFC2K,EAAGU,aAAa,UAAY,EAG3C,CAEA,IA2BIojD,GACAC,GA5BAC,GAAM,EACJC,GAAe,IAAIv0C,OAAO,gBAEhC,SAASw0C,KACL,OAAOF,IACX,CAwBA,IAAMG,GAAiB,6CACjBC,GAAqB,sBACrBC,GAAgB,YAChBC,GAAW,wBACjB,SAASC,GAAqBrD,EAAS90B,GACnC,OAAQ80B,GAAW,IAAIv8C,QAAQw/C,IAAgB,SAACtyC,EAAQ2yC,EAAQC,EAAOC,EAAQC,EAAOC,GAClF,IAnBevxC,EAmBTwxC,EAAWJ,GAASE,GAASC,EAC7BE,EAAaN,GAAUE,GAAU,GACvC,IAAKG,EACD,OAAOhzC,EAEX,GAAIuyC,GAAmBtiD,KAAK+iD,IAAaR,GAAcviD,KAAK+iD,GACxD,MAAO,OAAOC,EAAWD,EAAAC,EAAA,IAEA,GAAAR,GAAAxiD,KAAA+iD,GACA,aAAAC,EAAAD,EAAAC,EAAA,IAEA,SAAAD,EAAA,GACA,aAAAC,KA/BdzxC,EA+Bc+Y,GA7BzBpJ,QAAQ,OAAS,EACZ3P,EAAIxS,MAAM,KAAKxH,MAAM,EAAG,GAAGyG,KAAK,KAGhCuT,EAAIxS,MAAM,KAAK,IAEZA,MAAM,KAAK,GAuBMgkD,GAAAC,EAAA,IAEA,IAAA/hD,EAAAqpB,EAAAvrB,MAAA,KACAmnC,EAAA6c,EAAAhkD,MAAA,KACAkC,EAAA9J,MACA,QAAAypB,EAAAC,EAAAC,GAAAolB,KAAAtlB,EAAAC,KAAA9sB,MAAA,KAAAkvD,EAAAriC,EAAArtB,MACA,MAAA0vD,IAGA,OAAAA,EACAhiD,EAAA9J,MAGA8J,EAAA/K,KAAA+sD,GAEA,CACA,aAAAD,EAAA/hD,EAAAjD,KAAA,KAAAglD,EAAA,GACA,GACA,CACA,IAAAE,GAAA,qBACAC,GAAA,qBA2DA,SAAAC,GAAAj1B,EAAAk1B,GACA,IAAAA,GAAA,KAAAA,EAAA51C,OACA,OAAA41C,EAEA,IAAApwD,EAAAk7B,EAAAC,cAAA,KAEA,OADAn7B,EAAAq3B,KAAA+4B,EACApwD,EAAAq3B,IACA,CACA,SAAAg5B,GAAAplD,GACA,OAAAzB,QAAA,QAAAyB,EAAAG,SAAAH,EAAAqlD,gBACA,CACA,SAAAC,KACA,IAAAvwD,EAAAsY,SAAA6iB,cAAA,KAEA,OADAn7B,EAAAq3B,KAAA,GACAr3B,EAAAq3B,IACA,CACA,SAAAm5B,GAAAt1B,EAAA9vB,EAAA3H,EAAAnD,EAAA+9B,EAAAoyB,GACA,OAAAnwD,EAGA,QAAAmD,GACK,SAALA,IAAK,QAAL2H,GAAA,MAAA9K,EAAA,KAGA,eAAAmD,GAAA,MAAAnD,EAAA,GAFA6vD,GAAAj1B,EAAA56B,GAKA,eAAAmD,GACA,UAAA2H,GAAA,OAAAA,GAAA,OAAAA,EAGA,WAAA3H,EAzFA,SAAAy3B,EAAAk1B,GACA,QAAAA,EAAA51C,OACA,OAAA41C,EAEA,IAAAM,EAAA,EACA,SAAAC,EAAAC,GACA,IAAAC,EACA11C,EAAAy1C,EAAA5e,KAAAoe,EAAAv0C,UAAA60C,IACA,OAAAv1C,GACA01C,EAAA11C,EAAA,GACAu1C,GAAAG,EAAAxtD,OACAwtD,GAEA,EACA,CAEA,IADA,IAAAtkD,EAAA,GAEAokD,EAAAT,MACAQ,GAAAN,EAAA/sD,SAFA,CAKA,IAAAib,EAAAqyC,EAAAV,IACA,SAAA3xC,EAAAha,OAAA,GACAga,EAAA6xC,GAAAj1B,EAAA5c,EAAAzC,UAAA,EAAAyC,EAAAjb,OAAA,IACAkJ,EAAAtJ,KAAAqb,OAEA,CACA,IAAAwyC,EAAA,GACAxyC,EAAA6xC,GAAAj1B,EAAA5c,GAEA,IADA,IAAAyyC,GAAA,IACA,CACA,IAAA3wD,EAAAgwD,EAAA/rD,OAAAqsD,GACA,QAAAtwD,EAAA,CACAmM,EAAAtJ,MAAAqb,EAAAwyC,GAAAt2C,QACA,KACA,CACA,GAAAu2C,EAWA,MAAA3wD,IACA2wD,GAAA,OAZA,CACA,SAAA3wD,EAAA,CACAswD,GAAA,EACAnkD,EAAAtJ,MAAAqb,EAAAwyC,GAAAt2C,QACA,KACA,CACA,MAAApa,IACA2wD,GAAA,EAEA,CAMAD,GAAA1wD,EACAswD,GAAA,CACA,CACA,CACA,CACA,OAAAnkD,EAAAxB,KAAA,KACA,CAiCAimD,CAAA91B,EAAA56B,GAEA,UAAAmD,EACA+rD,GAAAlvD,EAAAiwD,MAEA,WAAAnlD,GAAA,SAAA3H,EACA0sD,GAAAj1B,EAAA56B,GAEA,mBAAAmwD,EACAA,EAAAhtD,EAAAnD,EAAA+9B,GAEA/9B,EAdA6vD,GAAAj1B,EAAA56B,GAXAA,CA0BA,CACA,SAAA2wD,GAAA7lD,EAAA3H,EAAA2P,GACA,iBAAAhI,GAAA,UAAAA,IAAA,aAAA3H,CACA,CAoCA,SAAAytD,GAAA7P,EAAA8P,EAAA/xB,EAAAgyB,GACA,YADA,IAAAhyB,IAAAA,EAAAkO,UAAA,IAAA8jB,IAAAA,EAAA,GACA/P,EAEAA,EAAAgQ,WAAAhQ,EAAAiQ,cAEAF,EAAAhyB,GADA,EAGA+xB,EAAA9P,GACA+P,EACAF,GAAA7P,EAAAx2C,WAAAsmD,EAAA/xB,EAAAgyB,EAAA,IAPA,CAQA,CACA,SAAAG,GAAAzoD,EAAAu5C,GACA,gBAAAhB,GACA,IAAAp2C,EAAAo2C,EACA,UAAAp2C,EACA,SACA,IACA,GAAAnC,EACA,oBAAAA,GACA,GAAAmC,EAAAiQ,QAAA,IAAApS,GACA,cAEA,GA/BA,SAAAmC,EAAAshD,GACA,QAAAiF,EAAAvmD,EAAAwmD,UAAApuD,OAAAmuD,KAAA,CACA,IAAA1oD,EAAAmC,EAAAwmD,UAAAD,GACA,GAAAjF,EAAAx/C,KAAAjE,GACA,QAEA,CACA,QACA,CAuBA4oD,CAAAzmD,EAAAnC,GACA,SAGA,SAAAu5C,IAAAp3C,EAAAiQ,QAAAmnC,GAGA,CACA,MAAA5rB,GACA,QACA,CACA,CACA,CACA,SAAAk7B,GAAAtQ,EAAAuQ,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IACA,IAAA/mD,EAAAo2C,EAAAgQ,WAAAhQ,EAAAiQ,aACAjQ,EACAA,EAAA4Q,cACA,UAAAhnD,EACA,SACA,aAAAA,EAAAG,QAAA,CACA,IAAA8mD,EAAAjnD,EAAAU,aAAA,gBAUA,GATA,CACA,mBACA,eACA,YACA,SACA,eACA,cACA,UAEAqB,SAAAklD,GACA,QAEA,CACA,IAAAC,GAAA,EACAC,GAAA,EACA,GAAAJ,EAAA,CAEA,IADAI,EAAAlB,GAAAjmD,EAAAsmD,GAAAO,EAAAC,KACA,EACA,SAEAI,EAAAjB,GAAAjmD,EAAAsmD,GAAAK,EAAAC,GAAAO,GAAA,EAAAA,EAAA9kB,IACA,KACA,CAEA,IADA6kB,EAAAjB,GAAAjmD,EAAAsmD,GAAAK,EAAAC,KACA,EACA,SAEAO,EAAAlB,GAAAjmD,EAAAsmD,GAAAO,EAAAC,GAAAI,GAAA,EAAAA,EAAA7kB,IACA,CACA,OAAA6kB,GAAA,IACAC,GAAA,IACAD,GAAAC,IAEAA,GAAA,IAEAJ,EACA,CACA,MAAAzyD,GACA,CACA,QAAAyyD,CACA,CAkWA,SAAAK,GAAAC,GACA,OAAAA,QACA,GAGAA,EAAA/mD,aAEA,CAyEA,SAAAgnD,GAAA7yD,EAAAuK,GACA,IA4BArE,EA5BAs1B,EAAAjxB,EAAAixB,IAAAs3B,EAAAvoD,EAAAuoD,OAAAC,EAAAxoD,EAAAwoD,WAAAC,EAAAzoD,EAAAyoD,cAAAC,EAAA1oD,EAAA0oD,gBAAAX,EAAA/nD,EAAA+nD,YAAAJ,EAAA3nD,EAAA2nD,cAAAE,EAAA7nD,EAAA6nD,gBAAAD,EAAA5nD,EAAA4nD,iBAAAE,EAAA9nD,EAAA8nD,mBAAAa,EAAA3oD,EAAA4oD,UAAAA,OAAA,IAAAD,GAAAA,EAAAE,EAAA7oD,EAAA8oD,iBAAAA,OAAA,IAAAD,GAAAA,EAAAE,EAAA/oD,EAAAokD,iBAAAA,OAAA,IAAA2E,EAAA,GAAAA,EAAAvC,EAAAxmD,EAAAwmD,gBAAAwC,EAAAhpD,EAAAgpD,WAAAzE,EAAAvkD,EAAAukD,YAAA0E,EAAAjpD,EAAAipD,eAAAC,EAAAlpD,EAAAmpD,eAAAA,OAAA,IAAAD,EAAA,GAAAA,EAAAE,EAAAppD,EAAAqpD,aAAAA,OAAA,IAAAD,GAAAA,EAAAE,EAAAtpD,EAAAupD,aAAAA,OAAA,IAAAD,GAAAA,EAAAE,EAAAxpD,EAAAwpD,YAAAC,EAAAzpD,EAAAypD,aAAAC,EAAA1pD,EAAA2pD,kBAAAA,OAAA,IAAAD,EAAA,IAAAA,EAAAE,EAAA5pD,EAAA4pD,iBAAAC,EAAA7pD,EAAA8pD,sBAAAA,OAAA,IAAAD,EAAA,IAAAA,EAAAE,EAAA/pD,EAAAgqD,gBAAAA,OAAA,IAAAD,EAAA,qBAAAA,EAAAE,EAAAjqD,EAAAkqD,kBAAAA,OAAA,IAAAD,GAAAA,EACAE,EAAAnqD,EAAAoqD,mBAAAA,OAAA,IAAAD,GAAAA,EACAE,EAzXA,SAAA50D,EAAAuK,GACA,IAAAixB,EAAAjxB,EAAAixB,IAAAs3B,EAAAvoD,EAAAuoD,OAAAC,EAAAxoD,EAAAwoD,WAAAC,EAAAzoD,EAAAyoD,cAAAC,EAAA1oD,EAAA0oD,gBAAAX,EAAA/nD,EAAA+nD,YAAAvB,EAAAxmD,EAAAwmD,gBAAAmB,EAAA3nD,EAAA2nD,cAAAE,EAAA7nD,EAAA6nD,gBAAAD,EAAA5nD,EAAA4nD,iBAAAE,EAAA9nD,EAAA8nD,mBAAAgB,EAAA9oD,EAAA8oD,iBAAAwB,EAAAtqD,EAAAokD,iBAAAA,OAAA,IAAAkG,EAAA,GAAAA,EAAAtB,EAAAhpD,EAAAgpD,WAAAzE,EAAAvkD,EAAAukD,YAAAgG,EAAAvqD,EAAAmpD,eAAAA,OAAA,IAAAoB,EAAA,GAAAA,EAAAlB,EAAArpD,EAAAqpD,aAAAE,EAAAvpD,EAAAupD,aAAAS,EAAAhqD,EAAAgqD,gBAAAQ,EAAAxqD,EAAAkqD,kBAAAA,OAAA,IAAAM,GAAAA,EACAC,EA0EA,SAAAx5B,EAAAs3B,GACA,GAAAA,EAAAvE,QAAA/yB,GAAA,CAEA,IAAAy5B,EAAAnC,EAAAlF,MAAApyB,GACA,WAAAy5B,OAAAhvD,EAAAgvD,CAFA,CAGA,CA/EAC,CAAA15B,EAAAs3B,GACA,OAAA9yD,EAAA2xD,UACA,KAAA3xD,EAAAm1D,cACA,qBAAAn1D,EAAAo1D,WACA,CACArzD,KAAA0pD,GAAA4J,SACAhH,WAAA,GACA+G,WAAAp1D,EAAAo1D,YAIA,CACArzD,KAAA0pD,GAAA4J,SACAhH,WAAA,IAGA,KAAAruD,EAAAs1D,mBACA,OACAvzD,KAAA0pD,GAAA8J,aACAxxD,KAAA/D,EAAA+D,KACAyxD,SAAAx1D,EAAAw1D,SACAC,SAAAz1D,EAAAy1D,SACAT,OAAAA,GAEA,KAAAh1D,EAAA4xD,aACA,OA6GA,SAAA5xD,EAAAuK,GAMA,IALA,IA2IAmrD,EA3IAl6B,EAAAjxB,EAAAixB,IAAA63B,EAAA9oD,EAAA8oD,iBAAAsC,EAAAprD,EAAAokD,iBAAAA,OAAA,IAAAgH,EAAA,GAAAA,EAAA5E,EAAAxmD,EAAAwmD,gBAAAjC,EAAAvkD,EAAAukD,YAAA8G,EAAArrD,EAAAmpD,eAAAA,OAAA,IAAAkC,EAAA,GAAAA,EAAAhC,EAAArpD,EAAAqpD,aAAAE,EAAAvpD,EAAAupD,aAAAS,EAAAhqD,EAAAgqD,gBAAAsB,EAAAtrD,EAAAkqD,kBAAAA,OAAA,IAAAoB,GAAAA,EAAAb,EAAAzqD,EAAAyqD,OAAA9C,EAAA3nD,EAAA2nD,cAAAE,EAAA7nD,EAAA6nD,gBAAAD,EAAA5nD,EAAA4nD,iBAAAE,EAAA9nD,EAAA8nD,mBACAyD,EA7TA,SAAAn3B,EAAAo0B,EAAAC,EAAAC,GACA,IACA,GAAAA,GAAAt0B,EAAAnjB,QAAAy3C,GACA,SAEA,oBAAAF,GACA,GAAAp0B,EAAAozB,UAAAgE,SAAAhD,GACA,cAIA,QAAAjB,EAAAnzB,EAAAozB,UAAApuD,OAAAmuD,KAAA,CACA,IAAA1oD,EAAAu1B,EAAAozB,UAAAD,GACA,GAAAiB,EAAA1lD,KAAAjE,GACA,QAEA,CAEA,GAAA4pD,EACA,OAAAr0B,EAAAnjB,QAAAw3C,EAEA,CACA,MAAAnzD,GACA,CACA,QACA,CAoSAm2D,CAAAh2D,EADAuK,EAAAwoD,WAAAxoD,EAAAyoD,cAAAzoD,EAAA0oD,iBAEAvnD,EAterC,SAAyBizB,GACrB,GAAIA,aAAmBs3B,gBACnB,MAAO,OAEX,IAAMC,EAAmBrqD,GAAY8yB,EAAQjzB,SAC7C,OAAI8jD,GAAaniD,KAAK6oD,GACX,MAEJA,CACX,CA6dqCC,CAAAn2D,GACA4iC,EAAA,GACAh4B,EAAA5K,EAAA4iC,WAAAj/B,OACAvD,EAAA,EAAAA,EAAAwK,EAAAxK,IAAA,CACA,IAAAqL,EAAAzL,EAAA4iC,WAAAxiC,GACAqL,EAAA1H,OAAAwtD,GAAA7lD,EAAAD,EAAA1H,KAAA0H,EAAA7K,SACAgiC,EAAAn3B,EAAA1H,MAAA+sD,GAAAt1B,EAAA9vB,EAAAG,GAAAJ,EAAA1H,MAAA0H,EAAA7K,MAAAZ,EAAA+wD,GAEA,CACA,YAAArlD,GAAA2nD,EAAA,CACA,IAAA+C,EAAAtrD,MAAA2yB,KAAAjC,EAAA66B,aAAAtY,MAAC,SAADj8C,GACA,OAAAA,EAAA61B,OAAA33B,EAAA23B,IACA,IACA80B,EAAA,KACA2J,IACA3J,EAAAH,GAAA8J,IAEA3J,WACA7pB,EAAA0zB,WACA1zB,EAAAjL,KACAiL,EAAA2zB,SAAAzG,GAAArD,EAAA2J,EAAAz+B,MAEA,CACA,aAAAjsB,GACA1L,EAAAw2D,SACAx2D,EAAAy2D,WAAAz2D,EAAA02D,aAAA,IAAA57C,OAAAnX,OAAA,CACA,IAAA8oD,EAAAH,GAAAtsD,EAAAw2D,OACA/J,IACA7pB,EAAA2zB,SAAAzG,GAAArD,EAAAoE,MAEA,CACA,aAAAnlD,GACA,aAAAA,GACA,WAAAA,GACA,WAAAA,EAAA,CACA,IAAAH,EAAAvL,EACA+B,EAAAmtD,GAAA3jD,GACA3K,EAAAwuD,GAAA7jD,EAAAquB,GAAAluB,GAAA3J,GACA40D,EAAAprD,EAAAorD,QACA,GAAK,WAAL50D,GAAK,WAALA,GAAAnB,EAAA,CACA,IAAAg2D,EAAA3E,GAAA1mD,EAAA2mD,EAAAC,EAAAC,EAAAC,EAAA3D,GAAA,CACA3sD,KAAAA,EACA2J,QAAAkuB,GAAAluB,GACAijD,iBAAAA,KAEA/rB,EAAAhiC,MAAAguD,GAAA,CACAC,SAAA+H,EACAj4B,QAAApzB,EACA3K,MAAAA,EACAkuD,YAAAA,GAEA,CACA6H,IACA/zB,EAAA+zB,QAAAA,EAEA,CASA,GARA,WAAAjrD,IACA1L,EAAA62D,WAAAlI,EAAA,OACA/rB,EAAAi0B,UAAA,SAGAj0B,EAAAi0B,UAGA,WAAAnrD,GAAAooD,EACA,UAAA9zD,EAAA82D,WApmBrC,SAAyBC,GACrB,IAAM5xB,EAAM4xB,EAAOC,WAAW,MAC9B,IAAK7xB,EACD,OAAO,EAEX,IADA,IACSziC,EAAI,EAAGA,EAAIq0D,EAAOE,MAAOv0D,GADhB,GAEd,IAAK,IAAID,EAAI,EAAGA,EAAIs0D,EAAOpsD,OAAQlI,GAFrB,GAEqC,CAC/C,IAAMy0D,EAAe/xB,EAAI+xB,aACnBC,EAAuBlI,MAA2BiI,EAClDA,EAAajI,IACbiI,EAEN,GADoB,IAAIE,YAAYD,EAAqBl1D,KAAKkjC,EAAKziC,EAAGD,EAAG0E,KAAKgnC,IAPpE,GAOmF4oB,EAAOE,MAAQv0D,GAAIyE,KAAKgnC,IAP3G,GAO0H4oB,EAAOpsD,OAASlI,IAAI4O,KAAKgjC,QAC7IlnC,MAAK,SAACkqD,GAAK,OAAe,IAAVA,CAAW,IACvC,OAAO,CACf,CAEJ,OAAO,CACX,EAolBqCC,CAAAt3D,KACA4iC,EAAA20B,WAAAv3D,EAAAw3D,UAAA9D,EAAA3xD,KAAA2xD,EAAA+D,eAGA,mBAAAz3D,GAAA,CACA,IAAA03D,EAAA13D,EAAAw3D,UAAA9D,EAAA3xD,KAAA2xD,EAAA+D,SACAE,EAAA/+C,SAAA6iB,cAAA,UACAk8B,EAAAV,MAAAj3D,EAAAi3D,MACAU,EAAAhtD,OAAA3K,EAAA2K,OAEA+sD,IADAC,EAAAH,UAAA9D,EAAA3xD,KAAA2xD,EAAA+D,WAEA70B,EAAA20B,WAAAG,EAEA,CAEA,WAAAhsD,GAAAkoD,EAAA,CACAvE,KACAA,GAAA7zB,EAAAC,cAAA,UACA6zB,GAAAD,GAAA2H,WAAA,OAEA,IAAAY,EAAA53D,EACAmhD,EAAAyW,EAAAC,YACAD,EAAAC,YAAA,YACA,IAAAC,EAAA,WACAF,EAAAnqB,oBAAC,OAADqqB,GACA,IACAzI,GAAA4H,MAAAW,EAAAG,aACA1I,GAAA1kD,OAAAitD,EAAAI,cACA1I,GAAA2I,UAAAL,EAAA,KACAh1B,EAAA20B,WAAAlI,GAAAmI,UAAA9D,EAAA3xD,KAAA2xD,EAAA+D,QACA,CACA,MAAAjmD,GACAxJ,QAAAohB,KAAA,yBAAAwuC,EAAAM,WAAA,YAAA1mD,EACA,CACA2vC,EACAve,EAAAi1B,YAAA1W,EACAyW,EAAAO,gBAAA,cACA,EACAP,EAAA7yD,UAAA,IAAA6yD,EAAAG,aACAD,IAEAF,EAAAp/B,iBAAA,OAAAs/B,EACA,CAeA,GAdA,UAAApsD,GAAA,UAAAA,IACAk3B,EAAAw1B,cAAAp4D,EAAAq4D,OACA,SACA,SACAz1B,EAAA01B,oBAAAt4D,EAAAu4D,aAEA9D,IACAz0D,EAAAw4D,aACA51B,EAAA61B,cAAAz4D,EAAAw4D,YAEAx4D,EAAA04D,YACA91B,EAAA+1B,aAAA34D,EAAA04D,YAGA5C,EAAA,CACA,IAAA8C,EAAA54D,EAAA64D,wBAAA5B,EAAA2B,EAAA3B,MAAAtsD,EAAAiuD,EAAAjuD,OACAi4B,EAAA,CACA,MAAAA,EAAA,MACAk2B,SAAA7B,EAAA,KACA8B,UAAApuD,EAAA,KAEA,CACA,WAAAe,GAAA6oD,EAAA3xB,EAAAo2B,OACAh5D,EAAAi5D,kBACAr2B,EAAAs2B,OAAAt2B,EAAAo2B,YAEAp2B,EAAAo2B,KAGA,IACAG,eAAA3yD,IAAAkF,KACAgqD,GAAA,EACA,CACA,MAAA71D,GACA,CACA,OACAkC,KAAA0pD,GAAA38C,QACApD,QAAAA,EACAk3B,WAAAA,EACAyrB,WAAA,GACA+K,MAAAzI,GAAA3wD,SAAAiG,EACA6vD,UAAAA,EACAd,OAAAA,EACAqE,SAAA3D,EAEA,CA1QA4D,CAAAt5D,EAAA,CACAw7B,IAAAA,EACAu3B,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAI,iBAAAA,EACAtC,gBAAAA,EACApC,iBAAAA,EACAG,YAAAA,EACA4E,eAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAS,gBAAAA,EACAE,kBAAAA,EACAO,OAAAA,EACA1C,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,IAEA,KAAAryD,EAAAu5D,UACA,OAiCA,SAAAv5D,EAAAuK,GACA,IAAA+nD,EAAA/nD,EAAA+nD,YAAAJ,EAAA3nD,EAAA2nD,cAAAE,EAAA7nD,EAAA6nD,gBAAAD,EAAA5nD,EAAA4nD,iBAAAE,EAAA9nD,EAAA8nD,mBAAAkB,EAAAhpD,EAAAgpD,WAAA5E,EAAApkD,EAAAokD,iBAAAG,EAAAvkD,EAAAukD,YAAAkG,EAAAzqD,EAAAyqD,OACAwE,EAAAx5D,EAAAmL,YAAAnL,EAAAmL,WAAAO,QACAgrD,EAAA12D,EAAA02D,YACA+C,EAAA,UAAAD,QAAAvzD,EACAyzD,EAAA,WAAAF,QAAAvzD,EACA0zD,EAAA,aAAAH,QAAAvzD,EACA,GAAAwzD,GAAA/C,EAAA,CACA,IACA12D,EAAA45D,aAAA55D,EAAA65D,iBAEA7N,GAAA,CAAAhsD,EAAA,kBAAA85D,GAAA,OAAAA,EAAA3uD,UAAA,oBAAA4uD,GAAA,OAAAA,EAAAvD,KAAA,4BAAAwD,GAAA,OAAAA,EAAAxN,QAAA,MACAkK,EAAApK,GAAAtsD,EAAAmL,WAAAqrD,OAEA,CACA,MAAAhlD,GACAxJ,QAAAohB,KAAA,wDAAA5X,EAAAxR,EACA,CACA02D,EAAA5G,GAAA4G,EAAA7F,KACA,CACA6I,IACAhD,EAAA,sBAEA,IAAAE,EAAA3E,GAAAjyD,EAAAkyD,EAAAC,EAAAC,EAAAC,EAAAC,GAwBA,OAvBAmH,GAAAC,GAAAC,IAAAjD,IAAAE,IACAF,EAAAnD,EACAA,EAAAmD,EAAA12D,EAAAuyD,eACAmE,EAAAxmD,QAAA,cAEAypD,GAAAjD,IAAA/H,EAAAsL,UAAArD,KACAF,EAAA5H,EACAA,EAAA4H,EAAA12D,EAAAmL,YACAurD,EAAAxmD,QAAA,cAEA,WAAAspD,GAAA9C,IAMAA,EAAA9H,GAAA,CACAC,SAAAoD,GAAAjyD,EAAAkyD,EAAAC,EAAAC,EAAAC,EANA3D,GAAA,CACA3sD,KAAA,KACA2J,QAAA8tD,EACA7K,iBAAAA,KAIAhwB,QAAA3+B,EACAY,MAAA81D,EACA5H,YAAAA,KAGA,CACA/sD,KAAA0pD,GAAAyO,KACAxD,YAAAA,GAAA,GACA+C,QAAAA,EACAzE,OAAAA,EAEA,CAtFAmF,CAAAn6D,EAAA,CACAsyD,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAkB,WAAAA,EACA5E,iBAAAA,EACAG,YAAAA,EACAkG,OAAAA,IAEA,KAAAh1D,EAAAo6D,mBACA,OACAr4D,KAAA0pD,GAAA4O,MACA3D,YAAA,GACA1B,OAAAA,GAEA,KAAAh1D,EAAAs6D,aACA,OACAv4D,KAAA0pD,GAAA8O,QACA7D,YAAA12D,EAAA02D,aAAA,GACA1B,OAAAA,GAEA,QACA,SAEA,CA8SAwF,CAAAx6D,EAAA,CACAw7B,IAAAA,EACAs3B,OAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAV,YAAAA,EACAW,gBAAAA,EACAf,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAgB,iBAAAA,EACA1E,iBAAAA,EACAoC,gBAAAA,EACAwC,WAAAA,EACAzE,YAAAA,EACA4E,eAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAS,gBAAAA,EACAE,kBAAAA,IAEA,IAAAG,EAEA,OADA5sD,QAAAohB,KAAAppB,EAAA,kBACA,KAIAkG,EADA4sD,EAAAvE,QAAAvuD,GACA8yD,EAAAlF,MAAA5tD,IAvGA,SAAAy6D,EAAAjH,GACA,GAAAA,EAAAkH,SAAAD,EAAA14D,OAAA0pD,GAAA8O,QACA,SAEA,GAAAE,EAAA14D,OAAA0pD,GAAA38C,QAAA,CACA,GAAA0kD,EAAAmH,SACA,WAAAF,EAAA/uD,SACA,SAAA+uD,EAAA/uD,UACA,YAAA+uD,EAAA73B,WAAA0zB,KACA,kBAAAmE,EAAA73B,WAAA0zB,MACA,WAAAmE,EAAA73B,WAAAg4B,IACA,SAAAH,EAAA/uD,SACK,aAAL+uD,EAAA73B,WAAA0zB,KACA,iBAAAmE,EAAA73B,WAAAjL,MACA8iC,EAAA73B,WAAAjL,KAAA+jB,SAAA,QACA,SAEA,GAAA8X,EAAAqH,cACA,SAAAJ,EAAA/uD,SAAA,kBAAA+uD,EAAA73B,WAAA0zB,KACA,SAAAmE,EAAA/uD,UACAinD,GAAA8H,EAAA73B,WAAA7+B,MAAA0X,MAAA,sCACA,qBAAAk3C,GAAA8H,EAAA73B,WAAA7+B,OACA,SAAA4uD,GAAA8H,EAAA73B,WAAA0zB,MACA,qBAAA3D,GAAA8H,EAAA73B,WAAA0zB,MACA,kBAAA3D,GAAA8H,EAAA73B,WAAA0zB,OACA,SAEA,YAAAmE,EAAA/uD,QAAA,CACA,GAAA8nD,EAAAsH,sBACAnI,GAAA8H,EAAA73B,WAAA7+B,MAAA0X,MAAA,0BACA,SAEA,GAAA+3C,EAAAuH,iBACApI,GAAA8H,EAAA73B,WAAA5zB,UAAAyM,MAAA,sBACAk3C,GAAA8H,EAAA73B,WAAA7+B,MAAA0X,MAAA,mBACA,cAAAk3C,GAAA8H,EAAA73B,WAAA7+B,OACA,SAEA,GAAAyvD,EAAAwH,iBACA,WAAArI,GAAA8H,EAAA73B,WAAA7+B,OACA,cAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,YAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,SAEA,GAAAyvD,EAAAyH,wBACAh1D,IAAAw0D,EAAA73B,WAAA,cACA,SAEA,GAAA4wB,EAAA0H,qBACA,WAAAvI,GAAA8H,EAAA73B,WAAA7+B,OACA,cAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,cAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,cAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,WAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA4uD,GAAA8H,EAAA73B,WAAA5zB,UAAAyM,MAAA,cACAk3C,GAAA8H,EAAA73B,WAAA5zB,UAAAyM,MAAA,cACA,SAEA,GAAA+3C,EAAA2H,uBACA,6BAAAxI,GAAA8H,EAAA73B,WAAA7+B,OACA,wBAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,eAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,oBAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,cAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,iBAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,+BAAA4uD,GAAA8H,EAAA73B,WAAA7+B,OACA,QAEA,CACA,CACA,QACA,CAkCAq3D,CAAAxG,EAAApB,KACAmB,GACAC,EAAA7yD,OAAA0pD,GAAAyO,MACAtF,EAAA6E,SACA7E,EAAA8B,YAAAxmD,QAAA,kBAAAvM,QAIA8rD,MA9vBhB,EAgwBgB,IAAA4L,EAAAv7D,OAAA6I,OAAAisD,EAAA,CAAA1uD,GAAAA,IAEA,GADA4sD,EAAAz6C,IAAArY,EAAAq7D,IAjwBhB,IAkwBgBn1D,EACA,YAEA6tD,GACAA,EAAA/zD,GAEA,IAAAs7D,GAAAnI,EACA,GAAAkI,EAAAt5D,OAAA0pD,GAAA38C,QAAA,CACAwsD,EAAAA,IAAAD,EAAAvF,iBACAuF,EAAAvF,UACA,IAAA1J,EAAApsD,EAAAosD,WACAA,GAAAC,GAAAD,KACAiP,EAAAE,cAAA,EACA,CACA,IAAAF,EAAAt5D,OAAA0pD,GAAA4J,UACAgG,EAAAt5D,OAAA0pD,GAAA38C,UACAwsD,EAAA,CACA9H,EAAAgI,gBACAH,EAAAt5D,OAAA0pD,GAAA38C,SACA,SAAAusD,EAAA3vD,UACAipD,GAAA,GA+BA,IA7BA,IAAA8G,EAAA,CACAjgC,IAAAA,EACAs3B,OAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAV,YAAAA,EACAW,gBAAAA,EACAf,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAc,UAAAA,EACAE,iBAAAA,EACA1E,iBAAAA,EACAoC,gBAAAA,EACAwC,WAAAA,EACAzE,YAAAA,EACA0E,eAAAA,EACAE,eAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAa,mBAAAA,EACAZ,YAAAA,EACAC,aAAAA,EACAE,kBAAAA,EACAC,iBAAAA,EACAE,sBAAAA,EACAE,gBAAAA,GAEA9kD,EAAA,EAAAisD,EAAA5wD,MAAA2yB,KAAAz9B,EAAAquD,YAAA5+C,EAAAisD,EAAA/3D,OAAA8L,IAAA,KACAksD,EAAA9I,GADA6I,EAAAjsD,GACAgsD,GACAE,GACAN,EAAAhN,WAAA9qD,KAAAo4D,EAEA,CACA,GA9gCrC,SAAmB37D,GACf,OAAOA,EAAE2xD,WAAa3xD,EAAE4xD,YAC5B,CA4gCqCgK,CAAA57D,IAAAA,EAAAosD,WACA,QAAAyP,EAAA,EAAAC,EAAAhxD,MAAA2yB,KAAAz9B,EAAAosD,WAAAiC,YAAAwN,EAAAC,EAAAn4D,OAAAk4D,IAAA,KACAF,EAAA9I,GADAiJ,EAAAD,GACAJ,GACAE,IACAtP,GAAArsD,EAAAosD,cACAuP,EAAAI,UAAA,GACAV,EAAAhN,WAAA9qD,KAAAo4D,GAEA,CAEA,CAsFA,OArFA37D,EAAAmL,YACA+gD,GAAAlsD,EAAAmL,aACAkhD,GAAArsD,EAAAmL,cACAkwD,EAAAU,UAAA,GAEAV,EAAAt5D,OAAA0pD,GAAA38C,SACA,WAAAusD,EAAA3vD,SAxiBA,SAAAswD,EAAAtjC,EAAAw7B,GACA,IAAA+H,EAAAD,EAAAlgC,cACA,GAAAmgC,EAAA,CAGA,IACA/hC,EADAgiC,GAAA,EAEA,IACAhiC,EAAA+hC,EAAArjD,SAAAshB,UACA,CACA,MAAA/F,GACA,MACA,CACA,gBAAA+F,EAAA,CAcA,IAAAiiC,EAAA,cACA,GAAAF,EAAAvkC,SAAAC,OAAAwkC,GACAH,EAAAhD,MAAAmD,GACA,KAAAH,EAAAhD,IAEA,OADAxnC,WAAAkH,EAAA,GACAsjC,EAAAxjC,iBAAA,OAAAE,GAEAsjC,EAAAxjC,iBAAA,OAAAE,EARA,KAbA,CACA,IAAA0jC,EAAA5qC,YAAA,WACA0qC,IACAxjC,IACAwjC,GAAA,EAEA,GAAAhI,GACA8H,EAAAxjC,iBAAA,mBACAa,aAAA+iC,GACAF,GAAA,EACAxjC,GACA,GAEA,CAtBA,CA+BA,CAsgBA2jC,CAAAr8D,GAAA,WACA,IAAAs8D,EAAAt8D,EAAAi5D,gBACA,GAAAqD,GAAAtI,EAAA,CACA,IAAAuI,EAAA1J,GAAAyJ,EAAA,CACA9gC,IAAA8gC,EACAxJ,OAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAX,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAc,WAAA,EACAE,iBAAAA,EACA1E,iBAAAA,EACAoC,gBAAAA,EACAwC,WAAAA,EACAzE,YAAAA,EACA0E,eAAAA,EACAE,eAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAa,mBAAAA,EACAZ,YAAAA,EACAC,aAAAA,EACAE,kBAAAA,EACAC,iBAAAA,EACAE,sBAAAA,EACAE,gBAAAA,IAEAgI,GACAvI,EAAAh0D,EAAAu8D,EAEA,CACA,GAAArI,GAEAmH,EAAAt5D,OAAA0pD,GAAA38C,SACA,SAAAusD,EAAA3vD,SACK,eAAL2vD,EAAAz4B,WAAA0zB,KA7iBA,SAAAkG,EAAA9jC,EAAA+jC,GACA,IACAC,EADAR,GAAA,EAEA,IACAQ,EAAAF,EAAAhG,KACA,CACA,MAAAriC,GACA,MACA,CACA,IAAAuoC,EAAA,CAEA,IAAAN,EAAA5qC,YAAA,WACA0qC,IACAxjC,IACAwjC,GAAA,EAEA,GAAAO,GACAD,EAAAhkC,iBAAA,mBACAa,aAAA+iC,GACAF,GAAA,EACAxjC,GACA,GAXA,CAYA,CAwhBAikC,CAAA38D,GAAA,WACA,GAAAm0D,EAAA,CACA,IAAAyI,EAAA/J,GAAA7yD,EAAA,CACAw7B,IAAAA,EACAs3B,OAAAA,EACAC,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAX,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAc,WAAA,EACAE,iBAAAA,EACA1E,iBAAAA,EACAoC,gBAAAA,EACAwC,WAAAA,EACAzE,YAAAA,EACA0E,eAAAA,EACAE,eAAAA,EACAE,aAAAA,EACAE,aAAAA,EACAa,mBAAAA,EACAZ,YAAAA,EACAC,aAAAA,EACAE,kBAAAA,EACAC,iBAAAA,EACAE,sBAAAA,EACAE,gBAAAA,IAEAqI,GACAzI,EAAAn0D,EAAA48D,EAEA,CACA,GAAAvI,GAEAgH,CACA,CCznC9B,SAAAwB,GAAA9Y,GAAA,QAAAC,OAAA/9C,EAAArF,EAAAmjD,EAAA,GAAA3jD,EAAA,EAAAA,EAAA2jD,EAAApgD,QAAA,KAAAsZ,EAAA8mC,EAAA3jD,GAAA8W,EAAA6sC,EAAA3jD,EAAA,MAAAA,GAAA,sBAAA6c,GAAA,iBAAAA,IAAA,MAAArc,EAAA,kBAAAqc,GAAA,mBAAAA,GAAA+mC,EAAApjD,EAAAA,EAAAsW,EAAAtW,IAAA,SAAAqc,GAAA,iBAAAA,IAAArc,EAAAsW,GAAA,mBAAA4lD,EAAAjqC,EAAAhqB,UAAAlF,OAAA2pB,EAAA,IAAAxiB,MAAA+nB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAxF,EAAAwF,GAAAjqB,UAAAiqB,GAAA,OAAAgqC,EAAAl8D,GAAAqB,KAAA6G,MAAAg0D,EAAA,CAAA9Y,GAAAhlC,OAAAsO,GAAA,IAAA02B,OAAA/9C,EAAA,QAAArF,CACP,CACA,SAAS8tB,GAAG3sB,EAAMmV,EAAIzI,QAAA,IAAAA,IAAAA,EAASmK,UAC3B,IAAMrO,EAAU,CAAE0mC,SAAS,EAAM8rB,SAAS,GAE1C,OADAtuD,EAAO+pB,iBAAiBz2B,EAAMmV,EAAI3M,GAC3B,kBAAMkE,EAAOg/B,oBAAoB1rC,EAAMmV,EAAI3M,EAAQ,CAC9D,CACA,IAAMyyD,GAAiC,4NAKnCC,GAAU,CACV/wD,IAAK,CAAE,EACP0hD,MAAK,WAED,OADA5lD,QAAQmsB,MAAM6oC,KACN,CACX,EACD9O,QAAO,WAEH,OADAlmD,QAAQmsB,MAAM6oC,IACP,IACV,EACD5O,kBAAiB,WACbpmD,QAAQmsB,MAAM6oC,GACjB,EACD5kD,IAAG,WAEC,OADApQ,QAAQmsB,MAAM6oC,KACP,CACV,EACDv5D,MAAK,WACDuE,QAAQmsB,MAAM6oC,GACjB,GAYL,SAASE,GAAShvD,EAAMivD,EAAM5yD,QAAA,IAAAA,IAAAA,EAAU,CAAC,GACrC,IAAI+7C,EAAU,KACV8W,EAAW,EACf,OAAO,WAAmB,QAAA7iC,EAAA1xB,UAAAlF,OAAN2pB,EAAI,IAAAxiB,MAAAyvB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJnN,EAAImN,GAAA5xB,UAAA4xB,GACpB,IAAMjmB,EAAMD,KAAKC,MACZ4oD,IAAgC,IAApB7yD,EAAQ8yD,UACrBD,EAAW5oD,GAEf,IAAM8oD,EAAYH,GAAQ3oD,EAAM4oD,GAC1BznD,EAAUrT,KACZg7D,GAAa,GAAKA,EAAYH,GAC1B7W,IAwXhB,WACWiX,GAAkB,gBAAez0D,WAAC,EAADD,UAC5C,CAzXgB20D,CAAalX,GACbA,EAAU,MAEd8W,EAAW5oD,EACXtG,EAAKpF,MAAM6M,EAAS2X,IAEdg5B,IAAgC,IAArB/7C,EAAQkzD,WACzBnX,EAAUoX,IAAW,WACjBN,GAA+B,IAApB7yD,EAAQ8yD,QAAoB,EAAI9oD,KAAKC,MAChD8xC,EAAU,KACVp4C,EAAKpF,MAAM6M,EAAS2X,EACvB,GAAEgwC,GAEf,CACA,CACA,SAASK,GAAWlvD,EAAQlI,EAAK/E,EAAGo8D,EAAW3B,QAAI,IAAJA,IAAAA,EAAMx1D,QACjD,IAAMkH,EAAWsuD,EAAIn8D,OAAO4xB,yBAAyBjjB,EAAQlI,GAa7D,OAZA01D,EAAIn8D,OAAOa,eAAe8N,EAAQlI,EAAKq3D,EACjCp8D,EACA,CACEoF,IAAG,SAAChG,GAAO,IAAAqS,EAAA,KACPyqD,IAAW,WACPl8D,EAAEoF,IAAI3E,KAAKgR,EAAMrS,EACpB,GAAE,GACC+M,GAAYA,EAAS/G,KACrB+G,EAAS/G,IAAI3E,KAAKK,KAAM1B,EAE/B,IAEF,kBAAM+8D,GAAWlvD,EAAQlI,EAAKoH,GAAY,CAAC,GAAG,EAAK,CAC9D,CACA,SAASkwD,GAAMpwD,EAAQ1J,EAAM+5D,GACzB,IACI,KAAM/5D,KAAQ0J,GACV,OAAO,WACnB,EAEQ,IAAME,EAAWF,EAAO1J,GAClB6J,EAAUkwD,EAAYnwD,GAW5B,MAVuB,mBAAZC,IACPA,EAAQ7N,UAAY6N,EAAQ7N,WAAa,CAAC,EAC1CD,OAAOi+D,iBAAiBnwD,EAAS,CAC7BowD,mBAAoB,CAChBn9D,YAAY,EACZD,MAAO+M,MAInBF,EAAO1J,GAAQ6J,EACR,WACHH,EAAO1J,GAAQ4J,CAC3B,CACI,CACA,MAAMopB,GACF,OAAO,WACf,CACI,CACJ,CA/EsB,oBAAXtwB,QAA0BA,OAAOw3D,OAASx3D,OAAO+8C,UACxDyZ,GAAU,IAAIgB,MAAMhB,GAAS,CACzBz2D,IAAG,SAACiI,EAAQ3H,EAAMo3D,GAId,MAHa,QAATp3D,GACAkB,QAAQmsB,MAAM6oC,IAEXxZ,QAAQh9C,IAAIiI,EAAQ3H,EAAMo3D,EACpC,KAyET,IAAIC,GAAe5pD,KAAKC,IAIxB,SAAS4pD,GAAgBnC,GACrB,IAAMzgC,EAAMygC,EAAIrjD,SAChB,MAAO,CACHylD,KAAM7iC,EAAI8iC,iBACJ9iC,EAAI8iC,iBAAiB9F,gBACDvyD,IAApBg2D,EAAIsC,YACAtC,EAAIsC,YACJ1B,GAAA,CAAArhC,EAAK,0BAAAlrB,GAAA,OAAAA,EAAAkuD,eAAe,oBAAArS,GAAA,OAAAA,EAACqM,UAAW,KAClDqE,GAAA,CAAoBrhC,EAAK,0BAAAsyB,GAAA,OAAAA,EAAAhzB,IAAI,EAAE,0BAAAkzB,GAAA,OAAAA,EAAAuE,aAAa,4BAAAtE,GAAA,OAAAA,EAAEuK,UAAW,KACzDqE,GAAA,CAAoBrhC,EAAG,0BAAAs+B,GAAA,OAAAA,EAAEh/B,IAAI,4BAAAi/B,GAAA,OAAAA,EAAEvB,UAAW,KACtB,EACZpuC,IAAKoR,EAAI8iC,iBACH9iC,EAAI8iC,iBAAiB5F,eACDzyD,IAApBg2D,EAAIwC,YACAxC,EAAIwC,YACJ5B,GAAA,CAAArhC,EAAK,0BAAAw+B,GAAA,OAAAA,EAAAwE,eAAe,oBAAAE,GAAA,OAAAA,EAAChG,SAAU,KACjDmE,GAAA,CAAoBrhC,EAAK,0BAAAmjC,GAAA,OAAAA,EAAA7jC,IAAI,EAAE,0BAAA8jC,GAAA,OAAAA,EAAArM,aAAa,4BAAAsM,GAAA,OAAAA,EAAEnG,SAAU,KACxDmE,GAAA,CAAoBrhC,EAAG,0BAAAsjC,GAAA,OAAAA,EAAEhkC,IAAI,4BAAAikC,GAAA,OAAAA,EAAErG,SAAU,KACrB,EAEpB,CACA,SAASsG,KACL,OAAQv4D,OAAOw4D,aACVrmD,SAAS4lD,iBAAmB5lD,SAAS4lD,gBAAgBU,cACrDtmD,SAASkiB,MAAQliB,SAASkiB,KAAKokC,YACxC,CACA,SAASC,KACL,OAAQ14D,OAAO24D,YACVxmD,SAAS4lD,iBAAmB5lD,SAAS4lD,gBAAgBa,aACrDzmD,SAASkiB,MAAQliB,SAASkiB,KAAKukC,WACxC,CACA,SAASC,GAAqB3d,GAC1B,OAAKA,EAGMA,EAAKgQ,WAAahQ,EAAKiQ,aAC5BjQ,EACAA,EAAK4Q,cAJA,IAMf,CACA,SAASgN,GAAU5d,EAAMoR,EAAYC,EAAeC,EAAiBuM,GACjE,IAAK7d,EACD,OAAO,EAEX,IAAMp2C,EAAK+zD,GAAqB3d,GAChC,IAAKp2C,EACD,OAAO,EAEX,IAAMk0D,EAAmB5N,GAAqBkB,EAAYC,GAC1D,IAAKwM,EAAgB,CACjB,IAAME,EAAczM,GAAmB1nD,EAAGiQ,QAAQy3C,GAClD,OAAOwM,EAAiBl0D,KAAQm0D,CACpC,CACA,IAAMC,EAAgBnO,GAAgBjmD,EAAIk0D,GACtCG,GAAmB,EACvB,QAAID,EAAgB,KAGhB1M,IACA2M,EAAkBpO,GAAgBjmD,EAAIsmD,GAAqB,KAAMoB,KAEjE0M,GAAiB,GAAKC,EAAkB,GAGrCD,EAAgBC,EAC3B,CAIA,SAASC,GAAU7/D,EAAG8yD,GAClB,ODkCiB,IClCVA,EAAOlF,MAAM5tD,EACxB,CACA,SAAS8/D,GAAkBrxD,EAAQqkD,GAC/B,GAAI5G,GAAaz9C,GACb,OAAO,EAEX,IAAMvI,EAAK4sD,EAAOlF,MAAMn/C,GACxB,OAAKqkD,EAAO16C,IAAIlS,MAGZuI,EAAOtD,YACPsD,EAAOtD,WAAWwmD,WAAaljD,EAAO0mD,kBAGrC1mD,EAAOtD,YAGL20D,GAAkBrxD,EAAOtD,WAAY2nD,GAChD,CACA,SAASiN,GAAoBvvD,GACzB,OAAO1G,QAAQ0G,EAAMwvD,eACzB,CAkEA,SAASC,GAAmBjgE,EAAG8yD,GAC3B,OAAOhpD,QAAuB,WAAf9J,EAAEkgE,UAAyBpN,EAAO/E,QAAQ/tD,GAC7D,CACA,SAASmgE,GAAuBngE,EAAG8yD,GAC/B,OAAOhpD,QAAuB,SAAf9J,EAAEkgE,UACblgE,EAAE2xD,WAAa3xD,EAAE4xD,cACjB5xD,EAAEiM,cACwB,eAA1BjM,EAAEiM,aAAa,QACf6mD,EAAO/E,QAAQ/tD,GACvB,CAuBA,SAASogE,GAAcpgE,GACnB,OAAO8J,QAAO+yD,GAAC,CAAA78D,EAAC,0BAAAqgE,GAAA,OAAAA,EAAEjU,UAAA,IACtB,CAlMM,iBAAiB/+C,KAAKkH,KAAKC,MAAMpP,cACnC+4D,GAAe,WAAf,OAAqB,IAAI5pD,MAAOmJ,SAAS,GAiM7C,IA2BM4iD,GAAA,WACF,SAAAA,IACIh+D,KAAK4D,GAAK,EACV5D,KAAKi+D,WAAa,IAAIx+C,QACtBzf,KAAKk+D,WAAa,IAAIpxD,GAC1B,KAAAk0B,EAAAg9B,EAAAvgE,UA8BA,OA9BAujC,EACAsqB,MAAA,SAAMwI,GACF,OChTQ,OAFiBvI,EDkTlBvrD,KAAKi+D,WAAW/5D,IAAI4vD,IChTZvI,GDgT4B,EClT5C,IAA0BA,CDmT7B,EAAAvqB,EACAlrB,IAAA,SAAIg+C,GACA,OAAO9zD,KAAKi+D,WAAWnoD,IAAIg+C,EAC/B,EAAA9yB,EACAjrB,IAAA,SAAI+9C,EAAYlwD,GACZ,OAAI5D,KAAK8V,IAAIg+C,GACF9zD,KAAKsrD,MAAMwI,IAGlBqK,OADOx6D,IAAPC,EACQ5D,KAAK4D,KAGLA,EACZ5D,KAAKi+D,WAAW35D,IAAIwvD,EAAYqK,GAChCn+D,KAAKk+D,WAAW55D,IAAI65D,EAAOrK,GACpBqK,GARP,IAAIA,CASR,EAAAn9B,EACAo9B,SAAA,SAASx6D,GACL,OAAO5D,KAAKk+D,WAAWh6D,IAAIN,IAAO,IACtC,EAAAo9B,EACA7/B,MAAA,WACInB,KAAKi+D,WAAa,IAAIx+C,QACtBzf,KAAKk+D,WAAa,IAAIpxD,IACtB9M,KAAK4D,GAAK,CACd,EAAAo9B,EACAq9B,WAAA,WACI,OAAOr+D,KAAK4D,IAChB,EAAAo6D,CAAA,CAnCE,GAqCN,SAASM,GAAc5gE,GACnB,IAAI6gE,EAAa,KAIjB,OAHGhE,GAAC,CAAA78D,EAAC,kBAAA8gE,GAAA,OAAAA,EAACC,WAAW,0BAAAC,GAAA,OAAAA,GAAI,EAAE,0BAAAC,GAAA,OAAAA,EAAAtP,QAAA,MAAauP,KAAKC,wBACrCnhE,EAAE+gE,cAAchjC,OAChB8iC,EAAa7gE,EAAE+gE,cAAchjC,MAC1B8iC,CACX,CAeA,SAASO,GAAMphE,GACX,IAAMw7B,EAAMx7B,EAAEqhE,cACd,QAAK7lC,IAEEA,EAAIu6B,SAAS/1D,IAXxB,SAAyBA,GACrB,IAAMw7B,EAAMx7B,EAAEqhE,cACd,IAAK7lC,EACD,OAAO,EACX,IAAMqlC,EAXV,SAA2B7gE,GAGvB,IAFA,IACI6gE,EADAS,EAAiBthE,EAEb6gE,EAAaD,GAAcU,IAC/BA,EAAiBT,EACrB,OAAOS,CACX,CAKuBC,CAAkBvhE,GACrC,OAAOw7B,EAAIu6B,SAAS8K,EACxB,CAK8BW,CAAgBxhE,GAC9C,CACA,IAAMyhE,GAAwB,CAAC,EAC/B,SAASlE,GAAkBx5D,GACvB,IAAM29D,EAASD,GAAsB19D,GACrC,GAAI29D,EACA,OAAOA,EAEX,IAAM9oD,EAAWnS,OAAOmS,SACpB+oD,EAAOl7D,OAAO1C,GAClB,GAAI6U,GAA8C,mBAA3BA,EAAS6iB,cAC5B,IACI,IAAMC,EAAU9iB,EAAS6iB,cAAc,UACvCC,EAAQC,QAAS,EACjB/iB,EAASgjB,KAAKC,YAAYH,GAC1B,IAAMI,EAAgBJ,EAAQI,cAC1BA,GAAiBA,EAAc/3B,KAC/B49D,EACI7lC,EAAc/3B,IAEtB6U,EAASgjB,KAAKG,YAAYL,EAC9B,CACA,MAAO77B,GACP,CAEJ,OAAQ4hE,GAAsB19D,GAAQ49D,EAAK/4D,KAAKnC,OACpD,CAIA,SAASi3D,KACL,OAAOH,GAAkB,cAAaz0D,WAAC,EAADD,UAC1C,CE7aA,IAAI+4D,GAA6B,SAACC,GAQhC,OAPAA,EAAWA,EAA6B,iBAAI,GAAK,mBACjDA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAgC,oBAAI,GAAK,sBACpDA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAmB,OAAI,GAAK,SACvCA,EAAWA,EAAmB,OAAI,GAAK,SAChCA,CACT,CATiC,CAS9BD,IAAa,CAAC,GACbE,GAAqC,SAACC,GAkBxC,OAjBAA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAAqC,iBAAI,GAAK,mBACjEA,EAAmBA,EAA2B,OAAI,GAAK,SACvDA,EAAmBA,EAAmC,eAAI,GAAK,iBAC/DA,EAAmBA,EAA0B,MAAI,GAAK,QACtDA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAAqC,iBAAI,GAAK,mBACjEA,EAAmBA,EAAmC,eAAI,GAAK,iBAC/DA,EAAmBA,EAAmC,eAAI,GAAK,iBAC/DA,EAAmBA,EAAyB,KAAI,IAAM,OACtDA,EAAmBA,EAAwB,IAAI,IAAM,MACrDA,EAAmBA,EAAyB,KAAI,IAAM,OACtDA,EAAmBA,EAAqC,iBAAI,IAAM,mBAClEA,EAAmBA,EAA8B,UAAI,IAAM,YAC3DA,EAAmBA,EAAsC,kBAAI,IAAM,oBACnEA,EAAmBA,EAAkC,cAAI,IAAM,gBACxDA,CACT,CAnByC,CAmBtCD,IAAqB,CAAC,GACrBE,GAAqC,SAACC,GAYxC,OAXAA,EAAmBA,EAA4B,QAAI,GAAK,UACxDA,EAAmBA,EAA8B,UAAI,GAAK,YAC1DA,EAAmBA,EAA0B,MAAI,GAAK,QACtDA,EAAmBA,EAAgC,YAAI,GAAK,cAC5DA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAA0B,MAAI,GAAK,QACtDA,EAAmBA,EAAyB,KAAI,GAAK,OACrDA,EAAmBA,EAA+B,WAAI,GAAK,aAC3DA,EAAmBA,EAAuC,mBAAI,GAAK,qBACnEA,EAAmBA,EAA6B,SAAI,GAAK,WACzDA,EAAmBA,EAAgC,YAAI,IAAM,cACtDA,CACT,CAbyC,CAatCD,IAAqB,CAAC,GACrBE,GAAgC,SAACC,GAInC,OAHAA,EAAcA,EAAqB,MAAI,GAAK,QAC5CA,EAAcA,EAAmB,IAAI,GAAK,MAC1CA,EAAcA,EAAqB,MAAI,GAAK,QACrCA,CACT,CALoC,CAKjCD,IAAgB,CAAC,GCjDb,SAAAE,GAAAre,GAAA,QAAAC,OAAA/9C,EAAArF,EAAAmjD,EAAA,GAAA3jD,EAAA,EAAAA,EAAA2jD,EAAApgD,QAAA,KAAAsZ,EAAA8mC,EAAA3jD,GAAA8W,EAAA6sC,EAAA3jD,EAAA,MAAAA,GAAA,sBAAA6c,GAAA,iBAAAA,IAAA,MAAArc,EAAA,kBAAAqc,GAAA,mBAAAA,GAAA+mC,EAAApjD,EAAAA,EAAAsW,EAAAtW,IAAA,SAAAqc,GAAA,iBAAAA,IAAArc,EAAAsW,GAAA,mBAAAmrD,EAAAC,EAAAz5D,UAAAlF,OAAA2pB,EAAA,IAAAxiB,MAAAw3D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAj1C,EAAAi1C,GAAA15D,UAAA05D,GAAA,OAAAF,EAAAzhE,GAAAqB,KAAA6G,MAAAu5D,EAAA,CAAAre,GAAAhlC,OAAAsO,GAAA,IAAA02B,OAAA/9C,EAAA,QAAArF,CAEP,CACA,SAAS4hE,GAAmBxiE,GACxB,MAAO,SAAUA,CACrB,KCLIyiE,GDMEC,GAAA,WACF,SAAAA,IACIpgE,KAAKqB,OAAS,EACdrB,KAAKs5B,KAAO,KACZt5B,KAAKqgE,KAAO,IAChB,KAAAC,EAAAF,EAAA3iE,UA6EA,OA7EA6iE,EACAp8D,IAAA,SAAIq8D,GACA,GAAIA,GAAYvgE,KAAKqB,OACjB,MAAM,IAAIxC,MAAM,kCAGpB,IADA,IAAIgmC,EAAU7kC,KAAKs5B,KACVznB,EAAQ,EAAGA,EAAQ0uD,EAAU1uD,IAClCgzB,EAAUi7B,GAAA,CAAAj7B,EAAS,0BAAA72B,GAAA,OAAAA,EAAAlN,IAAA,KAAQ,KAE/B,OAAO+jC,CACX,EAAAy7B,EACAE,QAAA,SAAQ9iE,GACJ,IAAM2hD,EAAO,CACT/gD,MAAOZ,EACPo9D,SAAU,KACVh6D,KAAM,MAGV,GADApD,EAAE+iE,KAAOphB,EACL3hD,EAAE65D,iBAAmB2I,GAAmBxiE,EAAE65D,iBAAkB,CAC5D,IAAM1yB,EAAUnnC,EAAE65D,gBAAgBkJ,KAAK3/D,KACvCu+C,EAAKv+C,KAAO+jC,EACZwa,EAAKyb,SAAWp9D,EAAE65D,gBAAgBkJ,KAClC/iE,EAAE65D,gBAAgBkJ,KAAK3/D,KAAOu+C,EAC1Bxa,IACAA,EAAQi2B,SAAWzb,EAE3B,MACK,GAAI3hD,EAAE45D,aACP4I,GAAmBxiE,EAAE45D,cACrB55D,EAAE45D,YAAYmJ,KAAK3F,SAAU,CAC7B,IAAMj2B,EAAUnnC,EAAE45D,YAAYmJ,KAAK3F,SACnCzb,EAAKyb,SAAWj2B,EAChBwa,EAAKv+C,KAAOpD,EAAE45D,YAAYmJ,KAC1B/iE,EAAE45D,YAAYmJ,KAAK3F,SAAWzb,EAC1Bxa,IACAA,EAAQ/jC,KAAOu+C,EAEvB,MAEQr/C,KAAKs5B,OACLt5B,KAAKs5B,KAAKwhC,SAAWzb,GAEzBA,EAAKv+C,KAAOd,KAAKs5B,KACjBt5B,KAAKs5B,KAAO+lB,EAEE,OAAdA,EAAKv+C,OACLd,KAAKqgE,KAAOhhB,GAEhBr/C,KAAKqB,QACT,EAAAi/D,EACAI,WAAA,SAAWhjE,GACP,IAAMmnC,EAAUnnC,EAAE+iE,KACbzgE,KAAKs5B,OAGLuL,EAAQi2B,UAUTj2B,EAAQi2B,SAASh6D,KAAO+jC,EAAQ/jC,KAC5B+jC,EAAQ/jC,KACR+jC,EAAQ/jC,KAAKg6D,SAAWj2B,EAAQi2B,SAGhC96D,KAAKqgE,KAAOx7B,EAAQi2B,WAdxB96D,KAAKs5B,KAAOuL,EAAQ/jC,KAChBd,KAAKs5B,KACLt5B,KAAKs5B,KAAKwhC,SAAW,KAGrB96D,KAAKqgE,KAAO,MAYhB3iE,EAAE+iE,aACK/iE,EAAE+iE,KAEbzgE,KAAKqB,SACT,EAAA++D,CAAA,CAlFE,GAoFAO,GAAU,SAAC/8D,EAAIq6B,GAAQ,OAAMr6B,EAAA,IAAAq6B,CAAA,EACA2iC,GAAA,WACA,SAAAA,IAAA,IAAA5vD,EAAA,KACA,KAAA6vD,QAAA,EACA,KAAAC,QAAA,EACA,KAAAC,MAAA,GACA,KAAAzgC,WAAA,GACA,KAAA0gC,aAAA,IAAAvhD,QACA,KAAAwhD,QAAA,GACA,KAAAC,WAAA,GACA,KAAAC,SAAA,GACA,KAAAC,SAAA,IAAAC,IACA,KAAAC,SAAA,IAAAD,IACA,KAAAE,WAAA,IAAAF,IACA,KAAAG,iBAAA,SAAAC,GACAA,EAAAlhE,QAAAyQ,EAAA0wD,iBACA1wD,EAAAgQ,MACA,EACA,KAAAA,KAAA,WACA,IAAAhQ,EAAA6vD,SAAA7vD,EAAA8vD,OAAA,CA4EA,IAzEA,IAAAa,EAAA,GACAC,EAAA,IAAAP,IACAQ,EAAA,IAAAzB,GACA0B,EAAA,SAAApkE,GAGA,IAFA,IAAAqkE,EAAArkE,EACAskE,GJwGd,OIvGcA,GAEAA,GADAD,EAAAA,GAAAA,EAAAzK,cACAtmD,EAAAw/C,OAAAlF,MAAAyW,GAEA,OAAAC,CACA,EACAC,EAAA,SAAAvkE,GACA,GAAAA,EAAAmL,YAAAi2D,GAAAphE,GAAA,CAGA,IAAAugC,EAAA2rB,GAAAlsD,EAAAmL,YACAmI,EAAAw/C,OAAAlF,MAAAgT,GAAA5gE,IACAsT,EAAAw/C,OAAAlF,MAAA5tD,EAAAmL,YACAm5D,EAAAF,EAAApkE,GACA,QAAAugC,IAAA,IAAA+jC,EACA,OAAAH,EAAArB,QAAA9iE,GAEA,IAAAy6D,EAAA5H,GAAA7yD,EAAA,CACAw7B,IAAAloB,EAAAkoB,IACAs3B,OAAAx/C,EAAAw/C,OACAC,WAAAz/C,EAAAy/C,WACAC,cAAA1/C,EAAA0/C,cACAV,YAAAh/C,EAAAg/C,YACAW,gBAAA3/C,EAAA2/C,gBACAf,cAAA5+C,EAAA4+C,cACAE,gBAAA9+C,EAAA8+C,gBACAD,iBAAA7+C,EAAA6+C,iBACAE,mBAAA/+C,EAAA++C,mBACAc,WAAA,EACAsB,mBAAA,EACApB,iBAAA//C,EAAA+/C,iBACA1E,iBAAAr7C,EAAAq7C,iBACAoC,gBAAAz9C,EAAAy9C,gBACAwC,WAAAjgD,EAAAigD,WACAzE,YAAAx7C,EAAAw7C,YACA0E,eAAAlgD,EAAAkgD,eACAE,eAAApgD,EAAAogD,eACAI,aAAAxgD,EAAAwgD,aACAF,aAAAtgD,EAAAsgD,aACAG,YAAA,SAAAyQ,GACAvE,GAAAuE,EAAAlxD,EAAAw/C,SACAx/C,EAAAmxD,cAAAC,UAAAF,GAEArE,GAAAqE,EAAAlxD,EAAAw/C,SACAx/C,EAAAqxD,kBAAAC,iBAAAJ,GAEApE,GAAApgE,IACAsT,EAAAuxD,iBAAAC,cAAA9kE,EAAAosD,WAAA94C,EAAAkoB,IAEA,EACAw4B,aAAA,SAAA+Q,EAAAC,GACA1xD,EAAAmxD,cAAAQ,aAAAF,EAAAC,GACA1xD,EAAAuxD,iBAAAK,oBAAAH,EACA,EACA5Q,iBAAA,SAAAqI,EAAAwI,GACA1xD,EAAAqxD,kBAAAQ,kBAAA3I,EAAAwI,EACA,IAEAvK,IACAwJ,EAAA1gE,KAAA,CACAg9B,SAAAA,EACA+jC,OAAAA,EACA3iB,KAAA8Y,IAEAyJ,EAAA7rD,IAAAoiD,EAAAv0D,IAvDA,CAyDA,EACAoN,EAAAkwD,WAAA7/D,QACA2P,EAAAw/C,OAAA1E,kBAAA96C,EAAAkwD,WAAA4B,SAEA,QAAA3xB,EAAAC,EAAAvlB,GAAA7a,EAAAswD,YAAAnwB,EAAAC,KAAAtyC,MAAA,KAAApB,EAAAyzC,EAAA7yC,MACAykE,GAAA/xD,EAAAiwD,QAAAvjE,EAAAsT,EAAAw/C,UACAx/C,EAAAswD,SAAAxrD,IAAApY,EAAAmL,aAGAo5D,EAAAvkE,EACA,CACA,QAAA+zC,EAAAK,EAAAjmB,GAAA7a,EAAAowD,YAAA3vB,EAAAK,KAAAhzC,MAAA,KAAApB,EAAA+zC,EAAAnzC,MACA0kE,GAAAhyD,EAAAuwD,WAAA7jE,IACAqlE,GAAA/xD,EAAAiwD,QAAAvjE,EAAAsT,EAAAw/C,QAGAwS,GAAAhyD,EAAAswD,SAAA5jE,GACAukE,EAAAvkE,GAGAsT,EAAAuwD,WAAAxrD,IAAArY,GANAukE,EAAAvkE,EAQA,CAEA,IADA,IAAAulE,EAAA,KACApB,EAAAxgE,QAAA,CACA,IAAAg+C,EAAA,KACA,GAAA4jB,EAAA,CACA,IAAAhlC,EAAAjtB,EAAAw/C,OAAAlF,MAAA2X,EAAA3kE,MAAAuK,YACAm5D,EAAAF,EAAAmB,EAAA3kE,QACA,IAAA2/B,IAAA,IAAA+jC,IACA3iB,EAAA4jB,EAEA,CACA,IAAA5jB,EAEA,IADA,IAAA6jB,EAAArB,EAAAxB,KACA6C,GAAE,CACF,IAAAC,EAAAD,EAEA,GADAA,EAAAA,EAAApI,SACAqI,EAAA,CACA,IAAAllC,EAAAjtB,EAAAw/C,OAAAlF,MAAA6X,EAAA7kE,MAAAuK,YAEA,QADAi5D,EAAAqB,EAAA7kE,OAEA,SACA,QAAA2/B,EAAA,CACAohB,EAAA8jB,EACA,KACA,CAEA,IAAAC,EAAAD,EAAA7kE,MACA,GAAA8kE,EAAAv6D,YACAu6D,EAAAv6D,WAAAwmD,WACAuP,KAAAC,uBAAA,CACA,IAAAN,EAAA6E,EAAAv6D,WACA4yB,KAEA,QADAzqB,EAAAw/C,OAAAlF,MAAAiT,GACA,CACAlf,EAAA8jB,EACA,KACA,CACA,CAEA,CACA,CAEA,IAAA9jB,EAAA,CACA,KAAAwiB,EAAAvoC,MACAuoC,EAAAnB,WAAAmB,EAAAvoC,KAAAh7B,OAEA,KACA,CACA2kE,EAAA5jB,EAAAyb,SACA+G,EAAAnB,WAAArhB,EAAA/gD,OACA2jE,EAAA5iB,EAAA/gD,MACA,CACA,IAAAgzC,EAAA,CACAyvB,MAAA/vD,EAAA+vD,MACAn3D,KAAC,SAAD6iD,GAAA,OACA7oD,GAAAoN,EAAAw/C,OAAAlF,MAAAmB,EAAApN,MACA/gD,MAAAmuD,EAAAnuD,MACA,IACAmL,QAAA,SAAAgjD,GAAA,OAAAmV,EAAA9rD,IAAA22C,EAAA7oD,GAAA,IACA6F,QAAA,SAAAgjD,GAAA,OAAAz7C,EAAAw/C,OAAA16C,IAAA22C,EAAA7oD,GAAA,IACA08B,WAAAtvB,EAAAsvB,WACA12B,KAAA,SAAAy5D,GACA,IAAA/iC,EAAA+iC,EAAA/iC,WACA,oBAAAA,EAAAgjC,MAAA,CACA,IAAAC,EAAA/tD,KAAAC,UAAA4tD,EAAAG,WACAC,EAAAjuD,KAAAC,UAAA4tD,EAAAK,kBACAH,EAAAliE,OAAAi/B,EAAAgjC,MAAAjiE,SACAkiE,EAAAE,GAAA35D,MAAA,QAAAzI,SACAi/B,EAAAgjC,MAAAx5D,MAAA,QAAAzI,SACAi/B,EAAAgjC,MAAAD,EAAAG,UAGA,CACA,OACA5/D,GAAAoN,EAAAw/C,OAAAlF,MAAA+X,EAAAhkB,MACA/e,WAAAA,EAEA,IACA72B,QAAA,SAAA45D,GAAA,OAAAzB,EAAA9rD,IAAAutD,EAAAz/D,GAAA,IACA6F,QAAA,SAAA45D,GAAA,OAAAryD,EAAAw/C,OAAA16C,IAAAutD,EAAAz/D,GAAA,IACAq9D,QAAAjwD,EAAAiwD,QACAU,KAAAA,IAEArwB,EAAAyvB,MAAA1/D,QACAiwC,EAAAhR,WAAAj/B,QACAiwC,EAAA2vB,QAAA5/D,QACAiwC,EAAAqwB,KAAAtgE,UAGA2P,EAAA+vD,MAAA,GACA/vD,EAAAsvB,WAAA,GACAtvB,EAAAgwD,aAAA,IAAAvhD,QACAzO,EAAAiwD,QAAA,GACAjwD,EAAAowD,SAAA,IAAAC,IACArwD,EAAAswD,SAAA,IAAAD,IACArwD,EAAAuwD,WAAA,IAAAF,IACArwD,EAAAmwD,SAAA,GACAnwD,EAAA2yD,WAAAryB,GAhMA,CAiMA,EACA,KAAAowB,gBAAA,SAAAxgE,GACA,IAAAq8D,GAAAr8D,EAAAiL,OAAA6E,EAAAw/C,QAGA,OAAAtvD,EAAAzB,MACA,oBACA,IAAAnB,EAAA4C,EAAAiL,OAAAioD,YACA6I,GAAA/7D,EAAAiL,OAAA6E,EAAAy/C,WAAAz/C,EAAA0/C,cAAA1/C,EAAA2/C,iBAAA,IACAryD,IAAA4C,EAAA29C,UACA7tC,EAAA+vD,MAAA9/D,KAAA,CACA3C,MAAAqxD,GAAAzuD,EAAAiL,OAAA6E,EAAA4+C,cAAA5+C,EAAA6+C,iBAAA7+C,EAAA8+C,gBAAA9+C,EAAA++C,mBAAA/+C,EAAAg/C,cAAA1xD,EACA0S,EAAAigD,WACAjgD,EAAAigD,WAAA3yD,EAAA0+D,GAAA97D,EAAAiL,SACA7N,EAAAsP,QAAA,aACAtP,EACA+gD,KAAAn+C,EAAAiL,SAGA,MAEA,iBACA,IAAAA,EAAAjL,EAAAiL,OACAy3D,EAAA1iE,EAAA0iE,cACAtlE,EAAA4C,EAAAiL,OAAAxC,aAAAi6D,GACA,aAAAA,EAAA,CACA,IAAAnkE,EAAAmtD,GAAAzgD,GACA/C,EAAA+C,EAAA/C,QACA9K,EAAAwuD,GAAA3gD,EAAA/C,EAAA3J,GACA,IAAAokE,EAAAzX,GAAA,CACAC,iBAAAr7C,EAAAq7C,iBACAjjD,QAAAA,EACA3J,KAAAA,IAGAnB,EAAAguD,GAAA,CACAC,SAFAoD,GAAAzuD,EAAAiL,OAAA6E,EAAA4+C,cAAA5+C,EAAA6+C,iBAAA7+C,EAAA8+C,gBAAA9+C,EAAA++C,mBAAA8T,GAGAxnC,QAAAlwB,EACA7N,MAAAA,EACAkuD,YAAAx7C,EAAAw7C,aAEA,CACA,GAAAyQ,GAAA/7D,EAAAiL,OAAA6E,EAAAy/C,WAAAz/C,EAAA0/C,cAAA1/C,EAAA2/C,iBAAA,IACAryD,IAAA4C,EAAA29C,SACA,OAEA,IAAAxxC,EAAA2D,EAAAgwD,aAAA98D,IAAAhD,EAAAiL,QACA,cAAAA,EAAA/C,SACA,QAAAw6D,IACA5yD,EAAAihD,gBAAA3zD,GAAA,CACA,GAAA6N,EAAAwqD,gBAIA,OAHAiN,EAAA,QAKA,CAgBA,GAfAv2D,IACAA,EAAA,CACAgyC,KAAAn+C,EAAAiL,OACAm0B,WAAA,GACAkjC,UAAA,GACAE,iBAAA,IAEA1yD,EAAAsvB,WAAAr/B,KAAAoM,GACA2D,EAAAgwD,aAAA18D,IAAApD,EAAAiL,OAAAkB,IAEA,SAAAu2D,GACA,UAAAz3D,EAAA/C,SACA,cAAAlI,EAAA29C,UAAI,IAAJt1C,eACA4C,EAAAi1B,aAAA,+BAEA6tB,GAAA9iD,EAAA/C,QAAAw6D,KACAv2D,EAAAizB,WAAAsjC,GAAApV,GAAAx9C,EAAAkoB,IAAA3vB,GAAA4C,EAAA/C,SAAAG,GAAAq6D,GAAAtlE,EAAA6N,EAAA6E,EAAAy9C,iBACA,UAAAmV,GAAA,CACA,IAAA5yD,EAAA8yD,cACA,IACA9yD,EAAA8yD,cACAxtD,SAAAytD,eAAAC,oBACA,CACA,MAAAzmE,GACAyT,EAAA8yD,cAAA9yD,EAAAkoB,GACA,CAEA,IAAA+qC,EAAAjzD,EAAA8yD,cAAA3qC,cAAA,QACAj4B,EAAA29C,UACAolB,EAAA7iC,aAAA,QAAAlgC,EAAA29C,UAEA,QAAAqlB,EAAA,EAAAC,EAAA37D,MAAA2yB,KAAAhvB,EAAAm3D,OAAAY,EAAAC,EAAA9iE,OAAA6iE,IAAA,KAAAE,EAAAD,EAAAD,GACAG,EAAAl4D,EAAAm3D,MAAAgB,iBAAAF,GACAG,EAAAp4D,EAAAm3D,MAAAkB,oBAAAJ,GACAC,IAAAJ,EAAAX,MAAAgB,iBAAAF,IACAG,IAAAN,EAAAX,MAAAkB,oBAAAJ,GAEA/2D,EAAAm2D,UAAAY,GADA,KAAAG,EACAF,EAGA,CAAAA,EAAAE,GAIAl3D,EAAAq2D,iBAAAU,GAAA,CAAAC,EAAAE,EAEA,CACA,QAAAE,EAAA,EAAAC,EAAAl8D,MAAA2yB,KAAA8oC,EAAAX,OAAAmB,EAAAC,EAAArjE,OAAAojE,IAAA,KAAAL,EAAAM,EAAAD,GACA,KAAAt4D,EAAAm3D,MAAAgB,iBAAAF,KACA/2D,EAAAm2D,UAAAY,IAAA,EAEA,CACA,CAEA,MAEA,gBACA,GAAAnH,GAAA/7D,EAAAiL,OAAA6E,EAAAy/C,WAAAz/C,EAAA0/C,cAAA1/C,EAAA2/C,iBAAA,GACA,OAEAzvD,EAAAyjE,WAAApkE,SAAA,SAAA7C,GAAA,OAAAsT,EAAA4zD,QAAAlnE,EAAAwD,EAAAiL,OAAA,IACAjL,EAAA2jE,aAAAtkE,SAAA,SAAA7C,GACA,IAAAonE,EAAA9zD,EAAAw/C,OAAAlF,MAAA5tD,GACAugC,EAAA2rB,GAAA1oD,EAAAiL,QACA6E,EAAAw/C,OAAAlF,MAAApqD,EAAAiL,OAAAsvB,MACAzqB,EAAAw/C,OAAAlF,MAAApqD,EAAAiL,QACA8wD,GAAA/7D,EAAAiL,OAAA6E,EAAAy/C,WAAAz/C,EAAA0/C,cAAA1/C,EAAA2/C,iBAAA,IACA4M,GAAA7/D,EAAAsT,EAAAw/C,UHrPnC,SAAsB9yD,EAAG8yD,GACrB,OAA4B,IAArBA,EAAOlF,MAAM5tD,EACxB,CGoPmCqnE,CAAArnE,EAAAsT,EAAAw/C,UAGAx/C,EAAAowD,SAAAtrD,IAAApY,IACAsnE,GAAAh0D,EAAAowD,SAAA1jE,GACAsT,EAAAuwD,WAAAxrD,IAAArY,IAEAsT,EAAAowD,SAAAtrD,IAAA5U,EAAAiL,UAAA,IAAA24D,GACAtH,GAAAt8D,EAAAiL,OAAA6E,EAAAw/C,UACAx/C,EAAAswD,SAAAxrD,IAAApY,IACAsT,EAAAmwD,SAAAR,GAAAmE,EAAA7mC,IACA+mC,GAAAh0D,EAAAswD,SAAA5jE,GAGAsT,EAAAiwD,QAAAhgE,KAAA,CACAg9B,SAAAA,EACAr6B,GAAAkhE,EACArL,YAAA7P,GAAA1oD,EAAAiL,UAAA49C,GAAA7oD,EAAAiL,eAEAxI,KAGAqN,EAAAkwD,WAAAjgE,KAAAvD,GACA,IAIA,EACA,KAAAknE,QAAA,SAAAlnE,EAAAyO,GACA,IAAA6E,EAAAi0D,qBAAAC,cAAAxnE,EAAAsT,KAEAA,EAAAowD,SAAAtrD,IAAApY,KAAAsT,EAAAswD,SAAAxrD,IAAApY,GAAA,CAEA,GAAAsT,EAAAw/C,OAAAvE,QAAAvuD,GAAA,CACA,GAAA6/D,GAAA7/D,EAAAsT,EAAAw/C,QACA,OAEAx/C,EAAAswD,SAAAvrD,IAAArY,GACA,IAAAynE,EAAA,KACAh5D,GAAA6E,EAAAw/C,OAAAvE,QAAA9/C,KACAg5D,EAAAn0D,EAAAw/C,OAAAlF,MAAAn/C,IAEAg5D,IAAA,IAAAA,IACAn0D,EAAAmwD,SAAAR,GAAA3vD,EAAAw/C,OAAAlF,MAAA5tD,GAAAynE,KAAA,EAEA,MAEAn0D,EAAAowD,SAAArrD,IAAArY,GACAsT,EAAAuwD,WAAA,OAAA7jE,GAEAu/D,GAAAv/D,EAAAsT,EAAAy/C,WAAAz/C,EAAA0/C,cAAA1/C,EAAA2/C,iBAAA,KACAjzD,EAAAquD,WAAAxrD,SAAA,SAAA6kE,GAAA,OAAAp0D,EAAA4zD,QAAAQ,EAAA,IACAtH,GAAApgE,IACAA,EAAAosD,WAAAiC,WAAAxrD,SAAA,SAAA6kE,GACAp0D,EAAAi0D,qBAAAlvD,IAAAqvD,EAAAp0D,GACAA,EAAA4zD,QAAAQ,EAAA1nE,EACA,IAxBA,CA2BA,CACA,KAAA2nE,EAAAzE,EAAAnjE,UAyDA,OAzDA4nE,EACArxD,KAAA,SAAA/L,GAAA,IAAAiJ,EAAA,KACA,CACA,aACA,aACA,gBACA,kBACA,cACA,gBACA,kBACA,mBACA,qBACA,mBACA,mBACA,kBACA,aACA,cACA,kBACA,eACA,eACA,iBACA,iBACA,MACA,SACA,gBACA,oBACA,mBACA,gBACA,wBACA3Q,SAAA,SAAA0D,GACAiN,EAAAjN,GAAAgE,EAAAhE,EACA,GACA,EAAAohE,EACAC,OAAA,WACA,KAAAzE,QAAA,EACA,KAAA0E,cAAAD,QACA,EAAAD,EACAG,SAAA,WACA,KAAA3E,QAAA,EACA,KAAA0E,cAAAC,WACA,KAAAxkD,MACA,EAAAqkD,EACAI,SAAA,WACA,YAAA5E,MACA,EAAAwE,EACAK,KAAA,WACA,KAAA5E,QAAA,EACA,KAAAyE,cAAAG,MACA,EAAAL,EACAM,OAAA,WACA,KAAA7E,QAAA,EACA,KAAAyE,cAAAI,SACA,KAAA3kD,MACA,EAAAqkD,EACAlkE,MAAA,WACA,KAAAohE,iBAAAphE,QACA,KAAAokE,cAAApkE,OACA,EAAAy/D,CAAA,CAvcA,GAycA,SAAAoE,GAAAY,EAAAloE,GACAkoE,EAAA,OAAAloE,GACAA,EAAAquD,WAAAxrD,SAAA,SAAA6kE,GAAA,OAAAJ,GAAAY,EAAAR,EAAA,GACA,CACA,SAAArC,GAAA9B,EAAAvjE,EAAA8yD,GACA,WAAAyQ,EAAA5/D,QAEAwkE,GAAA5E,EAAAvjE,EAAA8yD,EACA,CACA,SAAAqV,GAAA5E,EAAAvjE,EAAA8yD,GACA,IAAA3nD,EAAAnL,EAAAmL,WACA,IAAAA,EACA,SAEA,IAAAo1B,EAAAuyB,EAAAlF,MAAAziD,GACA,QAAAo4D,EAAAp2D,MAAA,SAAAzN,GAAA,OAAAA,EAAAwG,KAAAq6B,CAAA,KAGA4nC,GAAA5E,EAAAp4D,EAAA2nD,EACA,CACA,SAAAwS,GAAA1+D,EAAA5G,GACA,WAAA4G,EAAA66C,MAEA2mB,GAAAxhE,EAAA5G,EACA,CACA,SAAAooE,GAAAxhE,EAAA5G,GACA,IAAAmL,EAAAnL,EAAAmL,WACA,QAAAA,MAGAvE,EAAAwR,IAAAjN,IAGAi9D,GAAAxhE,EAAAuE,GACA,CCrkBnC,SAASk9D,GAAqBx0D,GAC1B4uD,GAAe5uD,CACnB,CACA,SAASy0D,KACL7F,QAAex8D,CACnB,CACA,IAAMsiE,GAAkB,SAACl7B,GACrB,OAAKo1B,GAGiB,WAClB,IACI,OAAOp1B,EAAEvkC,WAAC,EAADD,UACb,CACA,MAAOsrB,GACH,GAAIsuC,KAAwC,IAAxBA,GAAatuC,GAC7B,OAAO,WACvB,EAEY,MAAMA,CACV,CACR,EAbekZ,CAef,ECxBA,SAAAm7B,GAAAzkB,GAAA,QAAAC,OAAA/9C,EAAArF,EAAAmjD,EAAA,GAAA3jD,EAAA,EAAAA,EAAA2jD,EAAApgD,QAAA,KAAAsZ,EAAA8mC,EAAA3jD,GAAA8W,EAAA6sC,EAAA3jD,EAAA,MAAAA,GAAA,sBAAA6c,GAAA,iBAAAA,IAAA,MAAArc,EAAA,kBAAAqc,GAAA,mBAAAA,GAAA+mC,EAAApjD,EAAAA,EAAAsW,EAAAtW,IAAA,SAAAqc,GAAA,iBAAAA,IAAArc,EAAAsW,GAAA,mBAAAuxD,EAAAC,EAAA7/D,UAAAlF,OAAA2pB,EAAA,IAAAxiB,MAAA49D,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAr7C,EAAAq7C,GAAA9/D,UAAA8/D,GAAA,OAAAF,EAAA7nE,GAAAqB,KAAA6G,MAAA2/D,EAAA,CAAAzkB,GAAAhlC,OAAAsO,GAAA,IAAA02B,OAAA/9C,EAAA,QAAArF,CAKA,CACA,IAAMgoE,GAAkB,GACxB,SAAS7vC,GAAevoB,GACpB,IACI,GAAI,iBAAkBA,EAAO,CACzB,IAAMwtB,EAAOxtB,EAAMq4D,eACnB,GAAI7qC,EAAKr6B,OACL,OAAOq6B,EAAK,EAEpB,MACK,GAAI,SAAUxtB,GAASA,EAAMwtB,KAAKr6B,OACnC,OAAO6M,EAAMwtB,KAAK,EAE1B,CACA,MAAMjH,GACN,CACA,OAAOvmB,GAASA,EAAM/B,MAC1B,CACA,SAASq6D,GAAqBv+D,EAASw+D,GACnC,IAAMC,EAAiB,IAAI9F,GAC3B0F,GAAgBrlE,KAAKylE,GACrBA,EAAe1yD,KAAK/L,GACpB,IAAI0+D,EAAuBxiE,OAAOyiE,kBAC9BziE,OAAO0iE,qBACLC,EAAkBZ,GAAA,CAAE/hE,OAAM,0BAAA6J,GAAA,OAAAA,EAAE+4D,IAAI,4BAAAld,GAAA,OAAAA,EAAEmd,UAAU,0BAAAxb,GAAA,OAAAA,EAAG,mBAAmB,IACpEsb,GACA3iE,OAAO2iE,KACPH,EAAuBxiE,OAAO2iE,IAElC,IAAMG,EAAW,IAAIN,EAAqBV,IAAgB,SAACxE,GACnDx5D,EAAQi/D,aAAgD,IAAlCj/D,EAAQi/D,WAAWzF,IAG7CiF,EAAelF,iBAAiBl7D,KAAKogE,EAArCA,CAAqDjF,EACxD,KASD,OARAwF,EAAS18B,QAAQk8B,EAAQ,CACrBnmC,YAAY,EACZ6mC,mBAAmB,EACnBC,eAAe,EACfC,uBAAuB,EACvBC,WAAW,EACXC,SAAS,IAENN,CACX,CAoJA,SAASO,GAAkBhsB,GAAmF,IAAhFisB,EAAQjsB,EAARisB,SAAUvuC,EAAGsiB,EAAHtiB,IAAKs3B,EAAMhV,EAANgV,OAAQC,EAAUjV,EAAViV,WAAYC,EAAalV,EAAbkV,cAAeC,EAAenV,EAAfmV,gBAAiB+W,EAAQlsB,EAARksB,SAwB7F,OAAOt7C,GAAG,SAvBa65C,GAAgBrL,GAASqL,IAAgB,SAACtnD,GAC7D,IAAMxS,EAASsqB,GAAe9X,GAC9B,GAAKxS,IACD8wD,GAAU9wD,EAAQskD,EAAYC,EAAeC,GAAiB,GADlE,CAIA,IAAM/sD,EAAK4sD,EAAOlF,MAAMn/C,GACxB,GAAIA,IAAW+sB,GAAOA,EAAIyuC,YAAa,CACnC,IAAMC,EAAgB9L,GAAgB5iC,EAAIyuC,aAC1CF,EAAS,CACL7jE,GAAAA,EACAxD,EAAGwnE,EAAc7L,KACjB57D,EAAGynE,EAAc9/C,KAEzB,MAEI2/C,EAAS,CACL7jE,GAAAA,EACAxD,EAAG+L,EAAO+pD,WACV/1D,EAAGgM,EAAOiqD,WAdlB,CAiBH,IAAGsR,EAASG,QAAU,MACa3uC,EACxC,CAkBA,IAAM4uC,GAAa,CAAC,QAAS,WAAY,UACnCC,GAAoB,IAAItoD,QAC9B,SAASuoD,GAAiBC,GAA0O,IAAvOC,EAAOD,EAAPC,QAAShvC,EAAG+uC,EAAH/uC,IAAKs3B,EAAMyX,EAANzX,OAAQC,EAAUwX,EAAVxX,WAAYC,EAAauX,EAAbvX,cAAeC,EAAesX,EAAftX,gBAAiBwX,EAAWF,EAAXE,YAAaC,EAAcH,EAAdG,eAAgB/b,EAAgB4b,EAAhB5b,iBAAkBG,EAAWyb,EAAXzb,YAAakb,EAAQO,EAARP,SAAUW,EAAoBJ,EAApBI,qBAAsBzY,EAAaqY,EAAbrY,cAAeE,EAAemY,EAAfnY,gBAAiBD,EAAgBoY,EAAhBpY,iBAAkBE,EAAkBkY,EAAlBlY,mBACzO,SAASuY,EAAap6D,GAClB,IAAI/B,EAASsqB,GAAevoB,GACtBq6D,EAAgBr6D,EAAMs6D,UACtBp/D,EAAU+C,GAAUmrB,GAAYnrB,EAAO/C,SAG7C,GAFgB,WAAZA,IACA+C,EAASA,EAAO8jD,eACf9jD,GACA/C,KACD0+D,GAAW77C,QAAQ7iB,GAAW,KAC9B6zD,GAAU9wD,EAAQskD,EAAYC,EAAeC,GAAiB,GAHlE,CAMA,IAAM1nD,EAAKkD,EACX,KAAIlD,EAAGwmD,UAAUgE,SAAS0U,IACrBC,GAAkBn/D,EAAGiQ,QAAQkvD,IADlC,CAIA,IAAM3oE,EAAOmtD,GAAazgD,GACtBsgD,EAAOK,GAAc7jD,EAAIG,EAAS3J,GAClCgpE,GAAY,EACV5E,EAAgBzX,GAAgB,CAClCC,iBAAAA,EACAjjD,QAAAA,EACA3J,KAAAA,IAEE60D,EAAY3E,GAAgBxjD,EAAQyjD,EAAeC,EAAkBC,EAAiBC,EAAoB8T,GACnG,UAATpkE,GAA6B,aAATA,IACpBgpE,EAAYt8D,EAAOkoD,SAEvB5H,EAAOH,GAAe,CAClBC,SAAU+H,EACVj4B,QAASlwB,EACT7N,MAAOmuD,EACPD,YAAAA,IAEJkc,EAAYv8D,EAAQk8D,EACd,CAAE5b,KAAAA,EAAMgc,UAAAA,EAAWF,cAAAA,GACnB,CAAE9b,KAAAA,EAAMgc,UAAAA,IACd,IAAMhnE,EAAO0K,EAAO1K,KACP,UAAThC,GAAoBgC,GAAQgnE,GAC5BvvC,EACKyvC,iBAAiB,6BAA6BlnE,EAAI,MAClDlB,SAAQ,SAAC0I,GACV,GAAIA,IAAOkD,EAAQ,CACf,IAAMsgD,EAAOH,GAAe,CACxBC,SAAU+H,EACVj4B,QAASpzB,EACT3K,MAAOwuD,GAAc7jD,EAAIG,EAAS3J,GAClC+sD,YAAAA,IAEJkc,EAAYz/D,EAAIo/D,EACV,CAAE5b,KAAAA,EAAMgc,WAAYA,EAAWF,eAAe,GAC9C,CAAE9b,KAAAA,EAAMgc,WAAYA,GAC9B,CAChB,GAtCQ,CALA,CA6CJ,CACA,SAASC,EAAYv8D,EAAQ9L,GACzB,IAAMuoE,EAAiBb,GAAkB7jE,IAAIiI,GAC7C,IAAKy8D,GACDA,EAAenc,OAASpsD,EAAEosD,MAC1Bmc,EAAeH,YAAcpoE,EAAEooE,UAAW,CAC1CV,GAAkBzjE,IAAI6H,EAAQ9L,GAC9B,IAAMuD,EAAK4sD,EAAOlF,MAAMn/C,GACxB85D,GAAgBiC,EAAhBjC,CAAwB7/D,EAAC,CAAC,EACnB/F,EAAC,CACJuD,GAAAA,IAER,CACJ,CACA,IACMmtB,GAD4B,SAAnB22C,EAASr9D,MAAmB,CAAC,UAAY,CAAC,QAAS,WAC1CT,KAAI,SAAC8mB,GAAS,OAAKtE,GAAGsE,EAAWu1C,GAAgBqC,GAAepvC,EAAI,IACtF2vC,EAAgB3vC,EAAIyuC,YAC1B,IAAKkB,EACD,OAAO,WACH93C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACvC,EAEI,IAAMoqE,EAAqBD,EAAcrrE,OAAO4xB,yBAAyBy5C,EAAcE,iBAAiBtrE,UAAW,SAC7GurE,EAAiB,CACnB,CAACH,EAAcE,iBAAiBtrE,UAAW,SAC3C,CAACorE,EAAcE,iBAAiBtrE,UAAW,WAC3C,CAACorE,EAAcI,kBAAkBxrE,UAAW,SAC5C,CAACorE,EAAcK,oBAAoBzrE,UAAW,SAC9C,CAACorE,EAAcI,kBAAkBxrE,UAAW,iBAC5C,CAACorE,EAAcM,kBAAkB1rE,UAAW,aAYhD,OAVIqrE,GAAsBA,EAAmBxkE,KACzCysB,EAAS9vB,KAAIuF,MAAbuqB,EAAiBi4C,EAAep/D,KAAI,SAAC3J,GAAC,OAAKo7D,GAAWp7D,EAAE,GAAIA,EAAE,GAAI,CAC9DqE,IAAG,WACC2hE,GAAgBqC,EAAhBrC,CAA8B,CAC1B95D,OAAQnM,KACRwoE,WAAW,GAElB,IACF,EAAOK,EAAc,KAErB5C,IAAgB,WACnBl1C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACnC,GACA,CACA,SAAS0qE,GAA0B/e,GAsB/B,OApBA,SAAiBgf,EAAW3a,GACxB,GAAK4a,GAAiB,oBAClBD,EAAUE,sBAAsBC,iBAC/BF,GAAiB,iBACdD,EAAUE,sBAAsBE,cACnCH,GAAiB,oBACdD,EAAUE,sBAAsBG,iBACnCJ,GAAiB,qBACdD,EAAUE,sBAAsBI,iBAAmB,CACvD,IACM93D,EADQrJ,MAAM2yB,KAAKkuC,EAAUE,WAAWrf,UAC1Bj+B,QAAQo9C,GAC5B3a,EAAIzsD,QAAQ4P,EAChB,MACK,GAAIw3D,EAAUO,iBAAkB,CACjC,IACM/3D,EADQrJ,MAAM2yB,KAAKkuC,EAAUO,iBAAiB1f,UAChCj+B,QAAQo9C,GAC5B3a,EAAIzsD,QAAQ4P,EAChB,CACA,OAAO68C,CACX,CACOmb,CAAQxf,EArBG,GAsBtB,CACA,SAASyf,GAAgB5V,EAAO1D,EAAQuZ,GACpC,IAAInmE,EAAIomE,EACR,OAAK9V,GAEDA,EAAM+V,UACNrmE,EAAK4sD,EAAOlF,MAAM4I,EAAM+V,WAExBD,EAAUD,EAAYze,MAAM4I,GACzB,CACH8V,QAAAA,EACApmE,GAAAA,IAPO,CAAC,CAShB,CA+IA,SAASsmE,GAA6BC,EAAiC1uC,GAAM,IACrE2uC,EADiC5Z,EAAM2Z,EAAN3Z,OAAQ6R,EAAiB8H,EAAjB9H,kBAGzC+H,EADkB,cAAlB3uC,EAAKmiC,SACIpN,EAAOlF,MAAM7vB,GAEb+0B,EAAOlF,MAAM7vB,EAAKA,MAC/B,IAAM4uC,EAAgC,cAAlB5uC,EAAKmiC,SACnBsI,GAAA,CAAAzqC,EAAK,kBAAAiwB,GAAA,OAAAA,EAAAic,WAAW,EAAE,0BAAAhc,GAAA,OAAAA,EAAAoH,QAAA,IAC5BmT,GAAA,CAAUzqC,EAAI,kBAAA+7B,GAAA,OAAAA,EAACuH,aAAa,EAAE,0BAAAtH,GAAA,OAAAA,EAAAkQ,WAAW,4BAAAjQ,GAAA,OAAAA,EAAE4S,UAAU,IAC3CC,EAA6BrE,GAAA,CAAAmE,EAAa,0BAAAjO,GAAA,OAAAA,EAAA3+D,SAAA,IAC1CD,OAAO4xB,yBAAwB82C,GAAC,CAAAmE,EAAW,0BAAAhO,GAAA,OAAAA,EAAE5+D,SAAS,IAAE,2BACxDkG,EACN,OAAe,OAAXymE,IACY,IAAZA,GACCC,GACAE,GAGL/sE,OAAOa,eAAeo9B,EAAM,qBAAsB,CAC9Cj9B,aAAc+rE,EAA2B/rE,aACzCD,WAAYgsE,EAA2BhsE,WACvC2F,IAAG,WAAG,IAAAmN,EAAA,KACF,OAAA60D,GAAA,CAAOqE,EAA2B,kBAAAjO,GAAA,OAAAA,EAAAp4D,GAAG,4BAAAq4D,GAAA,OAAAA,EAAE58D,IAAI,kBAAA68D,GAAA,OAAAA,EAACnrD,EAAK,GACpD,EACD/M,IAAG,SAACkmE,GAAQ,IAAA1iC,EAAA,KACFv3B,EAAS21D,GAAA,CAAAqE,EAA2B,kBAAA9N,GAAA,OAAAA,EAAAn4D,GAAG,EAAE,0BAAAmmE,GAAA,OAAAA,EAAA9qE,IAAI,EAAC,gBAAA+qE,GAAA,OAAAA,EAAA5iC,EAAM0iC,EAAO,IACjE,GAAe,OAAXJ,IAA+B,IAAZA,EACnB,IACI/H,EAAkBsI,iBAAiBH,EAAQJ,EAC/C,CACA,MAAO7sE,GACP,CAEJ,OAAOgT,CACV,IAEE01D,IAAgB,WACnBzoE,OAAOa,eAAeo9B,EAAM,qBAAsB,CAC9Cj9B,aAAc+rE,EAA2B/rE,aACzCD,WAAYgsE,EAA2BhsE,WACvC2F,IAAKqmE,EAA2BrmE,IAChCI,IAAKimE,EAA2BjmE,KAE5C,KA3Be,WACf,CA2BA,CAyKA,SAASsmE,GAAchtE,EAAGulD,QAAA,IAAAA,IAAAA,EAAS,CAAC,GAChC,IAAM0lB,EAAgBjrE,EAAEs7B,IAAIyuC,YAC5B,IAAKkB,EACD,OAAO,WACf,EAuBI,IArBA,IAvgB+BgC,EAAGC,EAAsBnR,EACpDoR,EACAC,EA0hB0BC,EArBxBC,EAAmB1E,GAAqB5oE,EAAGA,EAAEs7B,KAC7CiyC,EArrBV,SAAyB1zD,GAA0C,IAAvC2zD,EAAW3zD,EAAX2zD,YAAa1D,EAAQjwD,EAARiwD,SAAUxuC,EAAGzhB,EAAHyhB,IAAKs3B,EAAM/4C,EAAN+4C,OACpD,IAA2B,IAAvBkX,EAAS2D,UACT,OAAO,WACf,EAEI,IAKIC,EALE74D,EAA0C,iBAAvBi1D,EAAS2D,UAAyB3D,EAAS2D,UAAY,GAC1EE,EAA0D,iBAA/B7D,EAAS8D,kBACpC9D,EAAS8D,kBACT,IACFC,EAAY,GAEVC,EAAY9Q,GAASqL,IAAgB,SAAC96D,GACxC,IAAMwgE,EAAc15D,KAAKC,MAAQo5D,EACjCF,EAAYK,EAAU7hE,KAAI,SAAC3J,GAEvB,OADAA,EAAE2rE,YAAcD,EACT1rE,CACnB,IAAYkL,GACJsgE,EAAY,GACZH,EAAe,IACvB,IAAQC,GACEM,EAAiB5F,GAAgBrL,GAASqL,IAAgB,SAACtnD,GAC7D,IAAMxS,EAASsqB,GAAe9X,GAC9B21B,EAA6BmpB,GAAoB9+C,GAC3CA,EAAI++C,eAAe,GACnB/+C,EAFEmtD,EAAOx3B,EAAPw3B,QAASC,EAAAz3B,EAAAy3B,QAGZT,IACDA,EAAezP,MAEnB4P,EAAUxqE,KAAK,CACXb,EAAG0rE,EACH3rE,EAAG4rE,EACHnoE,GAAI4sD,EAAOlF,MAAMn/C,GACjBy/D,WAAY/P,KAAiByP,IAEjCI,EAA+B,oBAAdM,WAA6BrtD,aAAeqtD,UACvDxM,GAAkByM,KAClBttD,aAAeutD,WACX1M,GAAkB2M,UAClB3M,GAAkB4M,UAC/B,IAAG35D,EAAW,CACX0oD,UAAU,KAERpqC,EAAW,CACb3E,GAAG,YAAay/C,EAAgB3yC,GAChC9M,GAAG,YAAay/C,EAAgB3yC,GAChC9M,GAAG,OAAQy/C,EAAgB3yC,IAE/B,OAAO+sC,IAAgB,WACnBl1C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACnC,GACA,CAmoB6B2tE,CAAiBzuE,GACpC0uE,EAnoBV,SAAqC53B,GAA6F,IAA1F63B,EAAkB73B,EAAlB63B,mBAAoBrzC,EAAGwb,EAAHxb,IAAKs3B,EAAM9b,EAAN8b,OAAQC,EAAU/b,EAAV+b,WAAYC,EAAahc,EAAbgc,cAAeC,EAAejc,EAAfic,gBAAiB+W,EAAQhzB,EAARgzB,SACjH,IAAkC,IAA9BA,EAAS8E,iBACT,OAAO,WACf,EAEI,IAAMC,GAA2C,IAA9B/E,EAAS8E,uBACM7oE,IAA9B+jE,EAAS8E,iBACP,CAAC,EACD9E,EAAS8E,iBACTz7C,EAAW,GACb27C,EAAqB,KAkFzB,OApBAlvE,OAAOwE,KAAK09D,IACPj2D,QAAO,SAACxF,GAAG,OAAKqkC,OAAOlnC,MAAMknC,OAAOrkC,MACpCA,EAAIm1C,SAAS,eACM,IAApBqzB,EAAWxoE,EAAc,IACxB1D,SAAQ,SAACosE,GACV,IAAIj8C,EAAYnnB,GAAYojE,GACtBp7D,EAnES,SAACo7D,GAChB,OAAO,SAACz+D,GACJ,IAAM/B,EAASsqB,GAAevoB,GAC9B,IAAI+uD,GAAU9wD,EAAQskD,EAAYC,EAAeC,GAAiB,GAAlE,CAGA,IAAIic,EAAc,KACdC,EAAeF,EACnB,GAAI,gBAAiBz+D,EAAO,CACxB,OAAQA,EAAM0+D,aACV,IAAK,QACDA,EAAchN,GAAakN,MAC3B,MACJ,IAAK,QACDF,EAAchN,GAAamN,MAC3B,MACJ,IAAK,MACDH,EAAchN,GAAaoN,IAG/BJ,IAAgBhN,GAAamN,MACzBrN,GAAkBiN,KAAcjN,GAAkBuN,UAClDJ,EAAe,aAEVnN,GAAkBiN,KAAcjN,GAAkBwN,UACvDL,EAAe,YAGEjN,GAAaoN,GAC1C,MACSvP,GAAoBvvD,KACzB0+D,EAAchN,GAAamN,OAEX,OAAhBH,GACAF,EAAqBE,GAChBC,EAAan2D,WAAW,UACzBk2D,IAAgBhN,GAAamN,OAC5BF,EAAan2D,WAAW,UACrBk2D,IAAgBhN,GAAakN,SACjCF,EAAc,OAGblN,GAAkBiN,KAAcjN,GAAkByN,QACvDP,EAAcF,EACdA,EAAqB,MAEzB,IAAMnvE,EAAIkgE,GAAoBvvD,GAASA,EAAMwvD,eAAe,GAAKxvD,EACjE,GAAK3Q,EAAL,CAGA,IAAMqG,EAAK4sD,EAAOlF,MAAMn/C,GAChB2/D,EAAqBvuE,EAArBuuE,QAASC,EAAYxuE,EAAZwuE,QACjB9F,GAAgBsG,EAAhBtG,CAAmC7/D,EAAC,CAChC3G,KAAMigE,GAAkBmN,GACxBjpE,GAAAA,EACAxD,EAAG0rE,EACH3rE,EAAG4rE,GACiB,OAAhBa,GAAwB,CAAEA,YAAAA,IARlC,CA5CA,CAsDZ,CACA,CAOwBQ,CAAWT,GAC3B,GAAIxoE,OAAOkpE,aACP,OAAQ3N,GAAkBiN,IACtB,KAAKjN,GAAkBuN,UACvB,KAAKvN,GAAkBwN,QACnBx8C,EAAYA,EAAU9iB,QAAQ,QAAS,WACvC,MACJ,KAAK8xD,GAAkB4N,WACvB,KAAK5N,GAAkB6N,SACnB,OAGZx8C,EAAS9vB,KAAKmrB,GAAGsE,EAAWnf,EAAS2nB,GAC7C,IACW+sC,IAAgB,WACnBl1C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACnC,GACA,CAoiBoC8uE,CAA6B5vE,GACvD6vE,EAAgBjG,GAAmB5pE,GACnC8vE,GA3gByB7C,EA2gB6B,CACxDlR,IAAKkP,GA5gByBiC,EA2gBuBltE,EA3gBvBktE,iBAAsBnR,EAAIkR,EAAJlR,IACpDoR,GAAS,EACTC,GAAS,EAaN5+C,GAAG,SAZc65C,GAAgBrL,GAASqL,IAAgB,WAC7D,IAAM59D,EAASq0D,KACT/H,EAAQkI,KACVkO,IAAU1iE,GAAU2iE,IAAUrW,IAC9BmW,EAAiB,CACbnW,MAAOrsB,OAAOqsB,GACdtsD,OAAQigC,OAAOjgC,KAEnB0iE,EAAQ1iE,EACR2iE,EAAQrW,EAEpB,IAAQ,MACiCgF,IA+f/BgU,EAAe3F,GAAkBpqE,GACjCgwE,EApIV,SAAqCC,GAA6F,IAA1FC,EAAkBD,EAAlBC,mBAAoBrd,EAAUod,EAAVpd,WAAYC,EAAamd,EAAbnd,cAAeC,EAAekd,EAAfld,gBAAiBH,EAAMqd,EAANrd,OAAQkX,EAAQmG,EAARnG,SAAUxuC,EAAG20C,EAAH30C,IAChH3nB,EAAU00D,IAAgB,SAACxmE,GAAI,OAAKm7D,GAASqL,IAAgB,SAAC/3D,GAChE,IAAM/B,EAASsqB,GAAevoB,GAC9B,GAAK/B,IACD8wD,GAAU9wD,EAAQskD,EAAYC,EAAeC,GAAiB,GADlE,CAIA,IAAQsF,EAA6C9pD,EAA7C8pD,YAAa8X,EAAgC5hE,EAAhC4hE,OAAQC,EAAwB7hE,EAAxB6hE,MAAOC,EAAiB9hE,EAAjB8hE,aACpCH,EAAmB,CACfruE,KAAAA,EACAmE,GAAI4sD,EAAOlF,MAAMn/C,GACjB8pD,YAAAA,EACA8X,OAAAA,EACAC,MAAAA,EACAC,aAAAA,GARJ,CAUH,IAAGvG,EAAS7c,OAAS,IAAI,IACpB95B,EAAW,CACb3E,GAAG,OAAQ7a,EAAQ,GAAI2nB,GACvB9M,GAAG,QAAS7a,EAAQ,GAAI2nB,GACxB9M,GAAG,SAAU7a,EAAQ,GAAI2nB,GACzB9M,GAAG,eAAgB7a,EAAQ,GAAI2nB,GAC/B9M,GAAG,aAAc7a,EAAQ,GAAI2nB,IAEjC,OAAO+sC,IAAgB,WACnBl1C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACnC,GACA,CAyGoCwvE,CAA6BtwE,GACvDuwE,EAlXV,SAA+BC,EAAAC,GAA2D,IAAxDC,EAAgBF,EAAhBE,iBAAkB9d,EAAM4d,EAAN5d,OAAQ6R,EAAA+L,EAAA/L,kBAAuB1I,EAAA0U,EAAA1U,IAC/E,IAAKA,EAAI4U,gBAAkB5U,EAAI4U,cAAc9wE,UACzC,OAAO,WACf,EAEI,IAAM+wE,EAAa7U,EAAI4U,cAAc9wE,UAAU+wE,WAC/C7U,EAAI4U,cAAc9wE,UAAU+wE,WAAa,IAAI7S,MAAM6S,EAAY,CAC3DhoE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOrkB,EAAeqkB,EAAa,GAAtB78D,EAAS68D,EAAa,GACnCC,EAAwB7E,GAAgB2E,EAASje,EAAQ6R,EAAkB0H,aAAnEnmE,EAAE+qE,EAAF/qE,GAAIomE,EAAA2E,EAAA3E,QAQZ,OAPKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACArI,KAAM,CAAC,CAAEtX,KAAAA,EAAMx4C,MAAAA,MAGhB1F,EAAO3F,MAAMioE,EAASC,EACzC,MAEI,IAeI9gE,EAkBAghE,EAjCEC,EAAalV,EAAI4U,cAAc9wE,UAAUoxE,WAC/ClV,EAAI4U,cAAc9wE,UAAUoxE,WAAa,IAAIlT,MAAMkT,EAAY,CAC3DroE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAO78D,EAAS68D,EAAa,GAC7BI,EAAwBhF,GAAgB2E,EAASje,EAAQ6R,EAAkB0H,aAAnEnmE,EAAEkrE,EAAFlrE,GAAIomE,EAAA8E,EAAA9E,QAQZ,OAPKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACA/I,QAAS,CAAC,CAAEpvD,MAAAA,MAGb1F,EAAO3F,MAAMioE,EAASC,EACzC,MAGQ/U,EAAI4U,cAAc9wE,UAAUmQ,UAC5BA,EAAU+rD,EAAI4U,cAAc9wE,UAAUmQ,QACtC+rD,EAAI4U,cAAc9wE,UAAUmQ,QAAU,IAAI+tD,MAAM/tD,EAAS,CACrDpH,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOjiB,EAAQiiB,EAAa,GAC5BK,EAAwBjF,GAAgB2E,EAASje,EAAQ6R,EAAkB0H,aAAnEnmE,EAAEmrE,EAAFnrE,GAAIomE,EAAA+E,EAAA/E,QAQZ,OAPKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACAp8D,QAAS6+C,IAGVtgD,EAAO3F,MAAMioE,EAASC,EAC7C,OAIQ/U,EAAI4U,cAAc9wE,UAAUmxE,cAC5BA,EAAcjV,EAAI4U,cAAc9wE,UAAUmxE,YAC1CjV,EAAI4U,cAAc9wE,UAAUmxE,YAAc,IAAIjT,MAAMiT,EAAa,CAC7DpoE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOjiB,EAAQiiB,EAAa,GAC5BM,EAAwBlF,GAAgB2E,EAASje,EAAQ6R,EAAkB0H,aAAnEnmE,EAAEorE,EAAFprE,GAAIomE,EAAAgF,EAAAhF,QAQZ,OAPKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACA4E,YAAaniB,IAGdtgD,EAAO3F,MAAMioE,EAASC,EAC7C,OAGI,IAAMO,EAA8B,CAAC,EACjCC,GAA4B,mBAC5BD,EAA4BzF,gBAAkB7P,EAAI6P,iBAG9C0F,GAA4B,kBAC5BD,EAA4BxF,aAAe9P,EAAI8P,cAE/CyF,GAA4B,sBAC5BD,EAA4BtF,iBAAmBhQ,EAAIgQ,kBAEnDuF,GAA4B,qBAC5BD,EAA4BvF,gBAAkB/P,EAAI+P,kBAG1D,IAAMyF,EAAsB,CAAC,EA6C7B,OA5CA3xE,OAAO8Z,QAAQ23D,GAA6B1uE,SAAQ,SAAA6uE,GAAqB,IAAnBC,EAAOD,EAAA,GAAE3vE,EAAI2vE,EAAA,GAC/DD,EAAoBE,GAAW,CAC3Bb,WAAY/uE,EAAKhC,UAAU+wE,WAC3BK,WAAYpvE,EAAKhC,UAAUoxE,YAE/BpvE,EAAKhC,UAAU+wE,WAAa,IAAI7S,MAAMwT,EAAoBE,GAASb,WAAY,CAC3EhoE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOrkB,EAAeqkB,EAAa,GAAtB78D,EAAS68D,EAAa,GACnCY,EAAwBxF,GAAgB2E,EAAQ7E,iBAAkBpZ,EAAQ6R,EAAkB0H,aAApFnmE,EAAE0rE,EAAF1rE,GAAIomE,EAAQsF,EAARtF,QAgBZ,OAfKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACArI,KAAM,CACF,CACItX,KAAAA,EACAx4C,MAAO,GAAF6K,OACE0sD,GAA0BqF,GAAQ,CACrC58D,GAAS,QAMtB1F,EAAO3F,MAAMioE,EAASC,EAC7C,MAEQjvE,EAAKhC,UAAUoxE,WAAa,IAAIlT,MAAMwT,EAAoBE,GAASR,WAAY,CAC3EroE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAO78D,EAAS68D,EAAa,GAC7Ba,EAAwBzF,GAAgB2E,EAAQ7E,iBAAkBpZ,EAAQ6R,EAAkB0H,aAApFnmE,EAAE2rE,EAAF3rE,GAAIomE,EAAQuF,EAARvF,QAUZ,OATKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjCsE,EAAiB,CACb1qE,GAAAA,EACAomE,QAAAA,EACA/I,QAAS,CACL,CAAEpvD,MAAO,GAAF6K,OAAM0sD,GAA0BqF,GAAU,CAAA58D,QAItD1F,EAAO3F,MAAMioE,EAASC,EAC7C,KAEA,IACWzI,IAAgB,WACnBtM,EAAI4U,cAAc9wE,UAAU+wE,WAAaA,EACzC7U,EAAI4U,cAAc9wE,UAAUoxE,WAAaA,EACzCjhE,IAAY+rD,EAAI4U,cAAc9wE,UAAUmQ,QAAUA,GAClDghE,IAAgBjV,EAAI4U,cAAc9wE,UAAUmxE,YAAcA,GAC1DpxE,OAAO8Z,QAAQ23D,GAA6B1uE,SAAQ,SAAAivE,GAAqB,IAAnBH,EAAOG,EAAA,GAAE/vE,EAAI+vE,EAAA,GAC/D/vE,EAAKhC,UAAU+wE,WAAaW,EAAoBE,GAASb,WACzD/uE,EAAKhC,UAAUoxE,WAAaM,EAAoBE,GAASR,UACrE,GACA,GACA,CAqO+BY,CAAuB7xE,EAAG,CAAE+7D,IAAKkP,IACtD6G,EAA4BxF,GAA8BtsE,EAAGA,EAAEs7B,KAC/Dy2C,EAzLV,SAAqCC,EAAAC,GAAmF,IAAhFC,EAAkBF,EAAlBE,mBAAoBtf,EAAMof,EAANpf,OAAQuf,EAAmBH,EAAnBG,oBAAqB1N,EAAiBuN,EAAjBvN,kBAAwB1I,EAAAkW,EAAAlW,IACvGqW,EAAcrW,EAAIsW,oBAAoBxyE,UAAUuyE,YACtDrW,EAAIsW,oBAAoBxyE,UAAUuyE,YAAc,IAAIrU,MAAMqU,EAAa,CACnExpE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOhiE,EAA6BgiE,EAAa,GAAhCpwE,EAAmBowE,EAAa,GAAzBwB,EAAYxB,EAAa,GACjD,GAAIqB,EAAoBj6D,IAAIpJ,GACxB,OAAOsjE,EAAYxpE,MAAMioE,EAAS,CAAC/hE,EAAUpO,EAAO4xE,IAExD,IAAAC,EAAwBrG,GAAgB5D,GAAA,CAAAuI,EAAO,kBAAA2B,GAAA,OAAAA,EAAC7G,UAAU,4BAAAxL,GAAA,OAAAA,EAAE6L,gBAAA,IAAkBpZ,EAAQ6R,EAAkB0H,aAAhGnmE,EAAEusE,EAAFvsE,GAAIomE,EAAAmG,EAAAnG,QAaZ,OAZKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjC8F,EAAmB,CACflsE,GAAAA,EACAomE,QAAAA,EACA1lE,IAAK,CACDoI,SAAAA,EACApO,MAAAA,EACA4xE,SAAAA,GAEJr+D,MAAOu3D,GAA0BqF,EAAQlF,cAG1Cp9D,EAAO3F,MAAMioE,EAASC,EACzC,MAEI,IAAM2B,EAAiB1W,EAAIsW,oBAAoBxyE,UAAU4yE,eAqBzD,OApBA1W,EAAIsW,oBAAoBxyE,UAAU4yE,eAAiB,IAAI1U,MAAM0U,EAAgB,CACzE7pE,MAAOy/D,IAAgB,SAAC95D,EAAQsiE,EAASC,GACrC,IAAOhiE,EAAYgiE,EAAa,GAChC,GAAIqB,EAAoBj6D,IAAIpJ,GACxB,OAAO2jE,EAAe7pE,MAAMioE,EAAS,CAAC/hE,IAE1C,IAAA4jE,EAAwBxG,GAAgB5D,GAAA,CAAAuI,EAAO,kBAAAjQ,GAAA,OAAAA,EAAC+K,UAAU,4BAAA7K,GAAA,OAAAA,EAAEkL,gBAAA,IAAkBpZ,EAAQ6R,EAAkB0H,aAAhGnmE,EAAE0sE,EAAF1sE,GAAIomE,EAAAsG,EAAAtG,QAWZ,OAVKpmE,IAAc,IAARA,GAAeomE,IAAwB,IAAbA,IACjC8F,EAAmB,CACflsE,GAAAA,EACAomE,QAAAA,EACAuG,OAAQ,CACJ7jE,SAAAA,GAEJmF,MAAOu3D,GAA0BqF,EAAQlF,cAG1Cp9D,EAAO3F,MAAMioE,EAASC,EACzC,MAEWzI,IAAgB,WACnBtM,EAAIsW,oBAAoBxyE,UAAUuyE,YAAcA,EAChDrW,EAAIsW,oBAAoBxyE,UAAU4yE,eAAiBA,CAC3D,GACA,CAwIqCG,CAA6B5yE,EAAG,CAC7D+7D,IAAKkP,IAEH4H,EAAe7yE,EAAE8yE,aA9G3B,SAAyBC,GAAkB,IAAfC,EAAMD,EAANC,OAAQ13C,EAAAy3C,EAAAz3C,IAC1BygC,EAAMzgC,EAAIyuC,YAChB,IAAKhO,EACD,OAAO,WACf,EAEI,IAAM5oC,EAAW,GACX8/C,EAAU,IAAIpxD,QACdqxD,EAAmBnX,EAAIoX,SAC7BpX,EAAIoX,SAAW,SAAkBC,EAAQ7lE,EAAQ8lE,GAC7C,IAAMC,EAAW,IAAIJ,EAAiBE,EAAQ7lE,EAAQ8lE,GAStD,OARAJ,EAAQvsE,IAAI4sE,EAAU,CAClBF,OAAAA,EACAj/B,OAA0B,iBAAX5mC,EACf8lE,YAAAA,EACAE,WAA8B,iBAAXhmE,EACbA,EACAqK,KAAKC,UAAUjN,MAAM2yB,KAAK,IAAIptB,WAAW5C,OAE5C+lE,CACf,EACI,IAAME,EAAiB7V,GAAMriC,EAAIm4C,MAAO,OAAO,SAAUhmE,GACrD,OAAO,SAAU6lE,GAQb,OAPA9V,GAAW6K,IAAgB,WACvB,IAAMhmE,EAAI4wE,EAAQ3sE,IAAIgtE,GAClBjxE,IACA2wE,EAAO3wE,GACP4wE,EAAO,OAAQK,GAEnC,IAAgB,GACG7lE,EAAS7E,MAAMxG,KAAM,CAACkxE,GACzC,CACA,IAKI,OAJAngD,EAAS9vB,MAAK,WACV04D,EAAIoX,SAAWD,CACvB,IACI//C,EAAS9vB,KAAKmwE,GACPnL,IAAgB,WACnBl1C,EAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACnC,GACA,CAuEU4yE,CAAiB1zE,GACjB,WACV,EACU2zE,EAzEV,SAA+BC,GAC3B,IAAQt4C,EAA0Es4C,EAA1Et4C,IAAKs3B,EAAqEghB,EAArEhhB,OAAQC,EAA6D+gB,EAA7D/gB,WAAYC,EAAiD8gB,EAAjD9gB,cAAeC,EAAkC6gB,EAAlC7gB,gBAAiB8gB,EAAiBD,EAAjBC,YAC7DC,GAAY,EACVC,EAAkB1L,IAAgB,WACpC,IAAM2L,EAAY14C,EAAI24C,eACtB,MAAKD,GAAcF,GAAaxL,GAAA,CAAA0L,EAAW,0BAAAjT,GAAA,OAAAA,EAAAmT,WAAA,KAA3C,CAEAJ,EAAYE,EAAUE,cAAe,EAGrC,IAFA,IAAMC,EAAS,GACTnsB,EAAQgsB,EAAUI,YAAc,EAC7Bl0E,EAAI,EAAGA,EAAI8nD,EAAO9nD,IAAK,CAC5B,IAAMm0E,EAAQL,EAAUM,WAAWp0E,GAC3Bq0E,EAAyDF,EAAzDE,eAAgBC,EAAyCH,EAAzCG,YAAaC,EAA4BJ,EAA5BI,aAAcC,EAAcL,EAAdK,UACnCrV,GAAUkV,EAAgB1hB,EAAYC,EAAeC,GAAiB,IAClFsM,GAAUoV,EAAc5hB,EAAYC,EAAeC,GAAiB,IAGxEohB,EAAO9wE,KAAK,CACRs1C,MAAOia,EAAOlF,MAAM6mB,GACpBC,YAAAA,EACA5wC,IAAKgvB,EAAOlF,MAAM+mB,GAClBC,UAAAA,GAER,CACAb,EAAY,CAAEM,OAAAA,GAlBJ,CAmBlB,IAEI,OADAJ,IACOvlD,GAAG,kBAAmBulD,EACjC,CA6C8BY,CAAsB30E,GAC1C40E,EA7CV,SAAkCC,GAA4B,IAAzBv5C,EAAGu5C,EAAHv5C,IAAKw5C,EAAeD,EAAfC,gBAChC/Y,EAAMzgC,EAAIyuC,YAChB,OAAKhO,GAAQA,EAAI9C,eAEM0E,GAAM5B,EAAI9C,eAAgB,UAAU,SAAUxrD,GACjE,OAAO,SAAU5J,EAAMD,EAAayG,GAChC,IACIyqE,EAAgB,CACZC,OAAQ,CACJlxE,KAAAA,IAGZ,CACA,MAAOlE,GACP,CACA,OAAO8N,EAAS7E,MAAMxG,KAAM,CAACyB,EAAMD,EAAayG,GAC5D,CACA,IAde,WAAO,CAgBtB,CA0BkC2qE,CAA0Bh1E,GAClDi1E,EAAiB,GACvBC,EAAAjnD,GAAqBjuB,EAAEm1E,WAAO9H,EAAA6H,KAAAh0E,MAAE,KAArBk0E,EAAA/H,EAAA3sE,MACPu0E,EAAe5xE,KAAK+xE,EAAO/L,SAAS+L,EAAOvtE,SAAUojE,EAAemK,EAAO/qE,SAC/E,CACA,OAAOg+D,IAAgB,WACnBK,GAAgB/lE,SAAQ,SAAC4e,GAAC,OAAKA,EAAEhe,OAAO,IACxC+pE,EAAiB18B,aACjB28B,IACAmB,IACAmB,IACAC,IACAC,IACAC,IACAO,IACAuB,IACAC,IACAc,IACAc,IACAiB,IACAK,EAAetyE,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,GACzC,GACA,CACA,SAAS4qE,GAAiB9kE,GACtB,YAA+B,IAAjBL,OAAOK,EACzB,CACA,SAAS0qE,GAA4B1qE,GACjC,OAAOgD,aAAgC,IAAjBrD,OAAOK,IACzBL,OAAOK,GAAM/G,WACb,eAAgB0G,OAAOK,GAAM/G,WAC7B,eAAgB0G,OAAOK,GAAM/G,UACrC,KCxxBMw1E,GAAA,WACF,SAAAA,EAAYC,GACRlzE,KAAKkzE,aAAeA,EACpBlzE,KAAKmzE,sBAAwB,IAAI1zD,QACjCzf,KAAKozE,sBAAwB,IAAI3zD,OACrC,KAAA4zD,EAAAJ,EAAAx1E,UAsDA,OAtDA41E,EACA/nB,MAAA,SAAMmX,EAAQ6Q,EAAUC,EAAeC,GACnC,IAAMC,EAAkBF,GAAiBvzE,KAAK0zE,mBAAmBjR,GAC3DkR,EAAkBH,GAAiBxzE,KAAK4zE,mBAAmBnR,GAC7D7+D,EAAK6vE,EAAgBvvE,IAAIovE,GAM7B,OALK1vE,IACDA,EAAK5D,KAAKkzE,eACVO,EAAgBnvE,IAAIgvE,EAAU1vE,GAC9B+vE,EAAgBrvE,IAAIV,EAAI0vE,IAErB1vE,CACX,EAAAyvE,EACAxnB,OAAA,SAAO4W,EAAQ6Q,GAAU,IAAA3rB,EAAA,KACf8rB,EAAkBzzE,KAAK0zE,mBAAmBjR,GAC1CkR,EAAkB3zE,KAAK4zE,mBAAmBnR,GAChD,OAAO6Q,EAAS1pE,KAAI,SAAChG,GAAE,OAAK+jD,EAAK2D,MAAMmX,EAAQ7+D,EAAI6vE,EAAiBE,EAAgB,GACxF,EAAAN,EACAQ,YAAA,SAAYpR,EAAQ7+D,EAAIgG,GACpB,IAAM+pE,EAAkB/pE,GAAO5J,KAAK4zE,mBAAmBnR,GACvD,MAAkB,iBAAP7+D,EACAA,EACM+vE,EAAgBzvE,IAAIN,KAEzB,CAEhB,EAAAyvE,EACAS,aAAA,SAAarR,EAAQsR,GAAK,IAAAC,EAAA,KAChBL,EAAkB3zE,KAAK4zE,mBAAmBnR,GAChD,OAAOsR,EAAInqE,KAAI,SAAChG,GAAE,OAAKowE,EAAKH,YAAYpR,EAAQ7+D,EAAI+vE,EAAgB,GACxE,EAAAN,EACAlyE,MAAA,SAAMshE,GACF,IAAKA,EAGD,OAFAziE,KAAKmzE,sBAAwB,IAAI1zD,aACjCzf,KAAKozE,sBAAwB,IAAI3zD,SAGrCzf,KAAKmzE,sBAAqB,OAAQ1Q,GAClCziE,KAAKozE,sBAAqB,OAAQ3Q,EACtC,EAAA4Q,EACAK,mBAAA,SAAmBjR,GACf,IAAIgR,EAAkBzzE,KAAKmzE,sBAAsBjvE,IAAIu+D,GAKrD,OAJKgR,IACDA,EAAkB,IAAI3mE,IACtB9M,KAAKmzE,sBAAsB7uE,IAAIm+D,EAAQgR,IAEpCA,CACX,EAAAJ,EACAO,mBAAA,SAAmBnR,GACf,IAAIkR,EAAkB3zE,KAAKozE,sBAAsBlvE,IAAIu+D,GAKrD,OAJKkR,IACDA,EAAkB,IAAI7mE,IACtB9M,KAAKozE,sBAAsB9uE,IAAIm+D,EAAQkR,IAEpCA,CACX,EAAAV,CAAA,CA3DE,GCAN,SAAAgB,GAAAxyB,GAAA,QAAAC,OAAA/9C,EAAArF,EAAAmjD,EAAA,GAAA3jD,EAAA,EAAAA,EAAA2jD,EAAApgD,QAAA,KAAAsZ,EAAA8mC,EAAA3jD,GAAA8W,EAAA6sC,EAAA3jD,EAAA,MAAAA,GAAA,sBAAA6c,GAAA,iBAAAA,IAAA,MAAArc,EAAA,kBAAAqc,GAAA,mBAAAA,GAAA+mC,EAAApjD,EAAAA,EAAAsW,EAAAtW,IAAA,SAAAqc,GAAA,iBAAAA,IAAArc,EAAAsW,GAAA,mBAAAs/D,EAAAC,EAAA5tE,UAAAlF,OAAA2pB,EAAA,IAAAxiB,MAAA2rE,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAAppD,EAAAopD,GAAA7tE,UAAA6tE,GAAA,OAAAF,EAAA51E,GAAAqB,KAAA6G,MAAA0tE,EAAA,CAAAxyB,GAAAhlC,OAAAsO,GAAA,IAAA02B,OAAA/9C,EAAA,QAAArF,CAGA,KCSI+1E,GAEAC,GCRAvjD,GFFEwjD,GAAA,WACF,SAAAA,IACIv0E,KAAKw0E,wBAA0B,IAAIvB,GAAwB9lB,IAC3DntD,KAAKy0E,2BAA6B,IAAIh1D,OAC1C,KAAAi1D,EAAAH,EAAA92E,UAMA,OANAi3E,EACAtS,UAAA,WACA,EAAAsS,EACAC,gBAAA,WACA,EAAAD,EACA/R,aAAA,WACA,EAAA4R,CAAA,CAVE,GAYAK,GAAA,WACF,SAAAA,EAAY3sE,GACRjI,KAAK60E,QAAU,IAAIp1D,QACnBzf,KAAK80E,qBAAuB,IAAIr1D,QAChCzf,KAAKw0E,wBAA0B,IAAIvB,GAAwB9lB,IAC3DntD,KAAKy0E,2BAA6B,IAAIh1D,QACtCzf,KAAK2jE,WAAa17D,EAAQ07D,WAC1B3jE,KAAKq0E,YAAcpsE,EAAQosE,YAC3Br0E,KAAKqiE,kBAAoBp6D,EAAQo6D,kBACjCriE,KAAK+0E,yBAA2B9sE,EAAQ8sE,yBACxC/0E,KAAKg1E,6BAA+B,IAAI/B,GAAwBjzE,KAAKqiE,kBAAkB0H,YAAY1L,WAAW/3D,KAAKtG,KAAKqiE,kBAAkB0H,cAC1I/pE,KAAKwwD,OAASvoD,EAAQuoD,OAClBxwD,KAAK+0E,0BACL5wE,OAAO+xB,iBAAiB,UAAWl2B,KAAKi1E,cAAc3uE,KAAKtG,MAEnE,KAAAk1E,EAAAN,EAAAn3E,UA8LA,OA9LAy3E,EACA9S,UAAA,SAAU1I,GACN15D,KAAK60E,QAAQvwE,IAAIo1D,GAAU,GACvBA,EAASlgC,eACTx5B,KAAK80E,qBAAqBxwE,IAAIo1D,EAASlgC,cAAekgC,EAC9D,EAAAwb,EACAP,gBAAA,SAAgB5pC,GACZ/qC,KAAKm1E,aAAepqC,CACxB,EAAAmqC,EACAvS,aAAA,SAAajJ,EAAUgJ,GACnB1iE,KAAK2jE,WAAW,CACZhC,KAAM,CACF,CACI1jC,SAAUj+B,KAAKwwD,OAAOlF,MAAMoO,GAC5BsI,OAAQ,KACR3iB,KAAMqjB,IAGdzB,QAAS,GACTF,MAAO,GACPzgC,WAAY,GACZ80C,gBAAgB,IAE5BnB,GAAA,CAAQj0E,KAAK,kBAAAgO,GAAA,OAAAA,EAAAmnE,YAAY,EAAE,wBAAAtrB,GAAA,OAAAA,EAAC6P,EAAS,IACzBA,EAAS/C,iBACT+C,EAAS/C,gBAAgB0e,oBACzB3b,EAAS/C,gBAAgB0e,mBAAmBh0E,OAAS,GACrDrB,KAAKqiE,kBAAkBsI,iBAAiBjR,EAAS/C,gBAAgB0e,mBAAoBr1E,KAAKwwD,OAAOlF,MAAMoO,EAAS/C,iBACxH,EAAAue,EACAD,cAAA,SAAclpE,GACV,IAAMupE,EAA0BvpE,EAChC,GAA0C,UAAtCupE,EAAwBvmE,KAAKtP,MAC7B61E,EAAwBx6D,SAAWw6D,EAAwBvmE,KAAK+L,QAEzC/O,EAAQZ,OACnC,CAEA,IAAMuuD,EAAW15D,KAAK80E,qBAAqB5wE,IAAI6H,EAAQZ,QACvD,GAAKuuD,EAAL,CAEA,IAAM6b,EAAmBv1E,KAAKw1E,0BAA0B9b,EAAU4b,EAAwBvmE,KAAKb,OAC3FqnE,GACAv1E,KAAKq0E,YAAYkB,EAAkBD,EAAwBvmE,KAAK0mE,WAH1D,CAHA,CAOd,EAAAP,EACAM,0BAAA,SAA0B9b,EAAUn8D,GAAG,IAAAm4E,EAAA,KACnC,OAAQn4E,EAAEkC,MACN,KAAK6/D,GAAUqW,aACX31E,KAAKw0E,wBAAwBrzE,MAAMu4D,GACnC15D,KAAKg1E,6BAA6B7zE,MAAMu4D,GACxC15D,KAAK41E,gBAAgBr4E,EAAEwR,KAAKswC,KAAMqa,GAClC,IAAMhH,EAASn1D,EAAEwR,KAAKswC,KAAKz7C,GAG3B,OAFA5D,KAAKy0E,2BAA2BnwE,IAAIo1D,EAAUhH,GAC9C1yD,KAAK61E,kBAAkBt4E,EAAEwR,KAAKswC,KAAMqT,GAC7B,CACH9+C,UAAWrW,EAAEqW,UACbnU,KAAM6/D,GAAUwW,oBAChB/mE,KAAM,CACF5D,OAAQq0D,GAAkBuW,SAC1BpU,KAAM,CACF,CACI1jC,SAAUj+B,KAAKwwD,OAAOlF,MAAMoO,GAC5BsI,OAAQ,KACR3iB,KAAM9hD,EAAEwR,KAAKswC,OAGrB4hB,QAAS,GACTF,MAAO,GACPzgC,WAAY,GACZ80C,gBAAgB,IAI5B,KAAK9V,GAAU0W,KACf,KAAK1W,GAAU2W,KACf,KAAK3W,GAAU4W,iBACX,OAAO,EAEX,KAAK5W,GAAU6W,OACX,OAAO54E,EAEX,KAAK+hE,GAAU8W,OAEX,OADAp2E,KAAKq2E,WAAW94E,EAAEwR,KAAKuiC,QAASooB,EAAU,CAAC,KAAM,WAAY,aAAc,WACpEn8D,EAEX,KAAK+hE,GAAUwW,oBACX,OAAQv4E,EAAEwR,KAAK5D,QACX,KAAKq0D,GAAkBuW,SAoBnB,OAnBAx4E,EAAEwR,KAAK4yD,KAAKphE,SAAQ,SAAC7C,GACjBg4E,EAAKW,WAAW34E,EAAGg8D,EAAU,CACzB,WACA,SACA,eAEJgc,EAAKE,gBAAgBl4E,EAAE2hD,KAAMqa,GAC7B,IAAMhH,EAASgjB,EAAKjB,2BAA2BvwE,IAAIw1D,GACnDhH,GAAUgjB,EAAKG,kBAAkBn4E,EAAE2hD,KAAMqT,EACrE,IACwBn1D,EAAEwR,KAAKkyD,QAAQ1gE,SAAQ,SAAC7C,GACpBg4E,EAAKW,WAAW34E,EAAGg8D,EAAU,CAAC,WAAY,MACtE,IACwBn8D,EAAEwR,KAAKuxB,WAAW//B,SAAQ,SAAC7C,GACvBg4E,EAAKW,WAAW34E,EAAGg8D,EAAU,CAAC,MAC1D,IACwBn8D,EAAEwR,KAAKgyD,MAAMxgE,SAAQ,SAAC7C,GAClBg4E,EAAKW,WAAW34E,EAAGg8D,EAAU,CAAC,MAC1D,IAC+Bn8D,EAEX,KAAKiiE,GAAkByM,KACvB,KAAKzM,GAAkB4M,UACvB,KAAK5M,GAAkB2M,UAInB,OAHA5uE,EAAEwR,KAAK08D,UAAUlrE,SAAQ,SAACN,GACtBy1E,EAAKW,WAAWp2E,EAAGy5D,EAAU,CAAC,MAC1D,IAC+Bn8D,EAEX,KAAKiiE,GAAkB8W,eACnB,OAAO,EAEX,KAAK9W,GAAkB+W,iBACvB,KAAK/W,GAAkBgX,iBACvB,KAAKhX,GAAkBiX,OACvB,KAAKjX,GAAkBkX,eACvB,KAAKlX,GAAkBmX,MAEnB,OADA32E,KAAKq2E,WAAW94E,EAAEwR,KAAM2qD,EAAU,CAAC,OAC5Bn8D,EAEX,KAAKiiE,GAAkBoX,eACvB,KAAKpX,GAAkBqX,iBAGnB,OAFA72E,KAAKq2E,WAAW94E,EAAEwR,KAAM2qD,EAAU,CAAC,OACnC15D,KAAK82E,gBAAgBv5E,EAAEwR,KAAM2qD,EAAU,CAAC,YACjCn8D,EAEX,KAAKiiE,GAAkBuX,KACnB,OAAOx5E,EAEX,KAAKiiE,GAAkBwX,UAInB,OAHAz5E,EAAEwR,KAAKgjE,OAAOxxE,SAAQ,SAAC0xE,GACnByD,EAAKW,WAAWpE,EAAOvY,EAAU,CAAC,QAAS,OACvE,IAC+Bn8D,EAEX,KAAKiiE,GAAkByX,kBAMnB,OALAj3E,KAAKq2E,WAAW94E,EAAEwR,KAAM2qD,EAAU,CAAC,OACnC15D,KAAK82E,gBAAgBv5E,EAAEwR,KAAM2qD,EAAU,CAAC,aACxCua,GAAA,CAAA12E,EAAE,kBAAAiuD,GAAA,OAAAA,EAAAz8C,IAAI,EAAC,kBAAA28C,GAAA,OAAAA,EAAAwrB,MAAM,EAAE,0BAAAvrB,GAAA,OAAAA,EAAAprD,OAAO,EAAC,gBAAAi3D,GAAA,OAAAA,GAAC,SAAA8L,GACpBoS,EAAKoB,gBAAgBxT,EAAO5J,EAAU,CAAC,WAC1C,GAAC,IACKn8D,GAKvB,OAAO,CACX,EAAA23E,EACAtnE,QAAA,SAAQupE,EAAc5yE,EAAKm1D,EAAU13D,GACjC,IAAK,IAAiBo1E,EAAtBC,EAAAxrD,GAAkB7pB,KAAIo1E,EAAAC,KAAAv4E,MAAE,KAAbmF,EAAImzE,EAAA94E,OACNkK,MAAMC,QAAQlE,EAAIN,KAA6B,iBAAbM,EAAIN,MAEvCuE,MAAMC,QAAQlE,EAAIN,IAClBM,EAAIN,GAAOkzE,EAAatrB,OAAO6N,EAAUn1D,EAAIN,IAG7CM,EAAIN,GAAOkzE,EAAa7rB,MAAMoO,EAAUn1D,EAAIN,IAEpD,CACA,OAAOM,CACX,EAAA2wE,EACAmB,WAAA,SAAW9xE,EAAKm1D,EAAU13D,GACtB,OAAOhC,KAAK4N,QAAQ5N,KAAKw0E,wBAAyBjwE,EAAKm1D,EAAU13D,EACrE,EAAAkzE,EACA4B,gBAAA,SAAgBvyE,EAAKm1D,EAAU13D,GAC3B,OAAOhC,KAAK4N,QAAQ5N,KAAKg1E,6BAA8BzwE,EAAKm1D,EAAU13D,EAC1E,EAAAkzE,EACAU,gBAAA,SAAgBv2B,EAAMqa,GAAU,IAAA4d,EAAA,KAC5Bt3E,KAAKq2E,WAAWh3B,EAAMqa,EAAU,CAAC,KAAM,WACnC,eAAgBra,GAChBA,EAAK0M,WAAWxrD,SAAQ,SAACg3E,GACrBD,EAAK1B,gBAAgB2B,EAAO7d,EAC5C,GAEI,EAAAwb,EACAW,kBAAA,SAAkBx2B,EAAMqT,GAAQ,IAAA8kB,EAAA,KACxBn4B,EAAK5/C,OAAS0pD,GAAS4J,UAAa1T,EAAKqT,SACzCrT,EAAKqT,OAASA,GACd,eAAgBrT,GAChBA,EAAK0M,WAAWxrD,SAAQ,SAACg3E,GACrBC,EAAK3B,kBAAkB0B,EAAO7kB,EAC9C,GAEI,EAAAkiB,CAAA,CA7ME,GGZA6C,GAAA,oBAAAA,IAAA,KAAAC,EAAAD,EAAAh6E,UAQF,OAREi6E,EACF1jE,KAAA,WACA,EAAA0jE,EACAlV,cAAA,WACA,EAAAkV,EACA9U,oBAAA,WACA,EAAA8U,EACAv2E,MAAA,WACA,EAAAs2E,CAAA,CARE,GAUAE,GAAA,WACF,SAAAA,EAAY1vE,GACRjI,KAAK43E,WAAa,IAAI/hE,QACtB7V,KAAK63E,gBAAkB,GACvB73E,KAAK2jE,WAAa17D,EAAQ07D,WAC1B3jE,KAAKynE,SAAWx/D,EAAQw/D,SACxBznE,KAAKm5D,cAAgBlxD,EAAQkxD,cAC7Bn5D,KAAKwwD,OAASvoD,EAAQuoD,OACtBxwD,KAAKgU,MACT,KAAA8jE,EAAAH,EAAAl6E,UA6DA,OA7DAq6E,EACA9jE,KAAA,WACIhU,KAAKmB,QACLnB,KAAK+3E,kBAAkBvrE,QAAS8J,SACpC,EAAAwhE,EACAtV,cAAA,SAAc1Y,EAAY5wB,GAAK,IAAA8+C,EAAA,KAC3B,GAAKjuB,GAAkBD,KAEnB9pD,KAAK43E,WAAW9hE,IAAIg0C,GAAxB,CAEA9pD,KAAK43E,WAAW7hE,IAAI+zC,GACpB,IAAMmd,EAAWT,GAAoBpgE,EAAC,CAAC,EAChCpG,KAAKm5D,cAAa,CACrBjgC,IAAAA,EACAyqC,WAAY3jE,KAAK2jE,WACjBnT,OAAQxwD,KAAKwwD,OACb+R,iBAAkBviE,OACnB8pD,GACH9pD,KAAK63E,gBAAgB52E,MAAK,kBAAMgmE,EAASz4B,YAAY,IACrDxuC,KAAK63E,gBAAgB52E,KAAKumE,GAAkBphE,EAAC,CAAC,EACvCpG,KAAKm5D,cAAa,CACrBsO,SAAUznE,KAAKynE,SACfvuC,IAAK4wB,EACL0G,OAAQxwD,KAAKwwD,WAEjB4K,IAAW,WACHtR,EAAWurB,oBACXvrB,EAAWurB,mBAAmBh0E,OAAS,GACvC22E,EAAK7e,cAAckJ,kBAAkBsI,iBAAiB7gB,EAAWurB,mBAAoB2C,EAAKxnB,OAAOlF,MAAMxB,EAAWruB,OACtHu8C,EAAKH,gBAAgB52E,KAAKipE,GAA8B,CACpD1Z,OAAQwnB,EAAKxnB,OACb6R,kBAAmB2V,EAAK7e,cAAckJ,mBACvCvY,GACN,GAAE,EAxBO,CAyBd,EAAAguB,EACAlV,oBAAA,SAAoBqV,GACXA,EAAcz+C,eAAkBy+C,EAActhB,iBAEnD32D,KAAK+3E,kBAAkBE,EAAcz+C,cAAchtB,QAASyrE,EAActhB,gBAC9E,EAAAmhB,EACAC,kBAAA,SAAkB17C,EAASnD,GACvB,IAAMg/C,EAAUl4E,KAChBA,KAAK63E,gBAAgB52E,KAAKs6D,GAAMl/B,EAAQ5+B,UAAW,gBAAgB,SAAU4N,GACzE,OAAO,SAAU8sE,GACb,IAAMruB,EAAaz+C,EAAS1L,KAAKK,KAAMm4E,GAGvC,OAFIn4E,KAAK8pD,YAAcgV,GAAM9+D,OACzBk4E,EAAQ1V,cAAcxiE,KAAK8pD,WAAY5wB,GACpC4wB,CACvB,CACS,IACL,EAAAguB,EACA32E,MAAA,WACInB,KAAK63E,gBAAgBt3E,SAAQ,SAACgR,GAC1B,IACIA,GACJ,CACA,MAAOhU,GACP,CACZ,IACQyC,KAAK63E,gBAAkB,GACvB73E,KAAK43E,WAAa,IAAI/hE,OAC1B,EAAA8hE,CAAA,CAtEE,GCNAS,GAAA,oBAAAA,IAAA,KAAAC,EAAAD,EAAA36E,UAYF,OAZE46E,EACFl3E,MAAA,WACA,EAAAk3E,EACA/S,OAAA,WACA,EAAA+S,EACA7S,SAAA,WACA,EAAA6S,EACA3S,KAAA,WACA,EAAA2S,EACA1S,OAAA,WACA,EAAA0S,EACAC,SAAA,WACA,EAAAF,CAAA,CAZE,GCLAG,GAAA,WACF,SAAAA,EAAYtwE,GACRjI,KAAKw4E,oBAAsB,IAAI3iE,QAC/B7V,KAAK+pE,YAAc,IAAI/L,GACvBh+D,KAAK2jE,WAAa17D,EAAQ07D,WAC1B3jE,KAAKy4E,oBAAsBxwE,EAAQwwE,mBACvC,KAAAC,EAAAH,EAAA96E,UAwDA,OAxDAi7E,EACA7V,kBAAA,SAAkB8V,EAAQjW,GAClB,aAAcA,EAAQpiC,YACtBtgC,KAAK2jE,WAAW,CACZhC,KAAM,GACNV,QAAS,GACTF,MAAO,GACPzgC,WAAY,CACR,CACI18B,GAAI8+D,EAAQ9+D,GACZ08B,WAAYoiC,EACPpiC,eAIrBtgC,KAAKsiE,iBAAiBqW,EAC1B,EAAAD,EACApW,iBAAA,SAAiBqW,GACT34E,KAAKw4E,oBAAoB1iE,IAAI6iE,KAEjC34E,KAAKw4E,oBAAoBziE,IAAI4iE,GAC7B34E,KAAK44E,6BAA6BD,GACtC,EAAAD,EACA/N,iBAAA,SAAiBH,EAAQJ,GACrB,GAAsB,IAAlBI,EAAOnpE,OAAX,CAOA,IALA,IAK0Bw3E,EALpBC,EAAwB,CAC1Bl1E,GAAIwmE,EACJ2O,SAAU,IAER7B,EAAS,GACf8B,EAAAntD,GAAoB2+C,KAAMqO,EAAAG,KAAAl6E,MAAE,KAAjBo1D,EAAM2kB,EAAAv6E,MACT0rE,OAAO,EACNhqE,KAAK+pE,YAAYj0D,IAAIo+C,GAWtB8V,EAAUhqE,KAAK+pE,YAAYze,MAAM4I,IAVjC8V,EAAUhqE,KAAK+pE,YAAYh0D,IAAIm+C,GAC/BgjB,EAAOj2E,KAAK,CACR+oE,QAAAA,EACA/f,MAAOzhD,MAAM2yB,KAAK+4B,EAAMjK,OAASgvB,SAAS,SAAC77E,EAAGyU,GAAK,MAAM,CACrDw4C,KAAMD,GAAchtD,GACpByU,MAAAA,EACH,OAKTinE,EAAsBC,SAAS93E,KAAK+oE,EACxC,CACIkN,EAAO71E,OAAS,IAChBy3E,EAAsB5B,OAASA,GACnCl3E,KAAKy4E,oBAAoBK,EAxBf,CAyBd,EAAAJ,EACAv3E,MAAA,WACInB,KAAK+pE,YAAY5oE,QACjBnB,KAAKw4E,oBAAsB,IAAI3iE,OACnC,EAAA6iE,EACAE,6BAAA,SAA6BD,GAC7B,EAAAJ,CAAA,CA9DE,GCDAW,GAAA,WACF,SAAAA,IACIl5E,KAAKm5E,QAAU,IAAI15D,QACnBzf,KAAKo5E,MAAO,EACZp5E,KAAKq5E,mBACT,KAAAC,EAAAJ,EAAAz7E,UAoBA,OApBA67E,EACAD,kBAAA,WAAoB,IAAAE,EAAA,MbgaxB,WACWte,GAAkB,yBAAwBz0D,WAAC,EAADD,UACrD,CajaQizE,EAAwB,WACpBD,EAAKzzD,QACDyzD,EAAKH,MACLG,EAAKF,mBACrB,GACI,EAAAC,EACApU,cAAA,SAAc7lB,EAAMo6B,GAChB,IAAMjoC,EAAUxxC,KAAKm5E,QAAQj1E,IAAIm7C,GACjC,OAAQ7N,GAAWhpC,MAAM2yB,KAAKqW,GAAS3mC,MAAK,SAACknC,GAAM,OAAKA,IAAW0nC,CAAU,GACjF,EAAAH,EACAvjE,IAAA,SAAIspC,EAAMtN,GACN/xC,KAAKm5E,QAAQ70E,IAAI+6C,GAAOr/C,KAAKm5E,QAAQj1E,IAAIm7C,IAAS,IAAIgiB,KAAOtrD,IAAIg8B,GACrE,EAAAunC,EACAxzD,MAAA,WACI9lB,KAAKm5E,QAAU,IAAI15D,OACvB,EAAA65D,EACAI,QAAA,WACI15E,KAAKo5E,MAAO,CAChB,EAAAF,CAAA,CAzBE,GLaA1oB,GTyHK,IAAIrF,GSxHf,SAASwuB,GAAO1xE,QAAA,IAAAA,IAAAA,EAAU,CAAC,GACvB,IAAAsnB,EAEmNtnB,EAF3M+Y,EAAIuO,EAAJvO,KAAM44D,EAAgBrqD,EAAhBqqD,iBAAkBC,EAAgBtqD,EAAhBsqD,iBAAgBC,EAAAvqD,EAAEkhC,WAAAA,OAAW,IAAAqpB,EAAE,WAAUA,EAAAC,EAAAxqD,EAAEmhC,cAAAA,OAAA,IAAAqpB,EAAgB,KAAIA,EAAAC,EAAAzqD,EAAEohC,gBAAAA,OAAA,IAAAqpB,EAAkB,KAAIA,EAAAC,EAAA1qD,EAAE44C,YAAAA,OAAA,IAAA8R,EAAc,YAAWA,EAAAC,EAAA3qD,EAAE64C,eAAAA,OAAe,IAAA8R,EAAE,KAAIA,EAAAC,EAAA5qD,EAAEygC,YAAAA,OAAA,IAAAmqB,GAAmBA,EAAAC,EAAA7qD,EAAEqgC,cAAAA,OAAc,IAAAwqB,EAAE,UAASA,EAAAC,EAAA9qD,EAAEugC,gBAAAA,OAAA,IAAAuqB,EAAkB,KAAIA,EAAAC,EAAA/qD,EAAEsgC,iBAAAA,OAAiB,IAAAyqB,EAAE,KAAIA,EAAAC,EAAAhrD,EAAEwgC,mBAAAA,OAAA,IAAAwqB,EAAqB,KAAIA,EAAAC,EAAAjrD,EAAEwhC,iBAAAA,OAAA,IAAAypB,GAAuBA,EAAEC,EAAalrD,EAAbkrD,cAAiCC,EAAiBnrD,EAAnC88B,iBAAqDsuB,EAAeprD,EAA/B2hC,eAAiCzC,EAAel/B,EAAfk/B,gBAAiBjC,EAAWj9B,EAAXi9B,YAAayE,EAAU1hC,EAAV0hC,WAAU2pB,EAAArrD,EAAEsrD,cAAAA,OAAA,IAAAD,EAAgB,KAAIA,EAAEE,EAAMvrD,EAANurD,OAAMC,EAAAxrD,EAAEm4C,SAAAA,OAAA,IAAAqT,EAAW,CAAC,EAACA,EAAAC,EAAAzrD,EAAE6hC,eAAAA,OAAe,IAAA4pB,EAAE,CAAC,EAACA,EAAEC,EAAa1rD,EAAb0rD,cAAaC,EAAA3rD,EAAEiiC,aAAAA,OAAA,IAAA0pB,GAAoBA,EAAAC,EAAA5rD,EAAEwlD,yBAAAA,OAAA,IAAAoG,GAAgCA,EAAAC,EAAA7rD,EAAE8rD,YAAAA,OAAA,IAAAD,EAAsC,qBAAxBnzE,EAAQozE,YACxlBpzE,EAAQozE,YACR,OAAMD,EAAAE,EAAA/rD,EAAE84C,qBAAAA,OAAA,IAAAiT,GAA4BA,EAAAC,EAAAhsD,EAAEmhD,aAAAA,OAAa,IAAA6K,GAAOA,EAAAC,EAAAjsD,EAAE+hC,aAAAA,OAAA,IAAAkqB,GAAoBA,EAAEzI,GAAOxjD,EAAPwjD,QAAO0I,GAAAlsD,EAAE0iC,gBAAAA,QAAA,IAAAwpB,GAAkB,kBAAM,CAAK,EAAAA,GAAAC,GAAAnsD,EAAEwgD,oBAAAA,QAAA,IAAA2L,GAAsB,IAAIra,IAAI,IAAGqa,GAAEvb,GAAY5wC,EAAZ4wC,aAAc+G,GAAU33C,EAAV23C,WAAYyU,GAAgBpsD,EAAhBosD,iBAC7L5V,GAAqB5F,IACrB,IAAMyb,IAAkB7G,GAClB5wE,OAAO03E,SAAW13E,OAEpB23E,IAAoB,EACxB,IAAKF,GACD,IACQz3E,OAAO03E,OAAOvlE,WACdwlE,IAAoB,EAE5B,CACA,MAAOv+E,GACHu+E,IAAoB,CACxB,CAEJ,GAAIF,KAAoB56D,EACpB,MAAM,IAAIniB,MAAM,kCAEE8E,IAAlBs3E,QAAsDt3E,IAAvB+jE,EAAS2D,YACxC3D,EAAS2D,UAAY4P,GAEzBzqB,GAAOrvD,QACP,IAwCI46E,GAxCE1vB,IAAqC,IAAlBouB,EACnB,CACEuB,OAAO,EACPC,MAAM,EACN,kBAAkB,EAClBvoE,OAAO,EACPwoE,OAAO,EACPC,QAAQ,EACRlK,OAAO,EACPr2C,QAAQ,EACRwgD,KAAK,EACL3vB,MAAM,EACN1Y,MAAM,EACNz3B,KAAK,EACL+/D,MAAM,EACN1kB,UAAU,EACV2kB,QAAQ,EACRC,OAAO,EACPC,UAAU,QAEU74E,IAAtB+2E,EACIA,EACA,CAAC,EACLxpB,IAAqC,IAApBypB,GAAgD,QAApBA,EAC7C,CACEtiB,QAAQ,EACRD,SAAS,EACTG,aAAa,EACbW,gBAAgB,EAChBT,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBE,sBAAsB,EACtBD,mBAAwC,QAApB+hB,EACpBniB,qBAA0C,QAApBmiB,GAExBA,GAEI,CAAC,GRiIf,SAAkBhhB,GAAc,IAAA9oD,EAAA,UAAV,IAAJ8oD,IAAAA,EAAMx1D,QAChB,aAAcw1D,IAAQA,EAAI8iB,SAASh/E,UAAU8C,UAC7Co5D,EAAI8iB,SAASh/E,UAAU8C,QAAUiI,MAAM/K,UAClC8C,SAEL,iBAAkBo5D,IAAQA,EAAI+iB,aAAaj/E,UAAU8C,UACrDo5D,EAAI+iB,aAAaj/E,UAAU8C,QAAUiI,MAAM/K,UACtC8C,SAEJq+D,KAAKnhE,UAAUg2D,WAChBmL,KAAKnhE,UAAUg2D,SAAW,WAAa,QAAAn7B,EAAA/xB,UAAAlF,OAAT2pB,EAAI,IAAAxiB,MAAA8vB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJvN,EAAIuN,GAAAhyB,UAAAgyB,GAC9B,IAAI8mB,EAAOr0B,EAAK,GAChB,KAAM,KAAKA,GACP,MAAM,IAAInqB,UAAU,0BAExB,GACI,GAAIgQ,IAASwuC,EACT,OAAO,QAELA,EAAOA,GAAQA,EAAKx2C,YAC9B,OAAO,CACnB,EAEA,CQvJI8zE,GAEA,IAAIC,GAA2B,EACzBt4B,GAAiB,SAAC/mD,GACpB,IAAK,IAA6Bs/E,EAAlCC,EAAAjxD,GAAqBknD,IAAW,MAAE8J,EAAAC,KAAAh+E,MAAE,KAAzBk0E,EAAA6J,EAAAv+E,MACH00E,EAAO1uB,iBACP/mD,EAAIy1E,EAAO1uB,eAAe/mD,GAElC,CAKA,OAJIu9E,IACCgB,KACDv+E,EAAIu9E,EAAOv9E,IAERA,CACf,EACI82E,GAAc,SAACj3E,EAAGq4E,GACd,IAAMl4E,EAAIH,EAQV,GAPAG,EAAEqW,UAAYioD,MACdra,GAAA,CAAI8kB,GAAe,kBAAAt4D,GAAA,OAAAA,EAAC,EAAE,4BAAA67C,GAAA,OAAAA,EAAE4b,QAAQ,kBAAAja,GAAA,OAAAA,GAAG,KAC/BjuD,EAAEkC,OAAS6/D,GAAUqW,cACnBp4E,EAAEkC,OAAS6/D,GAAUwW,qBACnBv4E,EAAEwR,KAAK5D,SAAWq0D,GAAkBuW,UACxCzP,GAAgB/lE,SAAQ,SAACoxC,GAAG,OAAKA,EAAI6zB,UAAU,IAE/CoW,GACAp6B,GAAA,CAAAxgC,EAAI,wBAAA0qC,GAAA,OAAAA,EAAGpH,GAAe/mD,GAAIk4E,EAAW,SAEpC,GAAIqG,GAAmB,CACxB,IAAM/vE,EAAU,CACZtM,KAAM,QACNyO,MAAOo2C,GAAe/mD,GACtBud,OAAQ3W,OAAOixB,SAASta,OACxB26D,WAAAA,GAEJtxE,OAAO03E,OAAOkB,YAAYhxE,EAAS,IACvC,CACA,GAAIxO,EAAEkC,OAAS6/D,GAAUqW,aACrBoG,GAAwBx+E,EACxBq/E,GAA2B,OAE1B,GAAIr/E,EAAEkC,OAAS6/D,GAAUwW,oBAAqB,CAC/C,GAAIv4E,EAAEwR,KAAK5D,SAAWq0D,GAAkBuW,UACpCx4E,EAAEwR,KAAKqmE,eACP,OAEJwH,KACA,IAAMI,EAAcnD,GAAoB+C,IAA4B/C,EAC9DoD,EAAarD,GACfmC,IACAx+E,EAAEqW,UAAYmoE,GAAsBnoE,UAAYgmE,GAChDoD,GAAeC,IACfC,IAAiB,EAEzB,CACR,EA6CI,IA3CA,IA2CkCC,GA3C5BC,GAAsB,SAACl8E,GACzBmzE,GAAY,CACR50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBuW,UACvB70E,IAGnB,EACUm8E,GAAoB,SAACp9E,GAAC,OAAKo0E,GAAY,CACzC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBiX,QACvBx2E,IAET,EACIq9E,GAA4B,SAACr9E,GAAC,OAAKo0E,GAAY,CACjD50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBkX,gBACvBz2E,IAET,EAQIoiE,GAAoB,IAAIkW,GAAkB,CAC5C5U,WAAYyZ,GACZ3E,oBATiC,SAACz6E,GAAC,OAAKq2E,GAAY,CACpD50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkByX,mBACvBj5E,IAET,IAKImkE,GAAoD,kBAA7Bob,0BAA0CA,yBACjE,IAAIhJ,GACJ,IAAIK,GAAc,CAChBpkB,OAAAA,GACAmT,WAAYyZ,GACZ/a,kBAAmBA,GACnB0S,yBAAAA,EACAV,YAAAA,KAERmJ,GAAA3xD,GAAqBknD,IAAW,MAAEoK,GAAAK,MAAA1+E,MAAE,KAAzBk0E,GAAAmK,GAAA7+E,MACH00E,GAAOyK,WACPzK,GAAOyK,UAAU,CACbC,WAAYltB,GACZgkB,wBAAyBrS,GAAcqS,wBACvCQ,6BAA8B7S,GAAc6S,8BAExD,CACA,IAAM/P,GAAuB,IAAIiU,GAC3B3T,GA2TV,SAA2BoY,EAAoB11E,GAC3C,IACI,OAAO01E,EACDA,EAAmB11E,GACnB,IAAImwE,EACd,CACA,MAAM3jD,GAEF,OADA/uB,QAAQohB,KAAK,sCACN,IAAIsxD,EACf,CACJ,CArU0BwF,CAAkBjC,GAAkB,CACtDnrB,OAAAA,GACAmJ,IAAKx1D,OACLw/D,WAAY,SAAC1jE,GAAC,OAAKo0E,GAAY,CAC3B50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBkX,gBACvBz2E,IAET,EACFuxD,aAAAA,EACAf,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAkqB,cAAAA,EACAnT,SAAUA,EAAiB,OAC3BtW,eAAAA,EACA+O,aAAAA,KAEEoC,GAA2D,kBAAjCsb,8BAC5BA,6BACE,IAAIpG,GACJ,IAAIE,GAAiB,CACnBhU,WAAYyZ,GACZ3V,SAAU4V,GACVlkB,cAAe,CACX+N,WAAAA,GACAzW,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAX,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAgB,iBAAAA,EACA1E,iBAAAA,GACA+E,eAAAA,EACA3C,gBAAAA,EACAwC,WAAAA,EACAzE,YAAAA,EACAgF,aAAAA,EACAF,aAAAA,EACAoW,SAAAA,EACAxW,eAAAA,GACAiR,cAAAA,GACAE,kBAAAA,GACAkD,cAAAA,GACAtT,gBAAAA,GACAgT,qBAAAA,IAEJzU,OAAAA,KAEF0sB,GAAmB,SAACzH,QAAA,IAAAA,IAAAA,GAAa,GACnCpB,GAAY,CACR50E,KAAM6/D,GAAU0W,KAChBjnE,KAAM,CACFsmB,KAAMlxB,OAAOixB,SAASC,KACtBs/B,MAAOkI,KACPx0D,OAAQq0D,OAEb+Y,GACHpT,GAAkBlhE,QAClBohE,GAAiBvuD,OACjBsyD,GAAgB/lE,SAAQ,SAACoxC,GAAG,OAAKA,EAAI+zB,MAAM,IAC3C,IAAMrmB,ET43BuB,SAAA3hD,EAAAuK,GACA,IAAAwQ,EAAAxQ,GAAA,GAAA61E,EAAArlE,EAAA+3C,OAAAA,OAAA,IAAAstB,EAAA,IAAA3yB,GAAA2yB,EAAAC,EAAAtlE,EAAAg4C,WAAAutB,EAAAvlE,EAAAi4C,cAAAutB,EAAAxlE,EAAAk4C,gBAAAutB,EAAAzlE,EAAAu3C,YAAAmuB,EAAA1lE,EAAAm3C,cAAAwuB,EAAA3lE,EAAAq3C,gBAAAuuB,EAAA5lE,EAAAo3C,iBAAAyuB,EAAA7lE,EAAAs3C,mBAAAwuB,EAAA9lE,EAAAs4C,iBAAAytB,EAAA/lE,EAAA64C,aAAAmtB,EAAAhmE,EAAA+4C,aAAAktB,EAAAjmE,EAAAgiE,cAAAA,OAAA,IAAAiE,GAAAA,EAAAC,EAAAlmE,EAAAmmE,QAAAA,OAAA,IAAAD,GAAAA,EAAAE,EAAApmE,EAAAw5C,gBAuCA,OAAA1B,GAAA7yD,EAAA,CACAw7B,IAAAx7B,EACA8yD,OAAAA,EACAC,gBA1CA,IAAAstB,EAAA,WAAAA,EA2CArtB,mBA3CA,IAAAstB,EAAA,KAAAA,EA4CArtB,qBA5CA,IAAAstB,EAAA,KAAAA,EA6CAjuB,iBA7CA,IAAAkuB,GAAAA,EA8CAtuB,mBA9CA,IAAAuuB,EAAA,UAAAA,EA+CAruB,qBA/CA,IAAAsuB,EAAA,KAAAA,EAgDAvuB,sBAhDA,IAAAwuB,EAAA,KAAAA,EAiDAtuB,wBAjDA,IAAAuuB,EAAA,KAAAA,EAkDAztB,WAAA,EACAE,sBAnDA,IAAAwtB,GAAAA,EAoDAlyB,kBAnDA,IAAAouB,EACA,CACAuB,OAAA,EACAC,MAAA,EACA,oBACAvoE,OAAA,EACAwoE,OAAA,EACAC,QAAA,EACAlK,OAAA,EACAr2C,QAAA,EACAwgD,KAAA,EACA3vB,MAAA,EACA1Y,MAAA,EACAz3B,KAAA,EACA+/D,MAAA,EACA1kB,UAAA,EACA2kB,QAAA,IAEA,IAAA7B,EACA,GACAA,EAgCAhsB,gBArDAh2C,EAAAg2C,gBAsDAwC,WAtDAx4C,EAAAw4C,WAuDAzE,YAvDA/zC,EAAA+zC,YAwDA0E,gBAlCA,IAAA0tB,GAAA,QAAAA,EAEA,CACAvmB,QAAA,EACAD,SAAA,EACAG,aAAA,EACAW,gBAAA,EACAV,qBAAA,QAAAomB,EACAnmB,gBAAA,EACAC,gBAAA,EACAC,mBAAA,EACAC,oBAAA,EACAC,sBAAA,IAEA,IAAA+lB,EACA,GACAA,EAmBAxtB,eAzDA34C,EAAA24C,eA0DAE,kBA1DA,IAAAktB,GAAAA,EA2DAhtB,kBA3DA,IAAAitB,GAAAA,EA4DApsB,mBA5DA55C,EAAA45C,mBA6DAZ,YA7DAh5C,EAAAg5C,YA8DAC,aA9DAj5C,EAAAi5C,aA+DAE,kBA/DAn5C,EAAAm5C,kBAgEAC,iBAhEAp5C,EAAAo5C,iBAiEAE,sBAjEAt5C,EAAAs5C,sBAkEAE,qBAlEA,IAAA4sB,EAAA,qBAAAA,EAmEA1sB,mBAAA,GAEA,CSl8BhBmmB,CAAShiE,SAAU,CAC5Bk6C,OAAAA,GACAC,WAAAA,EACAC,cAAAA,EACAC,gBAAAA,EACAX,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACAgB,iBAAAA,EACA0pB,cAAepuB,GACfoC,gBAAAA,EACAjC,YAAAA,EACAyE,WAAAA,EACA2tB,QAAS1tB,GACTE,eAAAA,EACAI,aAAAA,EACAF,aAAAA,EACAG,YAAa,SAAC/zD,GACNigE,GAAmBjgE,EAAG8yD,KACtB2R,GAAcC,UAAU1kE,GAExBmgE,GAAuBngE,EAAG8yD,KAC1B6R,GAAkBC,iBAAiB5kE,GAEnCogE,GAAcpgE,IACd6kE,GAAiBC,cAAc9kE,EAAEosD,WAAYxzC,SAEpD,EACDo7C,aAAc,SAAC+Q,EAAQC,GACnBP,GAAcQ,aAAaF,EAAQC,GACnCH,GAAiBK,oBAAoBH,EACxC,EACD5Q,iBAAkB,SAAC8mB,EAAQjW,GACvBL,GAAkBQ,kBAAkB8V,EAAQjW,EAC/C,EACDzQ,gBAAAA,KAEJ,IAAK5S,EACD,OAAO35C,QAAQohB,KAAK,mCAExButD,GAAY,CACR50E,KAAM6/D,GAAUqW,aAChB5mE,KAAM,CACFswC,KAAAA,EACAy/B,cAAehjB,GAAgB33D,WAGvCmiE,GAAgB/lE,SAAQ,SAACoxC,GAAG,OAAKA,EAAIg0B,QAAQ,IACzCrvD,SAAS++D,oBAAsB/+D,SAAS++D,mBAAmBh0E,OAAS,GACpEghE,GAAkBsI,iBAAiBr0D,SAAS++D,mBAAoB7kB,GAAOlF,MAAMh1C,UACzF,EACIg+D,GAAoB4I,GACpB,IACI,IAAMnsD,GAAW,GACXwZ,GAAU,SAACrR,GACb,OAAO+sC,GAAgB2E,GAAhB3E,CAA+B,CAClCiB,WAAAA,GACAvD,WAAYyZ,GACZhS,YAAa,SAACK,EAAWtgE,GAAM,OAAKkpE,GAAY,CAC5C50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAM,CACF5D,OAAAA,EACAsgE,UAAAA,IAEN,EACFc,mBAAoB,SAACrtE,GAAC,OAAKm1E,GAAY,CACnC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBgX,kBACvBt3E,IAET,EACFuoE,SAAU4V,GACVvS,iBAAkB,SAAC5rE,GAAC,OAAKm1E,GAAY,CACjC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkB8W,gBACvBp3E,IAET,EACFgpE,QAAS,SAAC7nE,GAAC,OAAKg0E,GAAY,CACxB50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBmX,OACvBt2E,IAET,EACFytE,mBAAoB,SAAC7tE,GAAC,OAAKo0E,GAAY,CACnC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkB+W,kBACvBt2E,IAET,EACFquE,iBAAkB,SAAClxE,GAAC,OAAKi3E,GAAY,CACjC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBoX,gBACvBx5E,IAET,EACF0yE,mBAAoB,SAAC1yE,GAAC,OAAKi3E,GAAY,CACnC50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBqX,kBACvBz5E,IAET,EACF2hF,iBAAkBzB,GAClB1M,OAAQ,SAAC3wE,GAAC,OAAKo0E,GAAY,CACvB50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBuX,MACvB92E,IAET,EACFwxE,YAAa,SAACxxE,GACVo0E,GAAY,CACR50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBwX,WACvB/2E,IAGd,EACDyyE,gBAAiB,SAACt0E,GACdi2E,GAAY,CACR50E,KAAM6/D,GAAUwW,oBAChB/mE,KAAI3I,EAAA,CACA+E,OAAQq0D,GAAkBwf,eACvB5gF,IAGd,EACDqyD,WAAAA,EACA0X,YAAAA,EACAC,eAAAA,EACApY,YAAAA,EACAJ,cAAAA,EACAE,gBAAAA,EACAD,iBAAAA,EACAE,mBAAAA,EACA1D,iBAAAA,GACA0E,iBAAAA,EACA2W,SAAAA,EACAlW,aAAAA,EACAF,aAAAA,EACA+W,qBAAAA,EACAqI,aAAAA,EACAx3C,IAAAA,EACAu1B,gBAAAA,EACAjC,YAAAA,EACAyE,WAAAA,EACAgB,gBAAAA,GACAvB,cAAAA,EACAC,gBAAAA,EACAO,eAAAA,GACAE,eAAAA,EACAZ,OAAAA,GACA2R,cAAAA,GACAE,kBAAAA,GACAE,iBAAAA,GACA0C,qBAAAA,GACAM,cAAAA,GACAwK,oBAAAA,GACAgD,QAASvxB,GAAA,CAAAuxB,GACH,0BAAApnB,GAAA,OAAAA,EAAAliD,MAAM,kBAAA+tD,GAAA,OAAAA,GAAC,SAACv3D,GAAC,OAAKA,EAAEgnE,QAAQ,KAC1B,0BAAAxP,GAAA,OAAAA,EAAE7tD,GAAG,EAAC,gBAAA8tD,GAAA,OAAAA,GAAC,SAAAz3D,GAAC,MAAM,CACdgnE,SAAUhnE,EAAEgnE,SACZh/D,QAAShI,EAAEgI,QACXxC,SAAU,SAAC6rC,GAAO,OAAK+iC,GAAY,CAC/B50E,KAAM6/D,GAAU6W,OAChBpnE,KAAM,CACFikE,OAAQ/yE,EAAEwB,KACV6vC,QAAAA,IAEN,EACL,GAAG,KAAG,IACR,CAAE,EACjB,EACQ6wB,GAAcwS,iBAAgB,SAACjb,GAC3B,IACI3oC,GAAS9vB,KAAKspC,GAAQmvB,EAAS/C,iBACnC,CACA,MAAO9kC,GACHnsB,QAAQohB,KAAK+K,EACjB,CACZ,IACQ,IAAM7d,GAAO,WACTkpE,KACAnsD,GAAS9vB,KAAKspC,GAAQj0B,UAClC,EAuBQ,MAtB4B,gBAAxBA,SAASshB,YACe,aAAxBthB,SAASshB,WACT5jB,MAGA+c,GAAS9vB,KAAKmrB,GAAG,oBAAoB,WACjCioD,GAAY,CACR50E,KAAM6/D,GAAU4W,iBAChBnnE,KAAM,CAAE,IAEQ,qBAAhBssE,GACArnE,IACP,KACD+c,GAAS9vB,KAAKmrB,GAAG,QAAQ,WACrBioD,GAAY,CACR50E,KAAM6/D,GAAU2W,KAChBlnE,KAAM,CAAE,IAEQ,SAAhBssE,GACArnE,IACpB,GAAe7P,UAEA,WACH4sB,GAASxwB,SAAQ,SAAC7B,GAAC,OAAKA,GAAG,IAC3BumE,GAAqByU,UACrBpF,QAAoB3wE,EACpBqiE,IACZ,CACI,CACA,MAAOn0C,GACHnsB,QAAQohB,KAAK+K,EACjB,CACJ,CM7dO,SAASotD,GAAcrrE,GAE5B,OADaA,EAAY,WACXA,EAAwB,IAAZA,CAC5B,CAKO,SAASsrE,GAAatrE,GAE3B,OADaA,EAAY,WACXA,EAAY,IAAOA,CACnC,CCLO,SAASurE,GAAmBr/B,EAAyB5/B,GAC9B,uBAAxBA,EAAW+b,WAIX,CAAC,WAAY,YAAYjxB,SAASkV,EAAW+b,UAC/C6jB,EAAOs/B,sBAEPt/B,EAAOu/B,+BAGTv/B,EAAOw/B,WAAU,WAgBf,OAbAx/B,EAAOy/B,kBAAkB,CACvB9/E,KAAM6/D,GAAU8W,OAGhBxiE,UAAyC,KAA7BsM,EAAWtM,WAAa,GACpC7E,KAAM,CACJi6B,IAAK,aAELsI,QAASz8B,GAAUqL,EAAY,GAAI,QAKR,YAAxBA,EAAW+b,QACtB,IACA,CCjCO,SAASujD,GAAsBnjD,GAEpC,OAD2BA,EAAQojD,QAJR,aAKEpjD,CAC/B,CAQO,SAASqjD,GAAmBxxE,GACjC,IAAM/B,EAASwzE,GAAczxE,GAE7B,OAAK/B,GAAYA,aAAkBK,QAI5BgzE,GAAsBrzE,GAHpBA,CAIX,CAGO,SAASwzE,GAAczxE,GAC5B,OAOF,SAA2BA,GACzB,MAAwB,iBAAVA,KAAwBA,GAAS,WAAYA,CAC7D,CATM0xE,CAAkB1xE,GACbA,EAAM/B,OAGR+B,CACT,CRqdAyrE,GAAOnpB,OAASA,GAChBmpB,GAAOuD,iBAPP,SAA0BzH,GACtB,IAAKnB,GACD,MAAM,IAAIz1E,MAAM,mDAEpBy1E,GAAkBmB,EACtB,ESvcA,IC9CIvqB,GD+CS20B,GAAA,WAiBJ,SAAAA,EACL//B,EACAggC,EAEAC,QAAA,IAAAA,IAAAA,EAAsBZ,IAEtBn/E,KAAKggF,cAAgB,EACrBhgF,KAAKigF,YAAc,EACnBjgF,KAAKkgF,QAAU,GAGflgF,KAAKmgF,SAAWL,EAAgB97B,QAAU,IAC1ChkD,KAAKogF,WAAaN,EAAgBrtE,UAAY,IAC9CzS,KAAKqgF,cAAgBP,EAAgBQ,cAAgB,IACrDtgF,KAAKugF,QAAUzgC,EACf9/C,KAAKwgF,gBAAkBV,EAAgB1X,eACvCpoE,KAAK+/E,oBAAsBA,CAC7B,CAEF,IAAAU,EAAAZ,EAAApiF,UAwLE,OAxLFgjF,EACSC,aAAA,WAAqB,IRxED31C,EQwEC41C,EAAA,KACpBC,GRzEmB71C,EQyEc,WAErC41C,EAAKX,cAAgBa,IAC3B,ER1EO9vD,KACHA,GAAW,GAeb7lB,EAAKpD,GAAQ,QAAQ,SAAUg5E,GAC7B,OAAO,WACL,GAAI/vD,GACF,IACEA,GAASxwB,SAAQ,SAAAgR,GAAA,OAAWA,GAAS,GACrC,OAAOhU,GACjB,CAEM,QAAAwjF,EAAAx6E,UAAAlF,OAPkB2pB,EAAI,IAAAxiB,MAAAu4E,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAJh2D,EAAIg2D,GAAAz6E,UAAAy6E,GAStB,OAAOF,EAAmBt6E,MAAMsB,GAAQkjB,EAC9C,CACA,KAvBE+F,GAAS9vB,KAAK8pC,GAEP,WACL,IAAM2jB,EAAM39B,GAAWA,GAAS9E,QAAQ8e,IAAO,EAC3C2jB,GAAO,GACR39B,GAAiC/a,OAAO04C,EAAK,EAEpD,GQgEI1uD,KAAKihF,UAAY,WACfL,IAEAD,EAAKT,QAAU,GACfS,EAAKX,cAAgB,EACrBW,EAAKV,YAAc,CACzB,CACE,EAEFQ,EACSS,gBAAA,WACDlhF,KAAKihF,WACPjhF,KAAKihF,YAGHjhF,KAAKmhF,oBACPpqD,aAAa/2B,KAAKmhF,mBAEtB,EAEFV,EACSW,YAAA,SAAYlhE,EAAwBm/B,GACzC,IAiKG,SAAuBA,EAAmB+oB,GAC/C,OAAKiZ,GAAgBr2E,SAASq0C,EAAKj2C,WAKd,UAAjBi2C,EAAKj2C,UAAwB,CAAC,SAAU,UAAU4B,SAASq0C,EAAK11C,aAAa,SAAW,QAQzE,MAAjB01C,EAAKj2C,WACJi2C,EAAKwN,aAAa,aAAgBxN,EAAKwN,aAAa,WAA6C,UAAhCxN,EAAK11C,aAAa,gBAKlFy+D,IAAkB/oB,EAAKnmC,QAAQkvD,KAKrC,CA1LQkZ,CAAcjiC,EAAMr/C,KAAKwgF,kBA4LjC,SAA2BtgE,GACzB,SAAUA,EAAWnR,MAA0C,iBAA3BmR,EAAWnR,KAAK+1D,SAAuB5kD,EAAWtM,UACxF,CA9LsD2tE,CAAkBrhE,GAApE,CAIA,IAAMshE,EAAkB,CACtB5tE,UAAWsrE,GAAah/D,EAAWtM,WACnC6tE,gBAAiBvhE,EAEjBwhE,WAAY,EACZriC,KAAAA,GAKAr/C,KAAKkgF,QAAQr1E,MAAK,SAAA+pC,GAAM,OAAGA,EAAMyK,OAASmiC,EAASniC,MAAQx6C,KAAKgO,IAAI+hC,EAAMhhC,UAAY4tE,EAAS5tE,WAAa,CAAC,MAK/G5T,KAAKkgF,QAAQj/E,KAAKugF,GAGU,IAAxBxhF,KAAKkgF,QAAQ7+E,QACfrB,KAAK2hF,uBArBP,CAuBF,EAEFlB,EACSmB,iBAAA,SAAiBhuE,QAAU,IAAVA,IAAAA,EAAY3B,KAAKC,OACvClS,KAAKggF,cAAgBd,GAAatrE,EACpC,EAEF6sE,EACSoB,eAAA,SAAejuE,QAAU,IAAVA,IAAAA,EAAY3B,KAAKC,OACrClS,KAAKigF,YAAcf,GAAatrE,EAClC,EAEF6sE,EACSqB,cAAA,SAAczlD,GACnB,IAAMgjB,EAAOmgC,GAAsBnjD,GACnCr8B,KAAK+hF,kBAAkB1iC,EACzB,EAEFohC,EACUsB,kBAAA,SAAkB1iC,GACxBr/C,KAAKgiF,WAAW3iC,GAAM9+C,SAAQ,SAAAq0C,GAC5BA,EAAM8sC,YACZ,GACE,EAEFjB,EACUuB,WAAA,SAAW3iC,GACjB,OAAOr/C,KAAKkgF,QAAQz2E,QAAO,SAAAmrC,GAAM,OAAGA,EAAMyK,OAASA,CAAI,GACzD,EAEFohC,EACUwB,aAAA,WAAqB,IAAAC,EAAA,KACrBC,EAA0B,GAE1BjwE,EAAM2uE,KAEZ7gF,KAAKkgF,QAAQ3/E,SAAQ,SAAAq0C,IACdA,EAAMwtC,eAAiBF,EAAKlC,gBAC/BprC,EAAMwtC,cAAgBxtC,EAAMhhC,WAAasuE,EAAKlC,cAAgBkC,EAAKlC,cAAgBprC,EAAMhhC,eAAYjQ,IAElGixC,EAAMytC,aAAeH,EAAKjC,cAC7BrrC,EAAMytC,YAAcztC,EAAMhhC,WAAasuE,EAAKjC,YAAciC,EAAKjC,YAAcrrC,EAAMhhC,eAAYjQ,GAI7FixC,EAAMhhC,UAAYsuE,EAAK/B,UAAYjuE,GACrCiwE,EAAelhF,KAAK2zC,EAE5B,IAGI,IAAK,IAAL0tC,EAAA,EAAAC,EAAoBJ,EAAcG,EAAAC,EAAAlhF,OAAAihF,IAAE,CAA/B,IAAM1tC,EAAM2tC,EAAAD,GACT5zB,EAAM1uD,KAAKkgF,QAAQj0D,QAAQ2oB,GAE7B8Z,GAAO,IACT1uD,KAAKwiF,qBAAqB5tC,GAC1B50C,KAAKkgF,QAAQlqE,OAAO04C,EAAK,GAE7B,CAGI1uD,KAAKkgF,QAAQ7+E,QACfrB,KAAK2hF,sBAET,EAEFlB,EACU+B,qBAAA,SAAqB5tC,GAC3B,IAAMkL,EAAS9/C,KAAKugF,QACdkC,EAAY7tC,EAAMytC,aAAeztC,EAAMytC,aAAeriF,KAAKqgF,cAC3DqC,EAAc9tC,EAAMwtC,eAAiBxtC,EAAMwtC,eAAiBpiF,KAAKogF,WAEjEuC,GAAeF,IAAcC,EAC3BhB,EAAgC9sC,EAAhC8sC,WAAYD,EAAoB7sC,EAApB6sC,gBAGpB,GAAIkB,EAAJ,CAGE,IAAMC,EAAmF,IAAhE/9E,KAAKgnC,IAAI+I,EAAMwtC,eAAiBpiF,KAAKmgF,SAAUngF,KAAKmgF,UACvE0C,EAAYD,EAAmC,IAAhB5iF,KAAKmgF,SAAkB,WAAa,UAEnEjgE,EAAmC,CACvCzgB,KAAM,UACNsM,QAAS01E,EAAgB11E,QACzB6H,UAAW6tE,EAAgB7tE,UAC3BqoB,SAAU,uBACVltB,KAAI3I,EAAA,GACCq7E,EAAgB1yE,KAAI,CACvBuN,IAAKxU,GAAOstB,SAASC,KACrBytD,MAAOhjC,EAAOijC,kBACdH,iBAAAA,EACAC,UAAAA,EAGAnB,WAAYA,GAAc,KAI9B1hF,KAAK+/E,oBAAoBjgC,EAAQ5/B,EAEnC,MAGA,GAAIwhE,EAAa,EAAG,CAClB,IAAMxhE,EAAoC,CACxCzgB,KAAM,UACNsM,QAAS01E,EAAgB11E,QACzB6H,UAAW6tE,EAAgB7tE,UAC3BqoB,SAAU,gBACVltB,KAAI3I,EAAA,GACCq7E,EAAgB1yE,KAAI,CACvBuN,IAAKxU,GAAOstB,SAASC,KACrBytD,MAAOhjC,EAAOijC,kBACdrB,WAAAA,EACAv4C,QAAQ,KAIZnpC,KAAK+/E,oBAAoBjgC,EAAQ5/B,EACnC,CACF,EAEFugE,EACUkB,qBAAA,WAA6B,IAAAqB,EAAA,KAC/BhjF,KAAKmhF,oBACPpqD,aAAa/2B,KAAKmhF,oBAGpBnhF,KAAKmhF,mBAAqBjyD,YAAW,kBAAM8zD,EAAKf,cAAc,GAAE,IAClE,EAAApC,CAAA,CA5NW,GA+NPwB,GAAkB,CAAC,IAAK,SAAU,SAmCxC,SAASR,KACP,OAAO5uE,KAAKC,MAAQ,GACtB,CE9SO,SAAS+wE,GACd/iE,GAEA,OAAA9Z,EAAA,CACEwN,UAAW3B,KAAKC,MAAQ,IACxBzS,KAAM,WACHygB,EAEP,EDZA,SAAWgrC,GACPA,EAASA,EAAmB,SAAI,GAAK,WACrCA,EAASA,EAAuB,aAAI,GAAK,eACzCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAkB,QAAI,GAAK,SACvC,CAPD,CAOGA,KAAaA,GAAW,CAAC,IEN5B,IAAMg4B,GAAuB,IAAI7hB,IAAI,CACnC,KACA,QACA,aACA,OACA,OACA,MACA,QACA,eACA,cACA,WACA,gBACA,0BAMK,SAAS8hB,GAAsB7iD,GACpC,IAAM/7B,EAA+B,CAAC,EACtC,IAAK,IAAMN,KAAOq8B,EAChB,GAAI4iD,GAAqBptE,IAAI7R,GAAM,CACjC,IAAIm/E,EAAgBn/E,EAER,gBAARA,GAAiC,iBAARA,IAC3Bm/E,EAAgB,UAGlB7+E,EAAI6+E,GAAiB9iD,EAAWr8B,EAClC,CAGF,OAAOM,CACT,CCiBO,SAAS8+E,GAAqBl3E,EAAqBJ,GACxD,IAAM+4D,EAAS6U,GAAOnpB,OAAOlF,MAAMn/C,GAC7BkzC,EAAOylB,GAAU6U,GAAOnpB,OAAO5E,QAAQkZ,GACvC5Y,EAAO7M,GAAQs6B,GAAOnpB,OAAO/E,QAAQpM,GACrChjB,EAAU6vB,GAoDmB,SAAA7M,GACA,OAAAA,EAAA5/C,OAAAyrD,GAAA1+C,OACA,CAtDX82E,CAAUp3B,GAAQA,EAAO,KAEjD,MAAO,CACLngD,QAAAA,EACAgD,KAAMstB,EACF,CACEyoC,OAAAA,EACAzlB,KAAM,CACJz7C,GAAIkhE,EACJ17D,QAASizB,EAAQjzB,QACjBgrD,YAAa5rD,MAAM2yB,KAAKkB,EAAQ0vB,YAC7BniD,KAAI,SAACy1C,GAAI,OAA2BA,EAAK5/C,OAASyrD,GAAS0M,MAAQvY,EAAK+U,WAAW,IACnF3qD,OAAOjC,SACPoC,KAAI,SAAA6iD,GAAK,OAAIA,EAAgBj0C,MAAM,IACnCzP,KAAK,IACRu3B,WAAY6iD,GAAsB9mD,EAAQiE,cAG9C,CAAE,EAEV,CC5DA,IAAMijD,GAGF,CAEFnpD,SAuFS,SACAiS,GAEA,IACAxC,EASAwC,EATAxC,UACAqP,EAQA7M,EARA6M,cACAz3C,EAOA4qC,EAPA5qC,KACA24C,EAMA/N,EANA+N,YACA7X,EAKA8J,EALA9J,UACAihD,EAIAn3C,EAJAm3C,gBACAC,EAGAp3C,EAHAo3C,gBACAC,EAEAr3C,EAFAq3C,eACAC,EACAt3C,EADAs3C,aAIA,iCAAA34E,SAAAkuC,GACA,KAGA,CACAz5C,KAAAoqC,EAAA,IAAAqP,EACA3C,MAAAoD,GAAApX,GACAf,IAAAmY,GAAAS,GACA34C,KAAAA,EACAsN,KAAA,CACAowC,KAAAwkC,EACAt7B,WAAAq7B,EACAF,gBAAAA,EACAC,gBAAAA,GAGA,EAtHTG,MA4BF,SAA0Bv3C,GACxB,IAAQn4B,EAAyCm4B,EAAzCn4B,SAAU21B,EAA+BwC,EAA/BxC,UAAWpoC,EAAoB4qC,EAApB5qC,KAEvB80C,EAAQoD,GAFmCtN,EAAd9J,WAGnC,MAAO,CACL9iC,KAAMoqC,EACNpoC,KAAAA,EACA80C,MAAAA,EACA/U,IAAK+U,EAAQriC,EACbnF,UAAMpL,EAEV,EArCEgmC,WAuCF,SAA+B0C,GAC7B,IACExC,EAeEwC,EAfFxC,UACApoC,EAcE4qC,EAdF5qC,KACA+hF,EAaEn3C,EAbFm3C,gBACAtvE,EAYEm4B,EAZFn4B,SACA2vE,EAWEx3C,EAXFw3C,YACAJ,EAUEp3C,EAVFo3C,gBACAK,EASEz3C,EATFy3C,2BACAC,EAQE13C,EARF03C,yBACAC,EAOE33C,EAPF23C,eACAC,EAME53C,EANF43C,eACAC,EAKE73C,EALF63C,aACAC,EAIE93C,EAJF83C,cACA5hD,EAGE8J,EAHF9J,UACAohD,EAEEt3C,EAFFs3C,aACAlkF,EACE4sC,EADF5sC,KAIF,OAAiB,IAAbyU,EACK,KAGF,CACLzU,KAAOoqC,EAAA,IAAApqC,EACA82C,MAAAoD,GAAApX,GACAf,IAAAmY,GAAAkqC,GACApiF,KAAAA,EACAsN,KAAA,CACAowC,KAAAwkC,EACAH,gBAAAA,EACAC,gBAAAA,EACAvvE,SAAAA,EACA8vE,eAAAA,EACAF,2BAAAA,EACAC,yBAAAA,EACAE,eAAAA,EACAC,aAAAA,EACAL,YAAAA,EACAM,cAAAA,GAGA,GAtEX,SAASC,GAAuB/3C,GAC9B,OAAKk3C,GAAYl3C,EAAMxC,WAIhB05C,GAAYl3C,EAAMxC,WAAWwC,GAH3B,IAIX,CAEA,SAASsN,GAAgB5F,GAGvB,QAASvhC,IAAgC1K,GAAOsK,YAAYE,YAAcyhC,GAAQ,GACpF,CCzCO,ICJMswC,GAAA,SAAAxiC,GACJ,SAAAwiC,IAAc,OACnBxiC,EAAAliD,KAAA,8CAA+C6pD,GAA4B,MAAI,IACjF,QAAA7qB,GAAA0lD,EAAAxiC,GAAAwiC,CAAA,CAHW,CAGXjjC,GAHgDviD,QCMrCylF,GAAA,WASJ,SAAAA,IACLtkF,KAAKukF,OAAS,GACdvkF,KAAKwkF,WAAa,EAClBxkF,KAAKykF,aAAc,CACrB,CAEF,IAAAC,EAAAJ,EAAA7mF,UAsDE,OA5CFinF,EACShL,QAAA,WACL15E,KAAKukF,OAAS,EAChB,EAEFG,EACeC,SAAQ,eAAAC,EAAAhkC,GAAA3jD,KAAAA,MAAd,SAAA4nF,EAAe32E,GAAK,IAAA42E,EAAA,OAAA7nF,KAAAA,MAAA,SAAA8nF,GAAA,cAAAA,EAAA3iF,KAAA2iF,EAAAjkF,MAAA,OAEG,GADtBgkF,EAAYtvE,KAAKC,UAAUvH,GAAO7M,OACxCrB,KAAKwkF,YAAcM,IACf9kF,KAAKwkF,WAAah7B,IAA4B,CAAAu7B,EAAAjkF,KAAA,cAC1C,IAAIujF,GAA8B,OAG1CrkF,KAAKukF,OAAOtjF,KAAKiN,GAAM,wBAAA62E,EAAAxiF,OAAA,GAAAsiF,EAAA,UAPJ,OAQrB,SARqBG,GAAA,OAAAJ,EAAAp+E,MAAC,KAADD,UAAA,KAUvBm+E,EACShiF,OAAA,WAA0B,IAAAuiF,EAAA,KAC/B,OAAO,IAAIljF,SAAgB,SAAArB,GAIzB,IAAMwkF,EAAYD,EAAKV,OACvBU,EAAKn/D,QACLplB,EAAQ8U,KAAKC,UAAUyvE,GAC7B,GACE,EAEFR,EACS5+D,MAAA,WACL9lB,KAAKukF,OAAS,GACdvkF,KAAKwkF,WAAa,EAClBxkF,KAAKykF,aAAc,CACrB,EAEFC,EACSS,qBAAA,WACL,IAAMvxE,EAAY5T,KAAKukF,OAAO36E,KAAI,SAAAsE,GAAA,OAASA,EAAM0F,SAAS,IAAE+f,OAAO,GAEnE,OAAK/f,EAIEqrE,GAAcrrE,GAHZ,IAIX,EAAAmrB,GAAAulD,EAAA,EAAArgF,IAAA,YAAAC,IArDO,WACL,OAAOlE,KAAKukF,OAAOljF,OAAS,CAC9B,GAEF,CAAA4C,IAAA,OAAAC,IACS,WACL,MAAO,MACT,KAvBW,GCCAkhF,GAAA,WAKJ,SAAAA,EAAYC,GACjBrlF,KAAKslF,QAAUD,EACfrlF,KAAKitD,IAAM,CACb,CAEF,IAAAs4B,EAAAH,EAAA3nF,UAsFE,OAtFF8nF,EAISC,YAAA,WAA6B,IAAAC,EAAA,KAElC,OAAIzlF,KAAK0lF,sBAIT1lF,KAAK0lF,oBAAsB,IAAI3jF,SAAQ,SAACrB,EAAS8O,GAC/Ci2E,EAAKH,QAAQpvD,iBACX,WACA,SAAAyvD,GAAQA,EAAL52E,KAC4B62E,QAC3BllF,IAEA8O,GAEH,GACD,CAAEw7B,MAAM,IAGVy6C,EAAKH,QAAQpvD,iBACX,SACA,SAAArE,GACEriB,EAAOqiB,EACR,GACD,CAAEmZ,MAAM,GAEhB,KAvBahrC,KAAK0lF,mBA0BhB,EAEFH,EAGS7L,QAAA,WAEL15E,KAAKslF,QAAQO,WACf,EAEFN,EAGSxI,YAAA,SAAeh+E,EAAiCC,GAAwC,IAAA8mF,EAAA,KACvFliF,EAAK5D,KAAK+lF,qBAEhB,OAAO,IAAIhkF,SAAQ,SAACrB,EAAS8O,GAC3B,IAAM4mB,EAAW,SAAF4vD,GAAoC,IAC3C7rD,EADY6rD,EAAAj3E,KAEdorB,EAASp7B,SAAWA,GAMpBo7B,EAASv2B,KAAOA,IAKpBkiF,EAAKR,QAAQn6C,oBAAoB,UAAW/U,GAEvC+D,EAASyrD,QAQdllF,EAAQy5B,EAASA,UAJf3qB,EAAO,IAAI3Q,MAAM,gCAK3B,EAIMinF,EAAKR,QAAQpvD,iBAAiB,UAAWE,GACzC0vD,EAAKR,QAAQvI,YAAY,CAAEn5E,GAAAA,EAAI7E,OAAAA,EAAQC,IAAAA,GAC7C,GACE,EAEFumF,EACUQ,mBAAA,WACN,OAAO/lF,KAAKitD,KACd,EAAAm4B,CAAA,CAhGW,GCIAa,GAAA,WAQJ,SAAAA,EAAYZ,GACjBrlF,KAAKslF,QAAU,IAAIF,GAAcC,GACjCrlF,KAAKkmF,mBAAqB,KAC1BlmF,KAAKwkF,WAAa,EAClBxkF,KAAKykF,aAAc,CACrB,CAEF,IAAA0B,EAAAF,EAAAxoF,UAgF8B,OAtE9B0oF,EAISX,YAAA,WACL,OAAOxlF,KAAKslF,QAAQE,aACtB,EAEFW,EAGSzM,QAAA,WACL15E,KAAKslF,QAAQ5L,SACf,EAEFyM,EAKSxB,SAAA,SAASz2E,GACd,IAAM0F,EAAYqrE,GAAc/wE,EAAM0F,aACjC5T,KAAKkmF,oBAAsBtyE,EAAY5T,KAAKkmF,sBAC/ClmF,KAAKkmF,mBAAqBtyE,GAG5B,IAAM7E,EAAOyG,KAAKC,UAAUvH,GAG5B,OAFAlO,KAAKwkF,YAAcz1E,EAAK1N,OAEpBrB,KAAKwkF,WAAah7B,GACbznD,QAAQyN,OAAO,IAAI60E,IAGrBrkF,KAAKomF,mBAAmBr3E,EACjC,EAEFo3E,EAGSzjF,OAAA,WACL,OAAO1C,KAAKqmF,gBACd,EAEFF,EACSrgE,MAAA,WACL9lB,KAAKkmF,mBAAqB,KAC1BlmF,KAAKwkF,WAAa,EAClBxkF,KAAKykF,aAAc,EAGnBzkF,KAAKslF,QAAQvI,YAAY,SAASn8E,KAAK,MAAM,SAAArD,GAEjD,GACE,EAEF4oF,EACShB,qBAAA,WACL,OAAOnlF,KAAKkmF,kBACd,EAEFC,EAGUC,mBAAA,SAAmBr3E,GACzB,OAAO/O,KAAKslF,QAAQvI,YAAkB,WAAYhuE,EACpD,EAEFo3E,EAGgBE,eAAc,eAAAC,EAAA1lC,GAAA3jD,KAAAA,MAApB,SAAAspF,IAAA,IAAApsD,EAAA,OAAAl9B,KAAAA,MAAA,SAAAupF,GAAA,cAAAA,EAAApkF,KAAAokF,EAAA1lF,MAAA,cAAA0lF,EAAA1lF,KAAA,EACiBd,KAAKslF,QAAQvI,YAAwB,UAAS,OAGlD,OAHb5iD,EAAAqsD,EAAApnF,KAENY,KAAKkmF,mBAAqB,KAC1BlmF,KAAKwkF,WAAa,EAACgC,EAAAjnF,OAAA,SAEZ46B,GAAQ,wBAAAqsD,EAAAjkF,OAAA,GAAAgkF,EAAA,UANW,OAO5B,WAP4B,OAAAD,EAAA9/E,MAAC,KAADD,UAAA,KAAAw4B,GAAAknD,EAAA,EAAAhiF,IAAA,YAAAC,IA/ErB,WACL,QAASlE,KAAKkmF,kBAChB,GAEF,CAAAjiF,IAAA,OAAAC,IACS,WACL,MAAO,QACT,KAvBW,GCAAuiF,GAAA,WAMJ,SAAAA,EAAYpB,GACjBrlF,KAAK0mF,UAAY,IAAIpC,GACrBtkF,KAAK2mF,aAAe,IAAIV,GAA6BZ,GACrDrlF,KAAK4mF,MAAQ5mF,KAAK0mF,UAElB1mF,KAAK6mF,6BAA+B7mF,KAAK8mF,uBAC3C,CAEF,IAAAC,EAAAN,EAAAhpF,UAyE0C,OAtD1CspF,EACSrN,QAAA,WACL15E,KAAK0mF,UAAUhN,UACf15E,KAAK2mF,aAAajN,SACpB,EAEFqN,EACSjhE,MAAA,WACL,OAAO9lB,KAAK4mF,MAAM9gE,OACpB,EAEFihE,EACS5B,qBAAA,WACL,OAAOnlF,KAAK4mF,MAAMzB,sBACpB,EAEF4B,EAKSpC,SAAA,SAASz2E,GACd,OAAOlO,KAAK4mF,MAAMjC,SAASz2E,EAC7B,EAEF64E,EACerkF,OAAM,eAAAskF,EAAApmC,GAAA3jD,KAAAA,MAAZ,SAAAgqF,IAAA,OAAAhqF,KAAAA,MAAA,SAAAiqF,GAAA,cAAAA,EAAA9kF,KAAA8kF,EAAApmF,MAAA,cAAAomF,EAAApmF,KAAA,EAECd,KAAKmnF,uBAAsB,cAAAD,EAAA3nF,OAAA,SAE1BS,KAAK4mF,MAAMlkF,UAAQ,wBAAAwkF,EAAA3kF,OAAA,GAAA0kF,EAAA,UAJT,OAKnB,WALmB,OAAAD,EAAAxgF,MAAC,KAADD,UAAA,KAOrBwgF,EACSI,qBAAA,WACL,OAAOnnF,KAAK6mF,4BACd,EAEFE,EACgBD,sBAAqB,eAAAM,EAAAxmC,GAAA3jD,KAAAA,MAA3B,SAAAoqF,IAAA,OAAApqF,KAAAA,MAAA,SAAAqqF,GAAA,cAAAA,EAAAllF,KAAAklF,EAAAxmF,MAAA,cAAAwmF,EAAAllF,KAAA,EAAAklF,EAAAxmF,KAAA,EAEEd,KAAK2mF,aAAanB,cAAa,OAAA8B,EAAAxmF,KAAA,eAImD,OAJnDwmF,EAAAllF,KAAA,EAAAklF,EAAAC,GAAAD,EAAA,SAImDA,EAAA/nF,OAAA,wBAAA+nF,EAAAxmF,KAAA,GAKpFd,KAAKwnF,6BAA4B,yBAAAF,EAAA/kF,OAAA,GAAA8kF,EAAA,kBAXN,OAYnC,WAZmC,OAAAD,EAAA5gF,MAAC,KAADD,UAAA,KAcrCwgF,EACgBS,2BAA0B,eAAAC,EAAA7mC,GAAA3jD,KAAAA,MAAhC,SAAAyqF,IAAA,IAAAC,EAAApD,EAAAE,EAAAmD,EAAAC,EAAAC,EAAA55E,EAAA,OAAAjR,KAAAA,MAAA,SAAA8qF,GAAA,cAAAA,EAAA3lF,KAAA2lF,EAAAjnF,MAAA,OAIN,IAJM6mF,EAC0B3nF,KAAK0mF,UAA7BnC,EAAMoD,EAANpD,OAAQE,EAAAkD,EAAAlD,YAEVmD,EAAoC,GAC1CC,EAAAh8D,GAAoB04D,KAAMuD,EAAAD,KAAA/oF,MAAfoP,EAAM45E,EAAAxpF,MACfspF,EAAiB3mF,KAAKjB,KAAK2mF,aAAahC,SAASz2E,IASvD,OANIlO,KAAK2mF,aAAalC,YAAcA,EAIhCzkF,KAAK4mF,MAAQ5mF,KAAK2mF,aAEtBoB,EAAA3lF,KAAA,EAAA2lF,EAAAjnF,KAAA,EAEYiB,QAAQmmD,IAAI0/B,GAAiB,OAAAG,EAAAjnF,KAAA,iBAAAinF,EAAA3lF,KAAA,GAAA2lF,EAAAR,GAAAQ,EAAA,SAEuD,yBAAAA,EAAAxlF,OAAA,GAAAmlF,EAAA,mBAlBtD,OAoBxC,WApBwC,OAAAD,EAAAjhF,MAAC,KAADD,UAAA,KAAAw4B,GAAA0nD,EAAA,EAAAxiF,IAAA,OAAAC,IAxEjC,WACL,OAAOlE,KAAK4mF,MAAMnnF,IACpB,GAEF,CAAAwE,IAAA,YAAAC,IACS,WACL,OAAOlE,KAAK4mF,MAAMoB,SACpB,GAEF,CAAA/jF,IAAA,cAAAC,IACS,WACL,OAAOlE,KAAK4mF,MAAMnC,WACpB,EACFngF,IACS,SAAgBhG,GACrB0B,KAAK4mF,MAAMnC,YAAcnmF,CAC3B,KA/BW,GCXN,SAAS2pF,KACd,IAEE,MAAO,mBAAoBngF,MAAYA,GAAOogF,eAC9C,MAAM3qF,GACN,OAAO,CACT,CACF,CCJO,SAAS4qF,GAAU3mE,GACxB,YAAmB7d,IAAf6d,GAKG3c,KAAK6I,SAAW8T,CACzB,CCNO,SAAS+I,GAAYnX,GAC1B,IAAMlB,EAAMD,KAAKC,MASjB,MAAO,CACLtO,GATSwP,EAAQxP,IAAM0J,IAUvB2G,QARcb,EAAQa,SAAW/B,EASjCk2E,aARmBh1E,EAAQg1E,cAAgBl2E,EAS3Cm2E,UARgBj1E,EAAQi1E,WAAa,EASrCtuE,QARc3G,EAAQ2G,QAStBuuE,kBARwBl1E,EAAQk1E,kBAUpC,CClBO,SAASC,GAAYn1E,GAC1B,GAAK60E,KAIL,IACEngF,GAAOogF,eAAeM,QAAQp/B,GAAoB5zC,KAAKC,UAAUrC,IACjE,MAAM7V,GACV,CAEA,CCAO,SAASkrF,GAAaC,EAAAphD,GAGlB,IAFPqhD,EAAiBD,EAAjBC,kBAAmBC,EAAcF,EAAdE,eAAcC,EAAAH,EAAEI,cAAAA,OAAc,IAAAD,GAAEA,EACnDP,QADmD,IAAAhhD,EACG,CAAE,EAAAA,GAAxDghD,kBAEIvuE,EAbD,SAA8B4uE,EAA2BC,GAC9D,OAAOT,GAAUQ,GAAqB,YAAYC,GAAiB,QACrE,CAWkBG,CAAqBJ,EAAmBC,GAClDx1E,EAAUmX,GAAY,CAC1BxQ,QAAAA,EACAuuE,kBAAAA,IAOF,OAJIQ,GACFP,GAAYn1E,GAGPA,CACT,CC5BO,SAAS41E,GACdC,EACAC,EACAC,GAGA,YAHU,IAAVA,IAAAA,GAAsB,IAAIl3E,MAGN,OAAhBg3E,QAAmCtlF,IAAXulF,GAAwBA,EAAS,GAK9C,IAAXA,GAIGD,EAAcC,GAAUC,CACjC,CCdO,SAASC,GACdh2E,EAAOi2E,GAME,IAJPC,EAAiBD,EAAjBC,kBACAC,EAAiBF,EAAjBE,kBAAiBC,EAAAH,EACjBF,WAAAA,OAAA,IAAAK,EAAav3E,KAAKC,MAAKs3E,EAGzB,OAEER,GAAU51E,EAAQa,QAASq1E,EAAmBH,IAG9CH,GAAU51E,EAAQg1E,aAAcmB,EAAmBJ,EAEvD,CCjBO,SAASM,GACdr2E,EAAOs2E,GAIP,QAAKN,GAAiBh2E,EAAS,CAAEm2E,kBAHdG,EAAjBH,kBAGkDD,kBAH/BI,EAAAJ,sBAQG,WAApBl2E,EAAQ2G,SAA8C,IAAtB3G,EAAQi1E,UAK9C,CCTO,SAASsB,GAAmBC,EAYjCC,GAVgBD,EAAdE,eAWO,IAVPP,EAAiBK,EAAjBL,kBACAD,EAAiBM,EAAjBN,kBACAhB,EAAiBsB,EAAjBtB,kBASIyB,EAAkBF,EAAef,eCflC,WACL,IAAKb,KACH,OAAO,KAGT,IAEE,IAAM+B,EAA2BliF,GAAOogF,eAAe+B,QAAQ7gC,IAE/D,OAAK4gC,EAQEz/D,GAJY/U,KAAKwzC,MAAMghC,IAHrB,KAQT,MAAMzsF,GACN,OAAO,IACT,CACF,CDN0D2sF,GAGxD,OAAKH,EAKAN,GAAqBM,EAAiB,CAAER,kBAAAA,EAAmBD,kBAAAA,IAKzDb,GAAcoB,EAAgB,CAAEvB,kBAAmByB,EAAgBnmF,KAJjEmmF,EAJAtB,GAAcoB,EAAgB,CAAEvB,kBAAAA,GAS3C,CEhBO,SAAS6B,GAAarqC,EAAyB5xC,EAAuBunE,GAC3E,QAAK2U,GAAetqC,EAAQ5xC,KAM5Bm8E,GAAUvqC,EAAQ5xC,EAAOunE,IAElB,EACT,CAkBA,SAEe4U,GAASC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjkF,MAAC,KAADD,UAAA,CAyCxB,SAAAkkF,KAFA,OAEAA,GAAA7pC,GAAA3jD,KAAAA,MAzCA,SAAAytF,EACE5qC,EACA5xC,EACAunE,GAAU,IAAAkV,EAAAC,EAAAr7E,EAAAmM,EAAA,OAAAze,KAAAA,MAAA,SAAA4tF,GAAA,cAAAA,EAAAzoF,KAAAyoF,EAAA/pF,MAAA,UAELg/C,EAAOgrC,YAAa,CAAFD,EAAA/pF,KAAA,eAAA+pF,EAAAtrF,OAAA,SACd,MAAI,OAcwF,GAdxFsrF,EAAAzoF,KAAA,EAIPqzE,GAAuC,WAAzB31B,EAAOirC,eACvBjrC,EAAOgrC,YAAYhlE,QAGjB2vD,IACF31B,EAAOgrC,YAAYrG,aAAc,GAG7BkG,EAAgB7qC,EAAOr/B,aAEvBmqE,EAA6BI,GAAmB98E,EAAOy8E,EAAcM,yBAE1C,CAAFJ,EAAA/pF,KAAA,eAAA+pF,EAAAtrF,OAAA,wBAAAsrF,EAAA/pF,KAAA,GAIlBg/C,EAAOgrC,YAAYnG,SAASiG,GAA2B,eAAAC,EAAAtrF,OAAA,SAAAsrF,EAAAzrF,MAAA,QAIlC,OAJkCyrF,EAAAzoF,KAAA,GAAAyoF,EAAAtD,GAAAsD,EAAA,SAE9Dt7E,EAASs7E,EAAAtD,IAASsD,EAAAtD,cAAiBlD,GAA+B,uBAAyB,WAE/DwG,EAAA/pF,KAAA,GAC5Bg/C,EAAOv9C,KAAK,CAAEgN,OAAAA,IAAS,SAEvBmM,EAASyE,OAGbzE,EAAOwpB,mBAAmB,qBAAsB,UAClD,yBAAA2lD,EAAAtoF,OAAA,GAAAmoF,EAAA,oBAEJlkF,MAAA,KAAAD,UAAA,CAGO,SAAS6jF,GAAetqC,EAAyB5xC,GACtD,IAAK4xC,EAAOgrC,aAAehrC,EAAOorC,aAAeprC,EAAO35C,YACtD,OAAO,EAGT,IAAMglF,EAAgBlM,GAAc/wE,EAAM0F,WAM1C,QAAIu3E,EAAgBrrC,EAAOsrC,SAASC,iBAAmBp5E,KAAKC,OAKxDi5E,EAAgBrrC,EAAO4U,aAAa42B,iBAAmBxrC,EAAOr/B,aAAa6oE,oBAG3ExpC,EAAOr/B,aAAamoB,aAAakhD,eAE5B,GAIX,CAEA,SAASkB,GACP98E,EACAzI,GAEA,IACE,GAAwB,mBAAbA,GApHf,SAAuByI,GACrB,OAAOA,EAAMzO,OAAS6/D,GAAU8W,MAClC,CAkH0CmV,CAAcr9E,GAClD,OAAOzI,EAASyI,EAElB,OAAO2jB,GAGP,OAAO,IACT,CAEA,OAAO3jB,CACT,CCrIO,SAASnH,GAAamH,GAC3B,OAAQA,EAAMzO,IAChB,CAGO,SAASknD,GAAmBz4C,GACjC,MAAsB,gBAAfA,EAAMzO,IACf,CAQO,SAAS+rF,GAAgBt9E,GAC9B,MAAsB,aAAfA,EAAMzO,IACf,CCTO,SAASgsF,GAAqB3rC,GAGnC,IAAM4rC,EAoER,WACE,IAAMhwE,EAASyE,KACf,IAAKzE,EACH,OAAO,EAGT,IAAMwgC,EAAYxgC,EAAOygC,eACzB,OAAKD,GAKFA,EAAUE,KAAkEuvC,4BAJtE,CAMX,CAlF4BC,GAE1B,OAAO,SAAC19E,EAAcs3C,GACpB,GAAK1F,EAAO35C,cAAiBY,GAAamH,IAAWy4C,GAAmBz4C,IAAxE,CAIA,IAAMm6C,EAAa7C,GAAgBA,EAAa6C,WAK5CqjC,KAAuBrjC,GAAcA,EAAa,KAAOA,GAAc,OAIvE1B,GAAmBz4C,GAS3B,SAAgC4xC,EAAyB5xC,GACvD,IAAM29E,EAAgB/rC,EAAO4U,aAKzBxmD,EAAMkR,UAAYlR,EAAMkR,SAASE,OAASpR,EAAMkR,SAASE,MAAM9E,UAAYqxE,EAAcC,SAAS3sC,KAAO,KAC3G0sC,EAAcC,SAAS/1E,IAAI7H,EAAMkR,SAASE,MAAM9E,SAEpD,CAjBMuxE,CAAuBjsC,EAAQ5xC,GAmBrC,SAA0B4xC,EAAyB5xC,GACjD,IAAM29E,EAAgB/rC,EAAO4U,aAc7B,GANIxmD,EAAMI,UAAYu9E,EAAcG,SAAS7sC,KAAO,KAClD0sC,EAAcG,SAASj2E,IAAI7H,EAAMI,UAKN,WAAzBwxC,EAAOirC,eAA+B78E,EAAM2M,MAAS3M,EAAM2M,KAAKghC,SAApE,CAIA,IAAQowC,EAAwBnsC,EAAOr/B,aAA/BwrE,qBAC2B,mBAAxBA,GAAuCA,EAAoB/9E,KAItEghB,YAAW,WAIT4wB,EAAOosC,2BACX,GAZE,CAaF,CA7CIC,CAAiBrsC,EAAQ5xC,GAhBzB,CAiBJ,CACA,CC9BO,SAASk+E,GACdtsC,EACAxoC,GAEA,OAAOA,EAAQ1N,KAAI,SAAAyiF,GAAsC,IAAnC5sF,EAAI4sF,EAAJ5sF,KAAM82C,EAAK81C,EAAL91C,MAAO/U,EAAG6qD,EAAH7qD,IAAK//B,EAAI4qF,EAAJ5qF,KAAMsN,EAAAs9E,EAAAt9E,KACtCorB,EAAW2lB,EAAOy/B,kBAAkB,CACxC9/E,KAAM6/D,GAAU8W,OAChBxiE,UAAW2iC,EACXxnC,KAAM,CACJi6B,IAAK,kBACLsI,QAAS,CACP32B,GAAIlb,EACJkiB,YAAalgB,EACb41B,eAAgBkf,EAChBze,aAAc0J,EACdzyB,KAAAA,MAMN,MAA2B,iBAAborB,EAAwBp4B,QAAQrB,QAAQ,MAAQy5B,CAClE,GACA,CCzBO,SAASmyD,GACdxsC,EACAvvC,GrDEK,IAA4B+L,EAAaiwE,EACxC7wE,EAKA8zB,EACA8D,EqDPDwM,EAAO35C,aAIG,OAAXoK,IrDJ6B+L,EqDQD/L,EAAO9O,KrDRO8qF,EsDMfpsE,KtDLzBzE,EACJ6wE,GA2BJ,SAAeA,GAEb,YAA0C5oF,IAAlC4oF,EAAoBpsE,SAC9B,CA9BmBqsE,CAAMD,GAEjBA,EAAYpsE,YACZosE,EACA/8C,EAAM9zB,GAAUA,EAAOiF,SACvB2yB,EAAS53B,GAAUA,EAAO+E,aAAa6yB,OAa/C,SAAkBh3B,EAAakzB,GAC7B,QAAOA,GAAMlzB,EAAItR,SAASwkC,EAAI/T,KAChC,CAbSgxD,CAASnwE,EAAKkzB,IAGvB,SAAqBlzB,EAAag3B,GAChC,QAAKA,GAIEqO,GAAoBrlC,KAASqlC,GAAoBrO,EAC1D,CAT+Bo5C,CAAYpwE,EAAKg3B,IqDG9CwM,EAAOw/B,WAAU,WAKf,OAJA8M,GAAuBtsC,EAAQ,CAACvvC,KAIzB,CACX,IACA,CEbO,SAASo8E,GACdn0D,EACAoY,GAEA,GAAKpY,EAIL,IACE,GAAoB,iBAATA,EACT,OAAOoY,EAAYE,OAAOtY,GAAMn3B,OAGlC,GAAIm3B,aAAgBo0D,gBAClB,OAAOh8C,EAAYE,OAAOtY,EAAK11B,YAAYzB,OAG7C,GAAIm3B,aAAgBq0D,SAAU,CAC5B,IAAMC,EAAcC,GAAmBv0D,GACvC,OAAOoY,EAAYE,OAAOg8C,GAAazrF,MACzC,CAEA,GAAIm3B,aAAgBw0D,KAClB,OAAOx0D,EAAK2mB,KAGd,GAAI3mB,aAAgBy0D,YAClB,OAAOz0D,EAAK00D,WAId,MAAM3vF,GACV,CAIA,CAGO,SAAS4vF,GAAyB/0D,GACvC,GAAKA,EAAL,CAIA,IAAM+mB,EAAOjqB,SAASkD,EAAQ,IAC9B,OAAOh3B,MAAM+9C,QAAQx7C,EAAYw7C,CAHjC,CAIF,CAGO,SAASiuC,GAAc50D,GAC5B,IACE,GAAoB,iBAATA,EACT,MAAO,CAACA,GAGV,GAAIA,aAAgBo0D,gBAClB,MAAO,CAACp0D,EAAK11B,YAGf,GAAI01B,aAAgBq0D,SAClB,MAAO,CAACE,GAAmBv0D,IAG7B,IAAKA,EACH,MAAO,MAAC70B,GAEV,MAAM8wB,GAEN,MAAO,MAAC9wB,EAAW,mBACrB,CAIA,MAAO,MAACA,EAAW,wBACrB,CAGO,SAAS0pF,GACdC,EACAC,GAEA,IAAKD,EACH,MAAO,CACL/uD,QAAS,CAAE,EACX4gB,UAAMx7C,EACN6pF,MAAO,CACLC,SAAU,CAACF,KAKjB,IAAMG,EAAAtnF,EAAA,GAAeknF,EAAKE,OACpBG,EAAmBD,EAAQD,UAAY,GAI7C,OAHAC,EAAQD,SAAA,GAAA/wE,OAAeixE,EAAkB,CAAAJ,IAEzCD,EAAKE,MAAQE,EACNJ,CACT,CAGO,SAASM,GACdnuF,EACAsP,GAEA,OAAKA,EAMsD,CACzDtP,KAAAA,EACA82C,MAJmFxnC,EAA7EsoB,eAIkB,IACxBmK,IALmFzyB,EAA7D+oB,aAKF,IACpBr2B,KANmFsN,EAA/CuN,IAOpCvN,KAAMpC,EAAkB,CACtB5N,OARiFgQ,EAA1ChQ,OASvCspD,WATiFt5C,EAAlCs5C,WAU/ChsC,QAViFtN,EAAtBsN,QAW3D8d,SAXiFprB,EAAborB,YAH/D,IAmBX,CAGO,SAAS0zD,GAAqCC,GACnD,MAAO,CACLvvD,QAAS,CAAE,EACX4gB,KAAM2uC,EACNN,MAAO,CACLC,SAAU,CAAC,gBAGjB,CAGO,SAASM,GACdxvD,EACAuvD,EACAt1D,GAEA,GAAKs1D,GAA4C,IAAhCtwF,OAAOwE,KAAKu8B,GAASl9B,OAAtC,CAIA,IAAKysF,EACH,MAAO,CACLvvD,QAAAA,GAIJ,IAAK/F,EACH,MAAO,CACL+F,QAAAA,EACA4gB,KAAM2uC,GAIV,IAAMR,EAAuC,CAC3C/uD,QAAAA,EACA4gB,KAAM2uC,GAGRE,EA8BF,SAA8Bx1D,GAI5B,IAAKA,GAAwB,iBAATA,EAClB,MAAO,CACLA,KAAAA,GAIJ,IAmCWtuB,EACA+jF,EACAC,EArCLC,EAAmB31D,EAAKn3B,OAASioD,GACjC8kC,GAmCKH,GADA/jF,EAlC+BsuB,GAmC/B,GACA01D,EAAAhkF,EAAAA,EAAA7I,OAAA,GAGA,MAAA4sF,GAAA,MAAAC,GAAA,MAAAD,GAAA,MAAAC,GArCX,GAAIC,EAAkB,CACpB,IAAME,EAAgB71D,EAAKl2B,MAAM,EAAGgnD,IAEpC,OAAI8kC,EACK,CACL51D,KAAM61D,EACNZ,SAAU,CAAC,yBAIR,CACLj1D,KAAO61D,EAAA,IACAZ,SAAA,mBAEA,CAEA,GAAAW,EACA,IAEA,OACA51D,KAFAhjB,KAAAwzC,MAAAxwB,GAIA,OAAA81D,GACA,CAIA,OACA91D,KAAAA,EAEA,CAzEgC+1D,CAAqB/1D,GAAlDg2D,EAAcR,EAApBx1D,KAAsBi1D,EAASO,EAATP,SAQ9B,OAPAH,EAAK90D,KAAOg2D,EACRf,GAAYA,EAASpsF,OAAS,IAChCisF,EAAKE,MAAQ,CACXC,SAAAA,IAIGH,CA5BP,CA6BF,CAGO,SAASmB,GAAkBlwD,EAAiCmwD,GACjE,OAAOlxF,OAAOwE,KAAKu8B,GAAShnB,QAAO,SAACo3E,EAAyC1qF,GAC3E,IAAMm/E,EAAgBn/E,EAAIsF,cAK1B,OAHImlF,EAAe1jF,SAASo4E,IAAkB7kD,EAAQt6B,KACpD0qF,EAAgBvL,GAAiB7kD,EAAQt6B,IAEpC0qF,CACR,GAAE,CAAE,EACP,CAEA,SAAS5B,GAAmB6B,GAI1B,OAAO,IAAIhC,gBAAgBgC,GAAU9rF,UACvC,CAwDa,SAAA+rF,GAAAvyE,EAAAwyE,GACA,IAAAl3C,EAMA,SAAAt7B,EAAAyyE,GAEA,QAFA,IAAAA,IAAAA,EAAAjnF,GAAAwO,SAAAy4E,SAEAzyE,EAAA5F,WAAA,YAAA4F,EAAA5F,WAAA,aAAA4F,EAAA5F,WAAA5O,GAAAstB,SAAAta,QACA,OAAAwB,EAEA,IAAA0yE,EAAA,IAAAn3C,IAAAv7B,EAAAyyE,GAGA,GAAAC,EAAAl0E,SAAA,IAAA+8B,IAAAk3C,GAAAj0E,OACA,OAAAwB,EAGA,IAAAs7B,EAAAo3C,EAAA35D,KAGA,OAAA/Y,EAAA88B,SAAA,MAAAxB,EAAAwB,SAAA,KACAxB,EAAAt1C,MAAA,MAGAs1C,CACA,CA1BAq3C,CAAA3yE,GAEA,OAAA7R,EAAAmtC,EAAAk3C,EACA,CC5Nb,SAAAI,KAFA,OAEAA,GAAAtuC,GAAA3jD,KAAAA,MAnBO,SAAAkyF,EACLjvE,EACAtO,EACA3J,GAAO,IAAA8G,EAAAwB,EAAA,OAAAtT,KAAAA,MAAA,SAAAmyF,GAAA,cAAAA,EAAAhtF,KAAAgtF,EAAAtuF,MAAA,cAAAsuF,EAAAhtF,KAAA,EAAAgtF,EAAAtuF,KAAA,EAMcuuF,GAAkBnvE,EAAYtO,EAAM3J,GAAQ,OAAzD8G,EAAAqgF,EAAAhwF,KAGAmR,EAASq9E,GAA4B,iBAAkB7+E,GAC7Du9E,GAAqBrkF,EAAQ63C,OAAQvvC,GAAO6+E,EAAAtuF,KAAA,gBAAAsuF,EAAAhtF,KAAA,EAAAgtF,EAAA7H,GAAA6H,EAAA,SAEqC,yBAAAA,EAAA7sF,OAAA,GAAA4sF,EAAA,mBAErF3oF,MAAA,KAAAD,UAAA,CAyBA,SAEe8oF,GAAiBC,EAAAC,EAAAC,GAAA,OAAAC,GAAAjpF,MAAC,KAADD,UAAA,UAAAkpF,KAmChC,OAnCgCA,GAAA7uC,GAAA3jD,KAAAA,MAAhC,SAAAyyF,EACExvE,EACAtO,EACA3J,GAAO,IAAAiK,EAAAy9E,EAAAt4D,EAAAu4D,EAAA93D,EAAA+3D,EAAAvzE,EAAAvd,EAAA+wF,EAAAznC,EAAA0nC,EAAAC,EAAAC,EAAA5zE,EAAA8d,EAAA,OAAAl9B,KAAAA,MAAA,SAAAizF,GAAA,cAAAA,EAAA9tF,KAAA8tF,EAAApvF,MAAA,OAoBkD,OAhBnDoR,EAAMD,KAAKC,MAAKy9E,EAC+B/9E,EAA7CylB,eAAAA,OAAA,IAAAs4D,EAAiBz9E,EAAGy9E,EAAAC,EAAyBh+E,EAAvBkmB,aAAAA,OAAA,IAAA83D,EAAe19E,EAAA09E,EAAAC,EAQzC3vE,EAAWnR,KALbuN,EAAGuzE,EAAHvzE,IACAvd,EAAM8wF,EAAN9wF,OAAM+wF,EAAAD,EACNh4D,YAAawwB,OAAW,IAAAynC,EAAE,EAACA,EACRC,EAAeF,EAAlCM,kBACoBH,EAAgBH,EAApCO,mBAGIH,EACJpB,GAAWvyE,EAAKrU,EAAQooF,0BAA4BxB,GAAWvyE,EAAKrU,EAAQqoF,uBAExEj0E,EAAU4zE,EACZM,GAAgBtoF,EAAS2J,EAAKvH,MAAO0lF,GACrClC,GAAqCkC,GAAgBG,EAAApvF,KAAA,EAClC0vF,GAAiBP,EAAgBhoF,EAAS2J,EAAKuoB,SAAU61D,GAAiB,OAA3F,OAAA71D,EAAA+1D,EAAA9wF,KAAA8wF,EAAA3wF,OAAA,SAEC,CACL83B,eAAAA,EACAS,aAAAA,EACAxb,IAAAA,EACAvd,OAAAA,EACAspD,WAAAA,EACAhsC,QAAAA,EACA8d,SAAAA,IACD,wBAAA+1D,EAAA3tF,OAAA,GAAAmtF,EAAA,MACHlpF,MAAA,KAAAD,UAAA,CAEA,SAASgqF,GAAeE,EAEtBpmF,EACA0lF,GAC4C,IAqInBl2D,EAAsB60D,EAxI7CgC,EAAoBD,EAApBC,qBAAsBC,EAAAF,EAAAE,sBAIlBpyD,EAAUl0B,GAoI+BqkF,EApIEiC,EAqIxB,KADA92D,EApIiBxvB,GAqI5BhJ,QAAwC,iBAAjBw4B,EAAU,GACtC+2D,GAAsB/2D,EAAU,GAA6B60D,GAG7C,IAArB70D,EAAUx4B,OACLuvF,GAAsB/2D,EAAU,GAA6B60D,GAG/D,CAAC,GA7IkE,CAAC,EAE3E,IAAKgC,EACH,OAAO3C,GAA8BxvD,EAASwxD,OAAiBpsF,GAIjE,IACAktF,EAA2BzD,GADP0D,GAAwBzmF,IACrC0mF,EAAOF,EAAA,GAAEtD,EAAOsD,EAAA,GACjB9hF,EAAOg/E,GAA8BxvD,EAASwxD,EAAiBgB,GAErE,OAAIxD,EACKF,GAAat+E,EAAMw+E,GAGrBx+E,CACT,CAEA,SACsByhF,GAAgBQ,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA5qF,MAAC,KAADD,UAAA,UAAA6qF,KAoCtC,OApCsCA,GAAAxwC,GAAA3jD,KAAAA,MAA/B,SAAAo0F,EACLpB,EAAcqB,EAQdn3D,EACA61D,GAAgB,IAAAU,EAAA9/C,EAAA2gD,EAAAhzD,EAAAizD,EAAAC,EAAAlE,EAAAh9E,EAAA,OAAAtT,KAAAA,MAAA,SAAAy0F,GAAA,cAAAA,EAAAtvF,KAAAsvF,EAAA5wF,MAAA,OALQ,GAFtB4vF,EAAoBY,EAApBZ,qBACA9/C,EAAW0gD,EAAX1gD,YACA2gD,EAAsBD,EAAtBC,uBAOGtB,QAAuCtsF,IAArBqsF,EAA8B,CAAA0B,EAAA5wF,KAAA,eAAA4wF,EAAAnyF,OAAA,SAC5CsuF,GAAqCmC,IAAiB,OAGwB,GAAjFzxD,EAAUpE,EAAWw3D,GAAcx3D,EAASoE,QAASgzD,GAA0B,CAAC,EAEjFp3D,IAAcu2D,QAA6C/sF,IAArBqsF,GAA+B,CAAA0B,EAAA5wF,KAAA,eAAA4wF,EAAAnyF,OAAA,SACjEwuF,GAA8BxvD,EAASyxD,OAAkBrsF,IAAU,cAAA+tF,EAAA5wF,KAAA,EAG1C8wF,GAAwBz3D,GAAS,OAOjE,GAPiEq3D,EAAAE,EAAAtyF,KAA5DqyF,EAAQD,EAAA,GAAEjE,EAAOiE,EAAA,GAClBjhF,EAASshF,GAAgBJ,EAAU,CACvCf,qBAAAA,EACA9/C,YAAAA,EACAo/C,iBAAAA,EACAC,eAAAA,EACA1xD,QAAAA,KAGEgvD,EAAS,CAAFmE,EAAA5wF,KAAA,gBAAA4wF,EAAAnyF,OAAA,SACF8tF,GAAa98E,EAAQg9E,IAAQ,eAAAmE,EAAAnyF,OAAA,SAG/BgR,GAAM,yBAAAmhF,EAAAnvF,OAAA,GAAA8uF,EAAA,MACf7qF,MAAA,KAAAD,UAAA,CAEA,SAASsrF,GACPJ,EAAQK,GAcoC,IAZ1CpB,EAAoBoB,EAApBpB,qBACA9/C,EAAWkhD,EAAXlhD,YACAo/C,EAAgB8B,EAAhB9B,iBACAC,EAAc6B,EAAd7B,eACA1xD,EAAOuzD,EAAPvzD,QASF,IACE,IAAM4gB,EACJsyC,GAAYA,EAASpwF,aAA+BsC,IAArBqsF,EAC3BrD,GAAY8E,EAAU7gD,GACtBo/C,EAEN,OAAKC,EAKIlC,GAA8BxvD,EAAS4gB,EAD5CuxC,EACkDe,OAGF9tF,GAP3CkqF,GAAqC1uC,EAQ9C,OAAOttB,GAGP,OAAOk8D,GAA8BxvD,EAASyxD,OAAkBrsF,EAClE,CACF,UAEeiuF,GAAuBG,GAAA,OAAAC,GAAAxrF,MAAC,KAADD,UAAA,UAAAyrF,KActC,OAdsCA,GAAApxC,GAAA3jD,KAAAA,MAAtC,SAAAg1F,EAAuC93D,GAAQ,IAAA7R,EAAAmkC,EAAA,OAAAxvD,KAAAA,MAAA,SAAAi1F,GAAA,cAAAA,EAAA9vF,KAAA8vF,EAAApxF,MAAA,OACN,GAAjCwnB,EAAM6pE,GAAkBh4D,GAEpB,CAAF+3D,EAAApxF,KAAA,eAAAoxF,EAAA3yF,OAAA,SACC,MAACoE,EAAW,qBAAmB,cAAAuuF,EAAA9vF,KAAA,EAAA8vF,EAAApxF,KAAA,EAInBsxF,GAAoB9pE,GAAI,OAArC,OAAAmkC,EAAAylC,EAAA9yF,KAAA8yF,EAAA3yF,OAAA,SACC,CAACktD,IAAK,QAEsE,OAFtEylC,EAAA9vF,KAAA,GAAA8vF,EAAA3K,GAAA2K,EAAA,SAEsEA,EAAA3yF,OAAA,SAC5E,MAACoE,EAAW,qBAAmB,yBAAAuuF,EAAA3vF,OAAA,GAAA0vF,EAAA,oBAE1CzrF,MAAA,KAAAD,UAAA,CAEA,SAASuqF,GAAwBj3D,GAE/B,QAFwC,IAATA,IAAAA,EAAuB,IAE7B,IAArBA,EAAUx4B,QAAwC,iBAAjBw4B,EAAU,GAI/C,OAAQA,EAAU,GAAmBrB,IACvC,CAEA,SAASm5D,GAAcpzD,EAAkBmwD,GACvC,IAAM2D,EAAqC,CAAC,EAQ5C,OANA3D,EAAenuF,SAAQ,SAAA63B,GACjBmG,EAAQr6B,IAAIk0B,KACdi6D,EAAWj6D,GAAUmG,EAAQr6B,IAAIk0B,GAEvC,IAESi6D,CACT,CAcA,SAASzB,GACPvmF,EACAqkF,GAEA,IAAKrkF,EACH,MAAO,CAAC,EAGV,IAAMk0B,EAAUl0B,EAAMk0B,QAEtB,OAAKA,EAIDA,aAAmB1F,QACd84D,GAAcpzD,EAASmwD,GAI5BlmF,MAAMC,QAAQ81B,GACT,CAAC,EAGHkwD,GAAkBlwD,EAASmwD,GAZzB,CAAC,CAaZ,CAEA,SAASyD,GAAkBh4D,GACzB,IAEE,OAAOA,EAASpc,OAChB,OAAO8T,GAGT,CACF,CAOA,SAASugE,GAAoBj4D,GAC3B,OAAO,IAAIp4B,SAAQ,SAACrB,EAAS8O,GAC3B,IAAMw0C,EAAU90B,YAAW,kBAAM1f,EAAO,IAAI3Q,MAAM,8CAA8C,GAAE,MAWtG,SAE+ByzF,GAAA,OAAAC,GAAA/rF,MAAC,KAADD,UAAA,EAX3BisF,CAAiBr4D,GACdv5B,MACC,SAAA6xF,GAAI,OAAG/xF,EAAQ+xF,EAAI,IACnB,SAAAljF,GAAO,OAAGC,EAAOD,EAAO,IAC1B,SACS,kBAAMwnB,aAAaitB,EAAQ,GAC1C,GAGA,CCjSA,SAAAuuC,KDuSA,OCvSAA,GAAA3xC,GAAA3jD,KAAAA,MDmSA,SAAAy1F,EAAgCv4D,GAAQ,OAAAl9B,KAAAA,MAAA,SAAA01F,GAAA,cAAAA,EAAAvwF,KAAAuwF,EAAA7xF,MAAA,cAAA6xF,EAAA7xF,KAAA,EAGzBq5B,EAASsyB,OAAM,cAAAkmC,EAAApzF,OAAA,SAAAozF,EAAAvzF,MAAA,wBAAAuzF,EAAApwF,OAAA,GAAAmwF,EAAA,MAC9BlsF,MAAA,KAAAD,UAAA,CCnRA,SAAAqsF,KAFA,OAEAA,GAAAhyC,GAAA3jD,KAAAA,MAhBO,SAAA41F,EACL3yE,EACAtO,EACA3J,GAAO,IAAA8G,EAAAwB,EAAA,OAAAtT,KAAAA,MAAA,SAAA61F,GAAA,cAAAA,EAAA1wF,KAAA0wF,EAAAhyF,MAAA,OAEP,IACQiO,EAAOgkF,GAAgB7yE,EAAYtO,EAAM3J,GAGzCsI,EAASq9E,GAA4B,eAAgB7+E,GAC3Du9E,GAAqBrkF,EAAQ63C,OAAQvvC,EACrC,OAAOshB,GAET,yBAAAihE,EAAAvwF,OAAA,GAAAswF,EAAA,MACFrsF,MAAA,KAAAD,UAAA,CA+BA,SAASwsF,GACP7yE,EACAtO,EACA3J,GAEA,IAAMiK,EAAMD,KAAKC,MACjB8gF,EAAiEphF,EAAzDylB,eAAAA,OAAA,IAAA27D,EAAiB9gF,EAAG8gF,EAAAC,EAAqCrhF,EAAnCkmB,aAAAA,OAAA,IAAAm7D,EAAe/gF,EAAG+gF,EAAE5oF,EAAeuH,EAAfvH,MAAOgmB,EAAQze,EAARye,IAEzD6iE,EAMIhzE,EAAWnR,KALbuN,EAAG42E,EAAH52E,IACAvd,EAAMm0F,EAANn0F,OAAMo0F,EAAAD,EACNr7D,YAAawwB,OAAW,IAAA8qC,EAAE,EAACA,EACRpD,EAAemD,EAAlC/C,kBACoBH,EAAgBkD,EAApC9C,mBAGF,IAAK9zE,EACH,OAAO,KAGT,IAAK+T,IAAQw+D,GAAWvyE,EAAKrU,EAAQooF,yBAA2BxB,GAAWvyE,EAAKrU,EAAQqoF,uBAGtF,MAAO,CACLj5D,eAAAA,EACAS,aAAAA,EACAxb,IAAAA,EACAvd,OAAAA,EACAspD,WAAAA,EACAhsC,QARcwxE,GAAqCkC,GASnD51D,SARe0zD,GAAqCmC,IAYxD,IAAMr4D,EAAUtH,EAAI2G,IACd25D,EAAwBh5D,EAC1B82D,GAAkB92D,EAAQH,gBAAiBvvB,EAAQ0oF,uBACnD,CAAC,EACCY,EAAyB9C,GAmBjC,SAA4Bp+D,GAC1B,IAAMkO,EAAUlO,EAAI+iE,wBAEpB,OAAK70D,EAIEA,EAAQz0B,MAAM,QAAQyN,QAAO,SAACU,EAA6B0Z,GAChE,IAAA0hE,EAAqB1hE,EAAK7nB,MAAM,MAAzB7F,EAAGovF,EAAA,GAAE/0F,EAAK+0F,EAAA,GAEjB,OADAp7E,EAAIhU,EAAIsF,eAAiBjL,EAClB2Z,CACR,GAAE,CAAE,GAPI,CAAC,CAQZ,CA/BmDq7E,CAAmBjjE,GAAMpoB,EAAQspF,wBAElFgC,EAAsCtrF,EAAQyoF,qBAAuBtD,GAAc/iF,GAAS,MAAC1G,GAAtF6vF,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,EAAwCzrF,EAAQyoF,qBA8BlD,SAA6BrgE,GAE3B,IAAM/b,EAAoB,GAE1B,IACE,MAAO,CAAC+b,EAAIsjE,aACZ,OAAOp2F,GACP+W,EAAOrT,KAAK1D,EACd,CAGA,IACE,OAqBG,SACLi7B,EACAo7D,GAEA,IACE,GAAoB,iBAATp7D,EACT,MAAO,CAACA,GAGV,GAAIA,aAAgBu6B,SAClB,MAAO,CAACv6B,EAAKA,KAAKq7D,WAGpB,GAAqB,SAAjBD,GAA2Bp7D,GAAwB,iBAATA,EAC5C,MAAO,CAAChjB,KAAKC,UAAU+iB,IAGzB,IAAKA,EACH,MAAO,MAAC70B,GAEV,MAAM8wB,GAEN,MAAO,MAAC9wB,EAAW,mBACrB,CAIA,MAAO,MAACA,EAAW,wBACrB,CAjDWmwF,CAAkBzjE,EAAI8J,SAAU9J,EAAIujE,aAC3C,OAAOr2F,GACP+W,EAAOrT,KAAK1D,EACd,CAIA,MAAO,MAACoG,EACV,CAlDyEowF,CAAoB1jE,GAAO,MAAC1sB,GAA5FqwF,EAAYN,EAAA,GAAEO,EAAeP,EAAA,GAE9Br3E,EAAU0xE,GAA8B4C,EAAuBZ,EAAiByD,GAChFr5D,EAAW4zD,GAA8BwD,EAAwBvB,EAAkBgE,GAEzF,MAAO,CACL38D,eAAAA,EACAS,aAAAA,EACAxb,IAAAA,EACAvd,OAAAA,EACAspD,WAAAA,EACAhsC,QAASo3E,EAAiBpG,GAAahxE,EAASo3E,GAAkBp3E,EAClE8d,SAAU85D,EAAkB5G,GAAalzD,EAAU85D,GAAmB95D,EAE1E,CCpGO,SAAS+5D,GAAyBp0C,GACvC,IAAMpkC,EAASyE,KAEf,IACE,IAAMywB,EAAc,IAAIC,YAExBsjD,EAMIr0C,EAAOr/B,aAELxY,EAA6C,CACjD63C,OAAAA,EACAlP,YAAAA,EACAy/C,uBAVsB8D,EAAtB9D,uBAWAC,sBAVqB6D,EAArB7D,sBAWAI,qBAVoByD,EAApBzD,qBAWAC,sBAVqBwD,EAArBxD,sBAWAY,uBAVsB4C,EAAtB5C,wBAaE71E,GAAUA,EAAO0Q,GACnB1Q,EAAO0Q,GAAG,uBAAuB,SAAClM,EAAYtO,GAAI,OAYjD,SACL3J,EACAiY,EACAtO,GAEA,GAAKsO,EAAWnR,KAIhB,KA2BF,SAA0BmR,GACxB,MAA+B,QAAxBA,EAAW+b,QACpB,EA5BQm4D,CAAiBl0E,IAkCzB,SAAoBtO,GAClB,OAAOA,GAAQA,EAAKye,GACtB,CApCwCgkE,CAAWziF,KD1B5C,SACLsO,EACAtO,EACA3J,GAEA,IAAQooB,EAAeze,EAAfye,IAAKhmB,EAAUuH,EAAVvH,MAEb,GAAKgmB,EAAL,CAIA,IAAMikE,EAAU3H,GAAYtiF,EAAOpC,EAAQ2oC,aACrC2jD,EAAUlkE,EAAImkE,kBAAkB,kBAClCrH,GAAyB98D,EAAImkE,kBAAkB,mBAiJrD,SACEh8D,EACAo7D,EACAhjD,GAEA,IAEE,OAAO+7C,GAD0B,SAAjBiH,GAA2Bp7D,GAAwB,iBAATA,EAAoBhjB,KAAKC,UAAU+iB,GAAQA,EACzEoY,GAC5B,MAAM09C,GACN,MACF,CACF,CA3JMmG,CAAapkE,EAAI8J,SAAU9J,EAAIujE,aAAc3rF,EAAQ2oC,kBAEzCjtC,IAAZ2wF,IACFp0E,EAAWnR,KAAKohF,kBAAoBmE,QAEtB3wF,IAAZ4wF,IACFr0E,EAAWnR,KAAKqhF,mBAAqBmE,EAXvC,CAaF,CCQMG,CAAoBx0E,EAAYtO,EAAM3J,GFgP5C,SCnSkD0sF,EAAAC,EAAAC,GAAAjC,GAAApsF,MAAC,KAADD,UAAA,CCuD5CuuF,CAA6B50E,EAAYtO,EAAM3J,IAsBrD,SAA4BiY,GAC1B,MAA+B,UAAxBA,EAAW+b,QACpB,CArBQ84D,CAAmB70E,IA2B3B,SAAsBtO,GACpB,OAAOA,GAAQA,EAAKuoB,QACtB,CA7B0C66D,CAAapjF,KFjChD,SACLsO,EACAtO,EACA3J,GAEA,IAAQoC,EAAoBuH,EAApBvH,MAAO8vB,EAAavoB,EAAbuoB,SAGTm6D,EAAU3H,GADHtiF,EAAQymF,GAAwBzmF,QAAS1G,EACpBsE,EAAQ2oC,aAEpC2jD,EAAUp6D,EAAWgzD,GAAyBhzD,EAASoE,QAAQr6B,IAAI,wBAAqBP,OAE9EA,IAAZ2wF,IACFp0E,EAAWnR,KAAKohF,kBAAoBmE,QAEtB3wF,IAAZ4wF,IACFr0E,EAAWnR,KAAKqhF,mBAAqBmE,EAEzC,CEmBMU,CAAsB/0E,EAAYtO,EAAM3J,GFjE9C,SAIoDitF,EAAAC,EAAAC,GAAAlG,GAAA1oF,MAAC,KAADD,UAAA,CEiE9C8uF,CAA+Bn1E,EAAYtO,EAAM3J,GAEnD,OAAO1K,GAET,CACF,CA9C6D+3F,CAA2BrtF,EAASiY,EAAYtO,EAAK,KAG5G8mB,GCzBC,SAAiConB,GACtC,OAAO,SAAC7lB,GACN,GAAK6lB,EAAO35C,YAAZ,CAIA,IAAMoK,EA/BH,SAAqB0pB,GAC1B,IAAQ5C,EAAsD4C,EAAtD5C,eAAgBS,EAAsCmC,EAAtCnC,aAAcoC,EAAwBD,EAAxBC,UAAWC,EAAaF,EAAbE,SAEjD,IAAKrC,EACH,OAAO,KAIT,IAAQ/4B,EAAgBm7B,EAAhBn7B,OAER,MAAO,CACLU,KAAM,iBACN82C,MAAOlf,EAAiB,IACxBmK,IAAK1J,EAAe,IACpBr2B,KANsBy4B,EAAR5d,IAOdvN,KAAM,CACJhQ,OAAAA,EACAspD,WAAYluB,EAAYA,EAAsB5lB,YAAS5Q,GAG7D,CAWmB4xF,CAAYt7D,GAE3BqyD,GAAqBxsC,EAAQvvC,EAJ7B,CAKJ,CACA,CDeqCilF,CAAwB11C,IACvD7oB,GEnBC,SAA+B6oB,GACpC,OAAO,SAAC7lB,GACN,GAAK6lB,EAAO35C,YAAZ,CAIA,IAAMoK,EArCH,SAAmB0pB,GACxB,IAAQ5C,EAAsC4C,EAAtC5C,eAAgBS,EAAsBmC,EAAtBnC,aAElBO,EAFwC4B,EAAR5J,IAEZ2G,IAE1B,IAAKK,IAAmBS,IAAiBO,EACvC,OAAO,KAIT,IAAQt5B,EAAyCs5B,EAAzCt5B,OAAQud,EAAiC+b,EAAjC/b,IAAkB+rC,EAAehwB,EAA5BR,YAErB,YAAYl0B,IAAR2Y,EACK,KAGF,CACL7c,KAAM,eACNgC,KAAM6a,EACNi6B,MAAOlf,EAAiB,IACxBmK,IAAK1J,EAAe,IACpB/oB,KAAM,CACJhQ,OAAAA,EACAspD,WAAAA,GAGN,CAWmBotC,CAAUx7D,GAEzBqyD,GAAqBxsC,EAAQvvC,EAJ7B,CAKJ,CACA,CFSmCmlF,CAAsB51C,KAErD,MAAMrrB,GACV,CAEA,CGrDA,IAAIkhE,GAAsC,KCSnC,SAASC,GAAmB91C,GAEjC,IAAMrkC,EAAQ2E,KACR1E,EAASyE,KAEf1E,EAAM2I,iBDLN,SAAC07B,GAAM,OACP,SAACrkC,GACC,GAAKqkC,EAAO35C,YAAZ,CAIA,IAAMoK,EAYH,SAAqBkL,GAK1B,IAAMo6E,EAAgBp6E,EAAMyK,mBAAqBzK,EAAMyK,oBAIvD,OAAIyvE,KAAqBE,GAAkBA,GAI3CF,GAAmBE,GAGSA,EAtCR55D,UAuClB,CAAC,QAAS,MAAO,eAAgB,sBAAsBjxB,SAAS6qF,EAAc55D,WAC9E45D,EAAc55D,SAASvlB,WAAW,OAE3B,KAGsB,YAA3Bm/E,EAAc55D,SAQb,SACL/b,GAEA,IAAM8K,EAAO9K,EAAWnR,MAAQmR,EAAWnR,KAAKxI,UAEhD,IAAKiC,MAAMC,QAAQuiB,IAAyB,IAAhBA,EAAK3pB,OAC/B,OAAO4hF,GAAiB/iE,GAG1B,IAAI41E,GAAc,EAGZC,EAAiB/qE,EAAKphB,KAAI,SAAA5K,GAC9B,IAAKA,EACH,OAAOA,EAET,GAAmB,iBAARA,EACT,OAAIA,EAAIqC,OAASkoD,IACfusC,GAAc,EACN92F,EAAAsD,MAAA,EAAAinD,IAAA,KAGAvqD,EAEA,oBAAAA,EACA,IACA,IAAAg3F,EAAAnhF,GAAA7V,EAAA,GAEA,OADAwW,KAAAC,UAAAugF,GACA30F,OAAAkoD,IACAusC,GAAA,EAEAtgF,KAAAC,UAAAugF,EAAA,QAAA1zF,MAAA,EAAAinD,IAAA,KAEAysC,CACA,OAAAz4F,GACA,CAIA,OAAAyB,CACA,IAEA,OAAAikF,GAAA78E,EAAA,GACA8Z,EAAA,CACAnR,KAAA3I,EAAA,GACA8Z,EAAAnR,KAAA,CACAxI,UAAAwvF,GACAD,EAAA,CAAAtI,MAAA,CAAAC,SAAA,kCAGA,CAzDLwI,CAA2BJ,GAG7B5S,GAAiB4S,IAjBf,IAkBX,CAxCmBK,CAAYz6E,GAEtBlL,GAIL4uE,GAAmBr/B,EAAQvvC,EAR3B,CASJ,CAAG,CCRsB4lF,CAAoBr2C,IAC3CjqB,G/BXmG,SACnGiqB,GAEA,OAAO,SAAC7lB,GACN,GAAK6lB,EAAO35C,YAAZ,CAIA,IAAMoK,EA6DH,SAAmB0pB,GACxB,IAAAm8D,EAQmC,SAAAn8D,GACA,IAEAluB,EAFAsqF,EAAA,UAAAp8D,EAAAx4B,KAGA0K,EAAA,KAGA,IAEAJ,EAAAhE,EADAoE,EAAAkqF,EAAA3W,GAAAzlD,EAAA/rB,OAAAyxE,GAAA1lD,EAAA/rB,OACE,CAAFxF,gBAAA,kBACA,OAAAnL,GACAwO,EAAA,WACA,CAEA,OAAAI,OAAAA,EAAAJ,QAAAA,EACA,CAvBPuqF,CAAar8D,GAAjC9tB,EAAMiqF,EAANjqF,OAAQJ,EAAAqqF,EAAArqF,QAEhB,OAAOk3E,GAAgB78E,EAAC,CACtB61B,SAAU,MAAMhC,EAAYx4B,MACK4hF,GAAAl3E,EAAAJ,IAEA,CApElBwqF,CAAUt8D,GAEzB,GAAK1pB,EAAL,CAIA,IAAM8lF,EAA+B,UAArBp8D,EAAYx4B,KACtByM,EAAQmoF,EAAWp8D,EAAY/rB,WAAyBvK,IAG5D0yF,GACAv2C,EAAO02C,eACPtoF,GACAA,EAAM/B,SACL+B,EAAMuoF,QACNvoF,EAAMwoF,SACNxoF,EAAMyoF,SACNzoF,EAAM0oF,WJIeJ,EIDpB12C,EAAO02C,cJCiD/U,EIAxDlxE,EJAqF8uC,EICrFqgC,GAAmBzlD,EAAY/rB,OJArCsoF,EAAcpV,YAAYK,EAAiBpiC,IIIzC8/B,GAAmBr/B,EAAQvvC,EAtB3B,CANA,CJuBG,IAAqBimF,EAAoC/U,EAA6BpiC,CIM7F,CACA,C+BzByCw3C,CAAkB/2C,IACzDxlB,GCDK,SAAmCwlB,GACxC,OAAO,SAAC7lB,GACN,GAAK6lB,EAAO35C,YAAZ,CAIA,IAAMoK,EAzBV,SAAuB0pB,GACrB,IAAQkB,EAAalB,EAAbkB,KAAMD,EAAOjB,EAAPiB,GAERhpB,EAAMD,KAAKC,MAAQ,IAEzB,MAAO,CACLzS,KAAM,kBACN82C,MAAOrkC,EACPsvB,IAAKtvB,EACLzQ,KAAMy5B,EACNnsB,KAAM,CACJ+rD,SAAU3/B,GAGhB,CAWmB27D,CAAc78D,GAEd,OAAX1pB,IAKJuvC,EAAO4U,aAAao6B,KAAK7tF,KAAKsP,EAAO9O,MACrCq+C,EAAOs/B,sBAEPt/B,EAAOw/B,WAAU,WAGf,OAFA8M,GAAuBtsC,EAAQ,CAACvvC,KAEzB,CACb,IAhBI,CAiBJ,CACA,CDrBmCwmF,CAA0Bj3C,IAC3Do0C,GAAyBp0C,GAIzB,IAAMwE,EEhBD,SACLxE,EACAk3C,QAAA,IAAAA,IAAAA,GAAgC,GAEhC,IAAMC,EAAmBD,EAAgCvL,GAAqB3rC,QAAUn8C,EAExF,OAAOnG,OAAO6I,QACZ,SAAC6H,EAAc0D,GAEb,IAAKkuC,EAAO35C,YACV,OAAO+H,EAGT,GddC,SAAuBA,GAC5B,MAAsB,iBAAfA,EAAMzO,IACf,CcYUy3F,CAAchpF,GAIhB,cADOA,EAAMgR,YACNhR,EAIT,IAAKnH,GAAamH,KAAWy4C,GAAmBz4C,KAAWs9E,GAAgBt9E,GACzE,OAAOA,EAKT,IADwB4xC,EAAOu/B,+BAE7B,OAAOnxE,EAGT,GAAIs9E,GAAgBt9E,GAOlB,OAJA4xC,EAAOiE,QACP71C,EAAMkR,SAAS0zB,SAASkJ,UAAY8D,EAAOq3C,eCzC5C,SAA+Br3C,EAAyB5xC,GAC7D4xC,EAAOs/B,sBACPt/B,EAAOw/B,WAAU,WACf,OAAKpxE,EAAM0F,YAQXksC,EAAOy/B,kBAAkB,CACvB9/E,KAAM6/D,GAAU8W,OAChBxiE,UAA6B,IAAlB1F,EAAM0F,UACjB7E,KAAM,CACJi6B,IAAK,aACLsI,QAAS,CACP19B,UAAW1F,EAAM0F,UACjBnU,KAAM,UACNw8B,SAAU,kBACVltB,KAAM,CACJqoF,WAAYlpF,EAAMI,eAMnB,EACX,GACA,CDcQ+oF,CAAsBv3C,EAAQ5xC,GACvBA,EAKT,GEpDC,SAAsBA,EAAc0D,GACzC,QAAI1D,EAAMzO,OAASyO,EAAMC,YAAcD,EAAMC,UAAUhM,SAAW+L,EAAMC,UAAUhM,OAAOd,SAKrFuQ,EAAKoV,oBAAqBpV,EAAKoV,kBAAkBswE,UAKvD,CFyCUC,CAAarpF,EAAO0D,KAAUkuC,EAAOr/B,aAAamoB,aAAa4uD,kBAEjE,OAAO,KAMT,IAAMC,EGtDL,SAAoC33C,EAAyB5xC,GAClE,MAA6B,WAAzB4xC,EAAOirC,eAMP78E,EAAMnC,UAAYs9C,OAKjBn7C,EAAMC,WAAaD,EAAMzO,OAIvB0oF,GAAUroC,EAAOr/B,aAAai3E,gBACvC,CHqCkCC,CAA2B73C,EAAQ5xC,GAiB/D,OAb0BupF,GAAgD,YAAzB33C,EAAOirC,iBAGtD78E,EAAM2M,KAAAzU,EAAA,GAAY8H,EAAM2M,KAAM,CAAAghC,SAAUiE,EAAOq3C,kBAK7CF,GAEFA,EAAiB/oF,EAAO,CAAEm6C,WAAY,MAGjCn6C,CACR,GACD,CAAEtK,GAAI,UAEV,CFxDyBg0F,CAA0B93C,GAAS+3C,GAASn8E,IAC/DA,GAAUA,EAAO2I,kBACnB3I,EAAO2I,kBAAkBigC,GzD26BV,SAAA7+C,GACA,IAAAiW,EAAAyE,KAEAzE,GAAAA,EAAA2I,mBAIA3I,EAAA2I,kBAAA5e,EACA,CyDj7Bf4e,CAAkBigC,GAIhBuzC,GAASn8E,KACXA,EAAO0Q,GAAG,kBM3BP,SAA+B0zB,GACpC,OAAO,SAAC5xC,GACD4xC,EAAO35C,aAAgBY,GAAamH,IAQ7C,SAA8B4xC,EAAyB5xC,GACrD,IAAM4pF,EAAiB5pF,EAAMC,WAAaD,EAAMC,UAAUhM,QAAU+L,EAAMC,UAAUhM,OAAO,GAAG7D,MAChE,iBAAnBw5F,IAOTA,EAAe3+E,MAAM,6EAIrB2+E,EAAe3+E,MAAM,qEAKrBgmE,GAAmBr/B,EAHAmjC,GAAiB,CAClChnD,SAAU,yBAIhB,CAxBI87D,CAAqBj4C,EAAQ5xC,EACjC,CACA,CNmBiC8pF,CAAsBl4C,IACnDpkC,EAAO0Q,GAAG,iBAAkBq/D,GAAqB3rC,IACjDpkC,EAAO0Q,GAAG,aAAa,SAACpS,GACtB,IAAM6hC,EAAWiE,EAAOq3C,eAEpBt7C,GAAYiE,EAAO35C,aAAwC,YAAzB25C,EAAOirC,eAEnBjrC,EAAOu/B,iCAE7BrlE,EAAIgiC,UAAYH,EAG1B,IAEIngC,EAAO0Q,GAAG,oBAAoB,SAAA7L,GAC5Bu/B,EAAOm4C,gBAAkB13E,CAC/B,IAII7E,EAAO0Q,GAAG,qBAAqB,SAAA7L,GAC7Bu/B,EAAOm4C,gBAAkB13E,CAC/B,IAGI7E,EAAO0Q,GAAG,sBAAsB,SAAC8rE,EAAejwF,GAC9C,IAAM4zC,EAAWiE,EAAOq3C,eACpBlvF,GAAWA,EAAQkwF,eAAiBr4C,EAAO35C,aAAe01C,GAExDq8C,EAAc94E,UAAY84E,EAAc94E,SAAS0zB,WACnDolD,EAAc94E,SAAS0zB,SAASkJ,UAAYH,EAGtD,IAEA,CAGA,SAASg8C,GAASn8E,GAChB,SAAUA,IAAUA,EAAO0Q,GAC7B,COnEA,SAIsBgsE,GAAcC,GAAA,OAAAC,GAAA9xF,MAAC,KAADD,UAAA,UAAA+xF,KAapC,OAboCA,GAAA13C,GAAA3jD,KAAAA,MAA7B,SAAAs7F,EAA8Bz4C,GAAM,OAAA7iD,KAAAA,MAAA,SAAAu7F,GAAA,cAAAA,EAAAp2F,KAAAo2F,EAAA13F,MAAA,cAAA03F,EAAAp2F,KAAA,EAAAo2F,EAAAj5F,OAAA,SAGhCwC,QAAQmmD,IACbkkC,GAAuBtsC,EAAQ,EAWV24C,EATD3wF,GAAOsK,YAAYsmF,YAUnCC,OAAiBC,OAAiBC,OAGpC9kD,EAHE4kD,EAAqDF,EAArDE,gBAAiBC,EAAoCH,EAApCG,gBAAiBC,EAAmBJ,EAAnBI,eAGpC9kD,EAAO9hC,KAAKC,MAAQ,IACnB,CACLzS,KAAM,SACNgC,KAAM,SACN80C,MAAOxC,EACPvS,IAAKuS,EACLhlC,KAAM,CACJ2pF,OAAQ,CACNC,gBAAAA,EACAC,gBAAAA,EACAC,eAAAA,UArBH,cAAAL,EAAAp2F,KAAA,EAAAo2F,EAAAjR,GAAAiR,EAAA,SAAAA,EAAAj5F,OAAA,SAGM,IAAE,wBAAAi5F,EAAAj2F,OAIb,IAA2Bk2F,EACjBE,EAAiBC,EAAiBC,EAGpC9kD,CARK,GAAAwkD,EAAA,mBAEb/xF,MAAA,KAAAD,UAAA,CCZO,SAASuyF,GAAuBh5C,GACrC,IAAIi5C,GAAgB,EAEpB,OAAO,SAAC7qF,EAAuB8qF,GAE7B,GAAKl5C,EAAOu/B,+BAAZ,CAQA,IAAM5J,EAAaujB,IAAgBD,EACnCA,GAAgB,EAEZj5C,EAAO02C,e3CqRR,SAA8CA,EAAoCtoF,GACvF,IASE,IA0BJ,SAA4BA,GAC1B,O4CrVgD,I5CqVzCA,EAAMzO,IACf,CA5BSw5F,CAAmB/qF,GACtB,OAGF,IAAQ/C,EAAW+C,EAAMa,KAAjB5D,OASR,GARIA,IAAWq0D,GAAkBuW,UAC/BygB,EAAc5U,iBAAiB1zE,EAAM0F,WAGnCzI,IAAWq0D,GAAkBiX,QAC/B+f,EAAc3U,eAAe3zE,EAAM0F,WAoBzC,SACE1F,GAEA,OAAOA,EAAMa,KAAK5D,SAAWq0D,GAAkBgX,gBACjD,CArBQ0iB,CAA8BhrF,GAAQ,CACxC,IAAAirF,EAAqBjrF,EAAMa,KAAnBtP,EAAI05F,EAAJ15F,KAAMmE,EAAAu1F,EAAAv1F,GACRy7C,EAAOs6B,GAAOnpB,OAAO5E,QAAQhoD,GAE/By7C,aAAgBh2C,aAAe5J,IAASigE,GAAkByN,OAC5DqpB,EAAc1U,cAAcziC,EAEhC,EACA,MAAM9hD,GACV,CAEA,C2CtTM67F,CAAqCt5C,EAAO02C,cAAetoF,GAI7D4xC,EAAOw/B,WAAU,WAYf,GAN6B,WAAzBx/B,EAAOirC,eAA8BtV,GACvC31B,EAAOu5C,mBAKJlP,GAAarqC,EAAQ5xC,EAAOunE,GAE/B,OAAO,EAKT,IAAKA,EACH,OAAO,EAiBT,GAsEqG,SAAA31B,EAAA21B,GAEAA,GAAA31B,EAAA1sC,SAAA,IAAA0sC,EAAA1sC,QAAAi1E,WAIA8B,GAAArqC,EAnCA,SAAAA,GACA,IAAA73C,EAAA63C,EAAAr/B,aACA,OACAhhB,KAAA6/D,GAAA8W,OACAxiE,UAAA3B,KAAAC,MACAnD,KAAA,CACAi6B,IAAA,UACAsI,QAAA,CACAgoD,mBAAAx5C,EAAAy5C,oBACA5Q,kBAAA1gF,EAAA0gF,kBACA+O,gBAAAzvF,EAAAyvF,gBACA8B,qBAAAvxF,EAAAwxF,eACAC,cAAAzxF,EAAAyxF,cACA1pC,YAAA/nD,EAAA+nD,YACAyqB,cAAAxyE,EAAAwyE,cACAgf,iBAAA35C,EAAAgrC,aAAA,WAAAhrC,EAAAgrC,YAAArrF,KACAk6F,qBAAA1xF,EAAAooF,uBAAAhvF,OAAA,EACAqvF,qBAAAzoF,EAAAyoF,qBACAkJ,yBAAA3xF,EAAA0oF,sBAAAtvF,OAAA,EACAw4F,0BAAA5xF,EAAAspF,uBAAAlwF,OAAA,IAIA,CAYAy4F,CAAAh6C,IAAA,EACA,CArFrGi6C,CAAiBj6C,EAAQ21B,GAQrB31B,EAAO1sC,SAAW0sC,EAAO1sC,QAAQk1E,kBACnC,OAAO,EAKT,GAA6B,WAAzBxoC,EAAOirC,eAA8BjrC,EAAO1sC,SAAW0sC,EAAOgrC,YAAa,CAC7E,IAAMkP,EAAgBl6C,EAAOgrC,YAAY3F,uBACrC6U,IAEuE,IAAI/nF,KAAK+nF,GACel6C,EAAAr/B,aAAAmoB,aAAAkhD,eAGAhqC,EAAA1sC,QAAAa,QAAA+lF,EAEAl6C,EAAAr/B,aAAAqoE,eACAP,GAAAzoC,EAAA1sC,SAGA,CAaA,MAXA,YAAA0sC,EAAAirC,eAQAjrC,EAAAiE,SAGA,CACA,GAnFvG,CAoFuG,CACA,CExGpG,SAASk2C,GACdC,EACAC,EACA3qD,EACA8D,GAEA,OAAOhD,GACL8C,GAA2B8mD,EAAajnD,GAAgCinD,GAAc5mD,EAAQ9D,GAC9F,CACE,CAAC,CAAE/vC,KAAM,gBAAkBy6F,GAC3B,CACE,CACEz6F,KAAM,mBAIN4B,OAC2B,iBAAlB84F,GAA6B,IAAItpD,aAAcC,OAAOqpD,GAAe94F,OAAS84F,EAAc94F,QAEvG84F,IAIR,CCzBO,SAASC,GAAoBC,GAMZ,IAClBC,EANJH,EAAaE,EAAbF,cACA57D,EAAO87D,EAAP97D,QAQMg8D,EAAiB/kF,KAAAC,UAAA8oB,GAAA,KAGA,oBAAA47D,EACAG,EAAA,GAAAC,EAAAJ,MACA,CACA,IAEAK,GAFA,IAAA3pD,aAEAC,OAAAypD,IAEAD,EAAA,IAAAvsF,WAAAysF,EAAAn5F,OAAA84F,EAAA94F,SACAiD,IAAAk2F,GACAF,EAAAh2F,IAAA61F,EAAAK,EAAAn5F,OACA,CAEA,OAAAi5F,CACA,CC1BzB,SAGsBG,GAAkBC,GAAA,OAAAC,GAAAn0F,MAAC,KAADD,UAAA,CCIxC,SAAAo0F,KDgDA,OChDAA,GAAA/5C,GAAA3jD,KAAAA,MDJO,SAAA29F,EAAAC,GAAA,IAAAn/E,EAAAD,EAAAnN,EAAAJ,EAAA+N,EAAA6+E,EAAAC,EAAAz5E,EAAA05E,EAAAv5F,EAAAomB,EAAA,OAAA5qB,KAAAA,MAAA,SAAAg+F,GAAA,cAAAA,EAAA74F,KAAA64F,EAAAn6F,MAAA,OAoBL,OAnBA4a,EAAMm/E,EAANn/E,OACAD,EAAKo/E,EAALp/E,MACUnN,EAAQusF,EAAlBh/C,SACA3tC,EAAK2sF,EAAL3sF,MAOM+N,EAC4B,iBAAzBP,EAAOqnC,eAAuD,OAAzBrnC,EAAOqnC,eAA2Bv6C,MAAMC,QAAQiT,EAAOqnC,oBAE/Fp/C,EADAnG,OAAOwE,KAAK0Z,EAAOqnC,eAGnB+3C,EAAuB,CAAExsF,SAAAA,EAAU2N,aAAAA,GAErCP,EAAOsF,MACTtF,EAAOsF,KAAK,kBAAmB9S,EAAO4sF,GACxCG,EAAAn6F,KAAA,EAE6B0a,GAC3BE,EAAO+E,aACPvS,EACA4sF,EACAr/E,EACAC,EACA6M,MACD,OAPK,GAAAwyE,EAAAE,EAAA77F,KAUc,CAAF67F,EAAAn6F,KAAA,eAAAm6F,EAAA17F,OAAA,SACT,MAAI,OAgBZ,OAVDw7F,EAAcG,SAAWH,EAAcG,UAAY,aAG7C55E,EAAW5F,EAAOooC,gBAAkBpoC,EAAOooC,iBAAgBk3C,EACtC15E,GAAYA,EAAS7E,KAAQ,CAAC,EAAjDhb,EAAIu5F,EAAJv5F,KAAMomB,EAAAmzE,EAAAnzE,QAEdkzE,EAAct+E,IAAArW,EAAA,GACT20F,EAAct+E,IAAG,CACpBhb,KAAMA,GAAQ,4BACdomB,QAASA,GAAW,UACrBozE,EAAA17F,OAAA,SAEMw7F,GAAa,yBAAAE,EAAA14F,OAAA,GAAAq4F,EAAA,KACtBD,GAAAn0F,MAAA,KAAAD,UAAA,UC7CsB40F,GAAiBC,GAAA,OAAAC,GAAA70F,MAAC,KAADD,UAAA,CA4HvC,SAAA80F,KAFA,OAEAA,GAAAz6C,GAAA3jD,KAAAA,MA5HO,SAAAq+F,EAAAC,GAAA,IAAApB,EAAAt+C,EAAA2/C,EAAAC,EAAA7nF,EAAAR,EAAAsoF,EAAA5M,EAAA9C,EAAAF,EAAAR,EAAA5vE,EAAAD,EAAAygC,EAAA1M,EAAAmsD,EAAAzB,EAAAzpD,EAAAtW,EAAAtI,EAAA+pE,EAAA,OAAA3+F,KAAAA,MAAA,SAAA4+F,GAAA,cAAAA,EAAAz5F,KAAAy5F,EAAA/6F,MAAA,OAoBgC,GAnBrCq5F,EAAaoB,EAAbpB,cACAt+C,EAAQ0/C,EAAR1/C,SACW2/C,EAAUD,EAArBlT,UACAoT,EAAYF,EAAZE,aACA7nF,EAAS2nF,EAAT3nF,UACAR,EAAOmoF,EAAPnoF,QAEMsoF,EAAwBtB,GAAqB,CACjDD,cAAAA,EACA57D,QAAS,CACPi9D,WAAAA,KAII1M,EAA+C2M,EAA/C3M,KAAM9C,EAAyCyP,EAAzCzP,SAAUF,EAA+B2P,EAA/B3P,SAAUR,EAAqBmQ,EAArBnQ,iBAE5B5vE,EAASyE,KACT1E,EAAQ2E,KACR87B,EAAYxgC,GAAUA,EAAOygC,eAC7B3M,EAAM9zB,GAAUA,EAAOiF,SAExBjF,GAAWwgC,GAAc1M,GAAQp8B,EAAQ2G,QAAO,CAAA8hF,EAAA/6F,KAAA,eAAA+6F,EAAAt8F,OAAA,iBAcpD,OAVKo8F,EAAyB,CAC7Bl8F,KnEjC6B,emEkC7Bq8F,uBAAwBxQ,EAAmB,IAC3C13E,UAAWA,EAAY,IACvBmoF,UAAW/P,EACXgQ,UAAWlQ,EACXgD,KAAAA,EACA9yC,UAAWH,EACX2/C,WAAAA,EACAS,YAAa7oF,EAAQ2G,SACtB8hF,EAAA/6F,KAAA,GAEyB25F,GAAmB,CAAEh/E,MAAAA,EAAOC,OAAAA,EAAQmgC,SAAAA,EAAU3tC,MAAOytF,IAAY,QAAzE,GAAZzB,EAAY2B,EAAAz8F,KAEA,CAAFy8F,EAAA/6F,KAAA,SAGqD,OADnE4a,EAAOwpB,mBAAmB,kBAAmB,SAAUy2D,GACYE,EAAAt8F,OAAA,kBA4CqC,cAFnG26F,EAAYr4E,sBAEb4uB,EAAWwpD,GAAqBC,EAAawB,EAAuBlsD,EAAK9zB,EAAO+E,aAAa6yB,QAAOuoD,EAAAz5F,KAAA,GAAAy5F,EAAA/6F,KAAA,GAKvFo7C,EAAUE,KAAK3L,GAAS,QAAzCtW,EAAA0hE,EAAAz8F,KAAAy8F,EAAA/6F,KAAA,iBAAA+6F,EAAAz5F,KAAA,GAAAy5F,EAAAtU,GAAAsU,EAAA,UAEMhqE,EAAQ,IAAIhzB,MAAMwqD,IAExB,IAGEx3B,EAAMqqE,MAAML,EAAAtU,GACZ,MAAMhqF,GACZ,CACI,MACMs0B,EAAK,WAIRsI,EAAU,CAAF0hE,EAAA/6F,KAAA,gBAAA+6F,EAAAt8F,OAAA,SACJ46B,GAAQ,WAIkB,iBAAxBA,EAASkuB,cAA4BluB,EAASkuB,WAAa,KAAOluB,EAASkuB,YAAc,KAAI,CAAAwzC,EAAA/6F,KAAA,eAChG,IAAIq7F,GAAyBhiE,EAASkuB,YAAW,QAGR,IAC7CL,GADE4zC,EAAaxzC,GAAiB,CAAE,EAAEjuB,GACV,UAAW,CAAF0hE,EAAA/6F,KAAA,eAC/B,IAAIs7F,GAAeR,GAAW,eAAAC,EAAAt8F,OAAA,SAG/B46B,GAAQ,yBAAA0hE,EAAAt5F,OAAA,GAAA+4F,EAAA,qBACjB90F,MAAA,KAAAD,UAAA,KAKa41F,GAAA,SAAAE,GACJ,SAAAF,EAAY9zC,GAAoB,OACrCg0C,EAAA18F,KAAA,uCAAwC0oD,IAAW,IACA,QAAA1pB,GAAAw9D,EAAAE,GAAAF,CAAA,CAH1C,CAG0C/6C,GAHTviD,QASSu9F,GAAA,SAAAE,GAGA,SAAAF,EAAAR,GAAA,IAAAW,EAEA,OADAA,EAAAD,EAAA38F,KAAA,8BACAi8F,WAAAA,EAAAW,CACA,QAAA59D,GAAAy9D,EAAAE,GAAAF,CAAA,CANA,CAMAh7C,GANAviD,QChJvD,SAGsB29F,GAAUC,EAAAC,GAAA,OAAAC,GAAAn2F,MAAC,KAADD,UAAA,UAAAo2F,KA6DD,OA7DCA,GAAA/7C,GAAA3jD,KAAAA,MAAzB,SAAA2/F,EACLC,EACAC,GAAA,IAAA3C,EAAAtoE,EAAA,OAAA50B,KAAAA,MAAA,SAAA8/F,GAAA,cAAAA,EAAA36F,KAAA26F,EAAAj8F,MAAA,OAOF,QAPE,IAAAg8F,IAAAA,EAAc,CACZl3C,MAAO,EACPS,SpEc+B,MoEXzB8zC,EAA2B0C,EAA3B1C,cAA2B0C,EAAZ50F,QAGlBkyF,EAAc94F,OAAQ,CAAF07F,EAAAj8F,KAAA,eAAAi8F,EAAAx9F,OAAA,wBAAAw9F,EAAA36F,KAAA,EAAA26F,EAAAj8F,KAAA,EAKjBq6F,GAAkB0B,GAAW,cAAAE,EAAAx9F,OAAA,UAC5B,GAAI,WAAAw9F,EAAA36F,KAAA,GAAA26F,EAAAxV,GAAAwV,EAAA,WAEPA,EAAAxV,cAAe4U,IAA4BY,EAAAxV,cAAe6U,IAAc,CAAAW,EAAAj8F,KAAA,eAAAi8F,EAAAxV,GAAA,QAchF,G9JyEyCl0E,E8JlFf,CACpB2pF,YAAaF,EAAYl3C,O9JmF7BhmC,KAAgByF,W8JpFH,U9JoFoBhS,K8J1E3BypF,EAAYl3C,OpEdW,GoEca,CAAAm3C,EAAAj8F,KAAA,SAChC+wB,EAAQ,IAAIhzB,MAAOwqD,GAAA,2BAEA,IAGAx3B,EAAAqqE,MAAAa,EAAAxV,EACA,OAAAhqF,GACA,CACA,MAEAs0B,EAAA,QAIA,OAAAirE,EAAAz2C,YAAAy2C,EAAAl3C,MAAAm3C,EAAAx9F,OAAA,SAEA,IAAAwC,SAAA,SAAArB,EAAA8O,GACA0f,WAAA0xB,GAAA3jD,KAAAA,MAAA,SAAAggG,IAAA,OAAAhgG,KAAAA,MAAA,SAAAigG,GAAA,cAAAA,EAAA96F,KAAA86F,EAAAp8F,MAAA,cAAAo8F,EAAA96F,KAAA,EAAA86F,EAAAp8F,KAAA,EAEA07F,GAAAK,EAAAC,GAAA,OACAp8F,GAAA,GAAAw8F,EAAAp8F,KAAA,eAAAo8F,EAAA96F,KAAA,EAAA86F,EAAA3V,GAAA2V,EAAA,SAEA1tF,EAAA0tF,EAAA3V,IAAA,wBAAA2V,EAAA36F,OAAA,GAAA06F,EAAA,kBAEAH,EAAAz2C,SACA,8BAAA02C,EAAAx6F,O9J8CxB,IAAkC8Q,C8J9CV,GAAAupF,EAAA,oBAEAp2F,MAAA,KAAAD,UAAA,CCvExB,IAAM42F,GAAY,cCkEzB,IAGaC,GAAA,WAoFJ,SAAAA,EAAAC,GAMJ,IAAAC,EAAA,KALDr1F,EAAOo1F,EAAPp1F,QACAs1F,EAAgBF,EAAhBE,iBAICH,EAAA3/F,UAAAiS,OAAA/P,KAAA,MAAAy9F,EAAA3/F,UAAAkS,QAAAhQ,KAAA,MAAAy9F,EAAA3/F,UAAAmS,QAAAjQ,KAAA,MAAAy9F,EAAA3/F,UAAAoS,QAAAlQ,KAAA,MAAAy9F,EAAA3/F,UAAA+/F,QAAA79F,KAAA,MAAAy9F,EAAA3/F,UAAAggG,QAAA99F,KAAA,MACDK,KAAK8qF,YAAc,KACnB9qF,KAAKy9C,mBAAqB,GAC1Bz9C,KAAK09F,yBAA2B,GAChC19F,KAAK+qF,cAAgB,UACrB/qF,KAAKorF,SAAW,CACdC,iBtEvJqC,IsEwJrC9B,kBtErJsC,KsEuJxCvpF,KAAK29F,cAAgB1rF,KAAKC,MAC1BlS,KAAKwkD,YAAa,EAClBxkD,KAAK49F,WAAY,EACjB59F,KAAK69F,8BAA+B,EACpC79F,KAAK89F,SAAW,CACd9R,SAAU,IAAI3qB,IACdyqB,SAAU,IAAIzqB,IACdytB,KAAM,GACNxD,iBAAkBr5E,KAAKC,MACvB6rF,WAAY,IAGd/9F,KAAKg+F,kBAAoBT,EACzBv9F,KAAKuvB,SAAWtnB,EAEhBjI,KAAKi+F,gBC7JF,SAAkBryF,EAAwBivD,EAAc5yD,GAC7D,IAAIi2F,EAEAC,EACAC,EAEEC,EAAUp2F,GAAWA,EAAQo2F,QAAUx5F,KAAKsF,IAAIlC,EAAQo2F,QAASxjC,GAAQ,EAE/E,SAASyjC,IAGP,OAFAC,IACAL,EDmJsCZ,EAAKkB,QCjJ7C,CAEA,SAASD,SACK56F,IAAZw6F,GAAyBpnE,aAAaonE,QACvBx6F,IAAfy6F,GAA4BrnE,aAAaqnE,GACzCD,EAAUC,OAAaz6F,CACzB,CASA,SAAS86F,IAUP,OATIN,GACFpnE,aAAaonE,GAEfA,EAAUjvE,WAAWovE,EAAYzjC,GAE7BwjC,QAA0B16F,IAAfy6F,IACbA,EAAalvE,WAAWovE,EAAYD,IAG/BH,CACT,CAIA,OAFAO,EAAUC,OAASH,EACnBE,EAAU16C,MArBV,WACE,YAAgBpgD,IAAZw6F,QAAwCx6F,IAAfy6F,EACpBE,IAEFJ,CACT,EAiBOO,CACT,CDkH2BE,CAAS,EAAqB3+F,KAAKuvB,SAASqvE,cAAe,CAChFP,QAASr+F,KAAKuvB,SAASsvE,gBAGzB7+F,KAAK8+F,mBD/KF,SACLlqF,EACAmqF,EACAC,GAEA,IAAMC,EAAU,IAAInyF,IAehBoyF,GAAc,EAElB,OAAO,WAEL,IAAMhtF,EAAMrN,KAAKylC,MAAMr4B,KAAKC,MAAQ,KAMpC,GAvBe,SAACA,GAChB,IAAMO,EAAYP,EAAM8sF,EACxBC,EAAQ1+F,SAAQ,SAAC6Q,EAAQnN,GACnBA,EAAMwO,GACRwsF,EAAO,OAAQh7F,EAEvB,GACA,CAaIk7F,CAASjtF,GAVF,GAAAwK,OAAIuiF,EAAQ98F,UAAUoV,QAAO,SAACvZ,EAAGmhB,GAAC,OAAKnhB,EAAImhB,CAAC,GAAE,IAa7B4/E,EAAU,CAChC,IAAMK,EAAeF,EAErB,OADAA,GAAc,EACPE,EA5CU,YA4CejC,EAClC,CAEA+B,GAAc,EACd,IAAMt5C,EAAQq5C,EAAQ/6F,IAAIgO,IAAQ,EAGlC,OAFA+sF,EAAQ36F,IAAI4N,EAAK0zC,EAAQ,GAElBhxC,EAAEpO,WAAC,EAADD,UACb,CACA,CCqI8B84F,EACxB,SAACnxF,EAAuBunE,GAAU,O7BpJjC,SACL31B,EACA5xC,EACAunE,GAEA,OAAK2U,GAAetqC,EAAQ5xC,GAIrBm8E,GAAUvqC,EAAQ5xC,EAAOunE,GAHvB1zE,QAAQrB,QAAQ,KAI3B,C6B0IuDikF,CAAS2Y,EAAMpvF,EAAOunE,EAAW,GAElF,IAEA,GAGF,IAAA6pB,EAAuDt/F,KAAKygB,aAApD8+E,EAAgBD,EAAhBC,iBAAkBC,EAAAF,EAAAE,yBAEpB1f,EAA+Cyf,EACjD,CACE9sF,UAAW5N,KAAKgnC,ItEjKU,IsEiKgB0zD,GAC1Cv7C,QAASu7C,EACTjf,ctEjK+B,IsEkK/BlY,eAAgBo3B,EAA2BA,EAAyBz2F,KAAK,KAAO,SAElFpF,EAEAm8E,IACF9/E,KAAKw2F,cAAgB,IAAI3W,GAAc7/E,KAAM8/E,GAEjD,CAEF,IAAA2f,EAAArC,EAAA3/F,UAqjCoE,OArjCpEgiG,EACS/qC,WAAA,WACL,OAAO10D,KAAK89F,QACd,EAEF2B,EACSt5F,UAAA,WACL,OAAOnG,KAAKwkD,UACd,EAEFi7C,EACSvU,SAAA,WACL,OAAOlrF,KAAK49F,SACd,EAEF6B,EAGSlG,kBAAA,WACL,OAAO/xF,QAAQxH,KAAK0/F,QACtB,EAEFD,EACSh/E,WAAA,WACL,OAAOzgB,KAAKuvB,QACd,EAEFkwE,EAISE,mBAAA,SAAmBrX,GACxB,IAAAsX,EAA+C5/F,KAAKuvB,SAA5CmoE,EAAekI,EAAflI,gBAAiB/O,EAAAiX,EAAAjX,kBAIrB+O,GAAmB,GAAK/O,GAAqB,IAMjD3oF,KAAK6/F,8BAA8BvX,GAE9BtoF,KAAKoT,SAMmB,IAAzBpT,KAAKoT,QAAQ2G,UAQjB/Z,KAAK+qF,cAAyC,WAAzB/qF,KAAKoT,QAAQ2G,SAAmD,IAA3B/Z,KAAKoT,QAAQi1E,UAAkB,SAAW,UAGnEroF,KAAK+qF,cACpC/qF,KAAKuvB,SAASqZ,aAAakhD,eAG7B9pF,KAAK8/F,wBAnBH9/F,KAAK+/F,iBAAiB,IAAIlhG,MAAM,4CAoBpC,EAEF4gG,EAOSlpD,MAAA,WACL,GAAIv2C,KAAKwkD,YAAqC,YAAvBxkD,KAAK+qF,cAC1B,MAAM,IAAIlsF,MAAM,2CAGlB,GAAImB,KAAKwkD,YAAqC,WAAvBxkD,KAAK+qF,cAC1B,MAAM,IAAIlsF,MAAM,sEAG0CmB,KAAKuvB,SAASqZ,aAAakhD,eAMvF9pF,KAAKggG,sBAEL,IAAM5sF,EAAUu2E,GACd,CACEL,kBAAmBtpF,KAAKuvB,SAAS+5D,kBACjCC,kBAAmBvpF,KAAKorF,SAAS7B,kBACjCO,eAAgB9pF,KAAKuvB,SAASqZ,aAAakhD,gBAE7C,CACEhB,cAAe9oF,KAAKuvB,SAASu5D,cAE7BH,kBAAmB,EACnBC,gBAAgB,IAIpB5oF,KAAKoT,QAAUA,EAEfpT,KAAK8/F,sBACP,EAEFL,EAISQ,eAAA,WACL,GAAIjgG,KAAKwkD,WACP,MAAM,IAAI3lD,MAAM,2CAGyCmB,KAAKuvB,SAASqZ,aAAakhD,eAEtF,IAAM12E,EAAUu2E,GACd,CACEJ,kBAAmBvpF,KAAKorF,SAAS7B,kBACjCD,kBAAmBtpF,KAAKuvB,SAAS+5D,kBACjCQ,eAAgB9pF,KAAKuvB,SAASqZ,aAAakhD,gBAE7C,CACEhB,cAAe9oF,KAAKuvB,SAASu5D,cAC7BH,kBAAmB,EACnBC,gBAAgB,IAIpB5oF,KAAKoT,QAAUA,EAEfpT,KAAK+qF,cAAgB,SACrB/qF,KAAK8/F,sBACP,EAEFL,EAKSS,eAAA,WACL,IACE,IAAMC,EAAgBngG,KAAK0/F,QAE3B1/F,KAAKogG,eAAiBzmB,GAAMvzE,EAAC,CAAC,EACzBpG,KAAKg+F,kBAImB,WAAvBh+F,KAAK+qF,eAA8B,CAAEnR,iBtEpVb,KsEoVqD,CACjF54D,KAAM83E,GAAuB94F,MAC7BknE,WAAYlnE,KAAKqgG,oBACbF,EACA,CACE3uC,aAAc2uC,EAAc3uC,aAC5BmqB,iBAAkBwkB,EAAcxkB,iBAChCjU,SAAUy4B,EAAcz4B,SACxBtW,eAAgB+uC,EAAc/uC,gBAEhC,CAAC,GAEP,OAAOliD,GACPlP,KAAK+/F,iBAAiB7wF,EACxB,CACF,EAEFuwF,EAMSa,cAAA,WACL,IAME,OALItgG,KAAKogG,iBACPpgG,KAAKogG,iBACLpgG,KAAKogG,oBAAiBz8F,IAGjB,CACP,OAAOuL,GAEP,OADAlP,KAAK+/F,iBAAiB7wF,IACf,CACT,CACF,EAEFuwF,EAIel9F,KAAI,eAAAg+F,EAAA3/C,GAAA3jD,KAAAA,MAAV,SAAAujG,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAA3jG,KAAAA,MAAA,SAAA4jG,GAAA,cAAAA,EAAAz+F,KAAAy+F,EAAA//F,MAAA,OAAiC,GAAwD6/F,GAAzFD,OAAA,IAAAD,EAAuF,CAAC,EAACA,GAA5EG,WAAAA,OAAA,IAAAD,GAAkBA,EAAED,EAAAnxF,OACjCvP,KAAKwkD,WAAY,CAAFq8C,EAAA//F,KAAA,eAAA+/F,EAAAthG,OAAA,iBAmB4C,GAbhES,KAAKwkD,YAAa,EAAKq8C,EAAAz+F,KAAA,EAKyC,KAAAmtB,SAAAqZ,aAAAkhD,eAGA,KAAAgX,mBACA,KAAAR,gBAEA,KAAArC,gBAAAS,UAGAkC,EAAA,CAAAC,EAAA//F,KAAA,gBAAA+/F,EAAA//F,KAAA,GACA,KAAA09F,OAAA,CAAAuC,OAAA,YAIA,KAAAjW,aAAA,KAAAA,YAAApR,UACA,KAAAoR,YAAA,KE3avChrC,EF+auC,KEvapE,WACE,GAAKmoC,KAIL,IACEngF,GAAOogF,eAAe8Y,WAAW53C,IACjC,MAAM7rD,GACV,CAEA,CAjBE0jG,GACAnhD,EAAO1sC,aAAUzP,EF6aiDk9F,EAAA//F,KAAA,iBAAA+/F,EAAAz+F,KAAA,GAAAy+F,EAAAtZ,GAAAsZ,EAAA,SAEA,KAAAd,iBAAAc,EAAAtZ,IAAA,yBAAAsZ,EAAAt+F,OEjb7D,IAAsBu9C,CFibuC,GAAA0gD,EAAA,mBAjCjD,OAmCiD,SAnCjDU,GAAA,OAAAX,EAAA/5F,MAAC,KAADD,UAAA,KAqCiDk5F,EAKA0B,MAAA,WACA,KAAAvD,YAIA,KAAAA,WAAA,EACA,KAAA0C,gBAEA,KAAA/wE,SAAAqZ,aAAAkhD,eACA,EAEA2V,EAMA2B,OAAA,WACA,KAAAxD,WAAA,KAAAyD,kBAIA,KAAAzD,WAAA,EACA,KAAAsC,iBAEA,KAAA3wE,SAAAqZ,aAAAkhD,eACA,EAEA2V,EAOAvT,0BAAA,eAAAoV,EAAA1gD,GAAA3jD,KAAAA,MAAA,SAAAskG,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3kG,KAAAA,MAAA,SAAA4kG,GAAA,cAAAA,EAAAz/F,KAAAy/F,EAAA/gG,MAAA,UAAA2gG,QAAA,IAAAD,EAAA,GAAAA,GAAAE,kBAAAA,OAAA,IAAAD,GAAAA,EACA,iBAAA1W,cAAA,CAAA8W,EAAA/gG,KAAA,eAAA+gG,EAAAtiG,OAAA,SACA,KAAAuiG,kBAAA,OAUA,OAPAH,EAAA1vF,KAAAC,MAEA,KAAAqd,SAAAqZ,aAAAkhD,eAKA+X,EAAA/gG,KAAA,EACA,KAAAghG,iBAAA,OAEA,GAAAF,EAAA,KAAAtB,gBAEAoB,GAAAE,EAAA,CAAAC,EAAA/gG,KAAA,gBAAA+gG,EAAAtiG,OAAA,qBAKA,iBAAAwrF,cAAA,CAAA8W,EAAA/gG,KAAA,gBAAA+gG,EAAAtiG,OAAA,kBAKA,KAAAwrF,cAAA,UAGA,KAAA33E,UACA,KAAA4sF,oBAAA2B,GACA,KAAAI,uBAAAJ,GACA,KAAAK,qBAGA,KAAA9B,iBAAA,yBAAA2B,EAAAt/F,OAAA,GAAAg/F,EAAA,UApCA,OAqCA,SArCAU,GAAA,OAAAX,EAAA96F,MAAA,KAAAD,UAAA,KAuCAk5F,EAQAngB,UAAA,SAAAv0C,GAEA,IAAAm3D,EAAAn3D,IAIA,gBAAAggD,gBAMA,IAAAmX,GAMA,KAAAjE,iBACA,EAEAwB,EAKArgB,oBAAA,WAKA,GAJA,KAAA4gB,sBAIA,KAAAI,eAaA,KAAA/gB,+BAEA,KAAA0iB,6BAfA,CAGA,SAAAV,gBACA,OAIA,KAAAD,QAEA,CAMA,EAEA3B,EAOA0C,mBAAA,WACA,KAAAnC,sBACA,KAAA+B,wBACA,EAEAtC,EAGA2C,iBAAA,WACA,sBAAArX,cACAhpF,QAAArB,UAGA,KAAAohG,gBACA,EAEArC,EAGA17C,MAAA,WACA,YAAAk6C,iBACA,EAEAwB,EAKAqC,eAAA,WAGA,OAFA,KAAA7D,kBAEA,KAAAA,gBAAAl6C,OACA,EAEA07C,EAGA4C,YAAA,WACA,KAAApE,gBAAAS,QACA,EAEAe,EACAtI,aAAA,WACA,YAAA/jF,SAAA,KAAAA,QAAAxP,EACA,EAEA67F,EAQApgB,6BAAA,WAKA,KACA,KAAAse,eACA3U,GAAA,KAAA2U,cAAA,KAAAvS,SAAAC,mBACA,KAAAj4E,SACA,iBAAAA,QAAA2G,SAYA,aAAAsnF,gBANA,KAAAF,OAYA,EAEA1B,EAKApG,gBAAA,WACA,IAAAiJ,EAAA,GAAAx6F,GAAAstB,SAAAylB,SAAA/yC,GAAAstB,SAAAyG,KAAA/zB,GAAAstB,SAAAwG,OACAtf,EAAA,GAAAxU,GAAAstB,SAAAta,OAAAwnF,EAEA,KAAA7kD,mBAAA,GACA,KAAAigD,yBAAA,GAGA,KAAA6E,gBAEA,KAAAzE,SAAAC,WAAAzhF,EACA,KAAAwhF,SAAAxS,iBAAAr5E,KAAAC,MACA,KAAA4rF,SAAAhP,KAAA7tF,KAAAqb,EACA,EAEAmjF,EAIAlgB,kBAAA,SACArxE,EACAunE,GACA,IAAA+sB,EAAA,KACAl6E,EAAA,KAAAw2E,mBAAA5wF,EAAAunE,GAIA,GAAAntD,IAAA60E,GAAA,CACA,IAAAj9E,EAAA+iE,GAAA,CACAhnD,SAAA,qBAGA,KAAAqjD,WAAA,WAEA,OAAA6K,GAAAqY,EAAA,CACA/iG,KP9rB/B,EO+rB+BmU,UAAAsM,EAAAtM,WAAA,EACA7E,KAAA,CACAi6B,IAAA,aACAsI,QAAApxB,EACAipB,QAAA,IAGA,GACA,CAEA,OAAA7gB,CACA,EAEAm3E,EAIA1c,gBAAA,WAEA,IAAAkV,EAAA,KAAAA,iBAAA73E,KAAAoF,iBAGAra,GADA8sF,GAAAv9E,GAAAu9E,GAAAlpF,MAAA,IACAkwB,IACA,GAAAg5D,GAAA9sF,GAAA,mBAAAH,SAAAG,GAIA,OAAAuP,GAAAu9E,GAAAt2E,WACA,EAEA89E,EAIAK,qBAAA,WACA,KAAAzG,kBAIA,KAAA0I,yBAEA,KAAAjX,YG9tB7D,SAA0B2X,GAGQ,IAFvChJ,EAAcgJ,EAAdhJ,eACWiJ,EAAeD,EAA1BE,UAEA,GACElJ,GAEAt1F,OAAOy+F,OACP,CACA,IAAMvd,EAWV,SAAqBqd,GACnB,IACE,IAAMC,EAAYD,IAgBqE,oBAAAG,kCAAAA,iCAIA,IC5DhDtlG,EAAE,IAAIyvF,KAAK,CCAvC,kjUDAmDn1C,IAAIirD,gBAAgBvlG,KD0ClF,IAAKolG,EACH,OAIqF,IAAAtd,EAAA,IAAAud,OAAAD,GACA,WAAAlc,GAAApB,EACA,OAAAxzD,GAGA,CAGA,ICvDhDt0B,CDqDgD,CA1BxEwlG,CAAYL,GAE3B,GAAIrd,EACF,OAAOA,CAEX,CAGA,OAAO,IAAIf,EACb,CH4sBoE0e,CAAA,CACAvJ,eAAA,KAAAlqE,SAAAkqE,eACAkJ,UAAA,KAAApzE,SAAAozE,YAGA,KAAA7B,mBACA,KAAAmC,gBAGA,KAAAz+C,YAAA,EACA,KAAAo5C,WAAA,EAEA,KAAAsC,gBACA,EAEAT,EACAM,iBAAA,SAAAluE,GAMA,EAEA4tE,EAGAI,8BAAA,SAAAvX,GAGA,IAAAM,EAAA,KAAAr5D,SAAAmoE,gBAAA,EAEAtkF,EAAAu2E,GACA,CACAJ,kBAAA,KAAA6B,SAAA7B,kBACAD,kBAAA,KAAA/5D,SAAA+5D,kBACAQ,eAAA,KAAAv6D,SAAAqZ,aAAAkhD,eACAxB,kBAAAA,GAEA,CACAQ,cAAA,KAAAv5D,SAAAu5D,cACAH,kBAAA,KAAAp5D,SAAAo5D,kBACAC,eAAAA,IAIA,KAAAx1E,QAAAA,CACA,EAEAqsF,EAIA4B,cAAA,WAGA,SAAAjuF,QACA,SAGA,IAAAoX,EAAA,KAAApX,QAEA,OACAq2E,GAAAj/D,EAAA,CACA++D,kBAAA,KAAA6B,SAAA7B,kBACAD,kBAAA,KAAA/5D,SAAA+5D,sBAKA,KAAA4Z,gBAAA14E,IACA,EAIA,EAEAi1E,EAKAyD,gBAAA,eAAAC,EAAAviD,GAAA3jD,KAAAA,MAAA,SAAAmmG,EAAAhwF,GAAA,OAAAnW,KAAAA,MAAA,SAAAomG,GAAA,cAAAA,EAAAjhG,KAAAihG,EAAAviG,MAAA,UACA,KAAA0jD,WAAA,CAAA6+C,EAAAviG,KAAA,eAAAuiG,EAAA9jG,OAAA,wBAAA8jG,EAAAviG,KAAA,EAGA,KAAAyB,KAAA,CAAAgN,OAAA,2BACA,KAAAowF,mBAAAvsF,EAAAxP,IAAA,wBAAAy/F,EAAA9gG,OAAA,GAAA6gG,EAAA,UALA,OAMA,SANAE,GAAA,OAAAH,EAAA38F,MAAA,KAAAD,UAAA,KAQAk5F,EAGAwD,cAAA,WACA,IACAn7F,GAAAwO,SAAA4f,iBAAA,wBAAAqtE,yBACAz7F,GAAAouB,iBAAA,YAAAstE,mBACA17F,GAAAouB,iBAAA,aAAAutE,oBACA37F,GAAAouB,iBAAA,eAAAwtE,sBAEA,KAAAlN,eACA,KAAAA,cAAA9V,eAIA,KAAAmd,+BACAjI,GAAA,MAEA,KAAAiI,8BAAA,EAEA,OAAA3uF,GACA,KAAA6wF,iBAAA7wF,EACA,CAEA,KAAAy0F,4BMz1B7D,SAAkC7jD,GACvC,SAAS8jD,EAAoBv3D,GAEtByT,EAAOrC,mBAAmBzyC,SAASqhC,IACtCyT,EAAOrC,mBAAmBx8C,KAAKorC,EAEnC,CAEA,SAASw3D,EAASC,GAAGA,EAAAxsF,QACX/W,QAAQqjG,EAClB,CAEA,IAAMG,EAAiC,GAavC,MAXC,CAAC,aAAc,QAAS,YAAsBxjG,SAAQ,SAAAd,GACrDskG,EAAe9iG,KAAKosC,GAAqC5tC,EAAMokG,GACnE,IAEEE,EAAe9iG,KACbgsC,IAA6B,SAAA+2D,GAAgB,IAAb76D,EAAA66D,EAAA76D,OAC9B2W,EAAO49C,yBAAyBz8F,KpDoH3B,SAAAkoC,GAIA,IAAA7xB,EAAA6xB,EAAA7xB,QACAo3B,EAAAp3B,EAAAA,EAAAjW,OAAA,GACAg7B,EAAAqS,EAAAA,EAAArS,aAAA14B,EAEArF,EAAA6qC,EAAA7qC,MAEAkjC,EAAAmY,GAAAr7C,GAcA,MAZA,CACAmB,KAAA,2BACAgC,KAAA,2BACA80C,MAAA/U,EACAA,IAAAA,EACAzyB,KAAA,CACAzQ,MAAAA,EACA6gD,KAAA7gD,EACAwmE,OAAAzoC,EAAAs9C,GAAAnpB,OAAAlF,MAAAjvB,QAAA14B,GAKA,CoD7IgCsgG,CAA0B96D,GACrE,KAIS,WACL46D,EAAexjG,SAAQ,SAAA2jG,GAAA,OAAiBA,GAAe,GAC3D,CACA,CN6zBoEC,CAAA,KACA,EAEA1E,EAGAqB,iBAAA,WACA,IACAh5F,GAAAwO,SAAA60B,oBAAA,wBAAAo4D,yBAEAz7F,GAAAqjC,oBAAA,YAAAq4D,mBACA17F,GAAAqjC,oBAAA,aAAAs4D,oBACA37F,GAAAqjC,oBAAA,eAAAu4D,sBAEA,KAAAlN,eACA,KAAAA,cAAAtV,kBAGA,KAAAyiB,6BACA,KAAAA,6BAEA,OAAAz0F,GACA,KAAA6wF,iBAAA7wF,EACA,CACA,EAEAuwF,EAMA/vF,OAAA,eAAA00F,EAAA,UAAAb,wBAAA,WACA,YAAAz7F,GAAAwO,SAAA40B,gBACAk5D,EAAAC,6BAEAD,EAAAE,4BAEA,GAEA7E,EAGA9vF,QAAA,eAAA40F,EAAA,UAAAf,kBAAA,WACA,IAAAtjF,EAAA+iE,GAAA,CACAhnD,SAAA,YAKAsoE,EAAAD,2BAAApkF,EACA,GAEAu/E,EAGA7vF,QAAA,eAAA40F,EAAA,UAAAf,mBAAA,WACA,IAAAvjF,EAAA+iE,GAAA,CACAhnD,SAAA,aAKAuoE,EAAAH,2BAAAnkF,EACA,GAEAu/E,EACA5vF,QAAA,eAAA40F,EAAA,UAAAf,qBAAA,SAAAx1F,IO55B7D,SAA6B4xC,EAAyB5xC,GAC3D,GAAK4xC,EAAO35C,YAAZ,CAOA25C,EAAOqiD,qBAEP,IAAMjiF,EAUD,SAA+BhS,GACpC,IAAQwoF,EAAoDxoF,EAApDwoF,QAASE,EAA2C1oF,EAA3C0oF,SAAUD,EAAiCzoF,EAAjCyoF,QAASF,EAAwBvoF,EAAxBuoF,OAAQxyF,EAAgBiK,EAAhBjK,IAAKkI,EAAW+B,EAAX/B,OAGjD,IAAKA,GA+BP,SAAwBA,GACtB,MAA0B,UAAnBA,EAAO/C,SAA0C,aAAnB+C,EAAO/C,SAA0B+C,EAAOwqB,iBAC/E,CAjCiB+tE,CAAev4F,KAA2BlI,EACvD,OAAO,KAIT,IAAM0gG,EAAiBjO,GAAWC,GAAWF,EACvCmO,EAAgC,IAAf3gG,EAAI5C,OAI3B,IAAKsjG,GAAkBC,EACrB,OAAO,KAGT,IAAM74F,EAAUhE,EAAiBoE,EAAQ,CAAEzD,gBAAiB,OAAU,YAGtE,OAAOu6E,GAAiB,CACtBhnD,SAAU,aACVlwB,QAAAA,EACAgD,KAAI3I,EAAA,GALiBi9E,GAAqBl3E,EAAgBJ,GAMtCgD,KAAI,CACtB2nF,QAAAA,EACAE,SAAAA,EACAD,QAAAA,EACAF,OAAAA,EACAxyF,IAAAA,KAGN,CA3CqB4gG,CAAsB32F,GAEpCgS,GAILi/D,GAAmBr/B,EAAQ5/B,EAb3B,CAcF,CP44BoE4kF,CAAAL,EAAAv2F,EACA,GAEAuxF,EAGA6E,2BAAA,SAAApkF,GACA,KAAA9M,UAIAg2E,GAAA,KAAAh2E,QAAA,CACAk2E,kBAAA,KAAA/5D,SAAA+5D,kBACAC,kBAAA,KAAA6B,SAAA7B,sBAOArpE,GACA,KAAA6kF,wBAAA7kF,GAQA,KAAAkiF,oBACA,EAEA3C,EAGA4E,2BAAA,SAAAnkF,GACA,KAAA9M,SAIA,KAAAisE,gCAUAn/D,GACA,KAAA6kF,wBAAA7kF,EAEA,EAEAu/E,EAGAO,oBAAA,SAAArC,QAAA,IAAAA,IAAAA,EAAA1rF,KAAAC,OACA,KAAAyrF,cAAAA,CACA,EAEA8B,EAGAsC,uBAAA,SAAApE,QAAA,IAAAA,IAAAA,EAAA1rF,KAAAC,OACA,KAAAkB,UACA,KAAAA,QAAAg1E,aAAAuV,EACA,KAAAqE,oBAEA,EAEAvC,EAGAsF,wBAAA,SAAA7kF,GAAA,IAAA8kF,EAAA,KACA,KAAA1lB,WAAA,WAGA0lB,EAAAzlB,kBAAA,CACA9/E,KAAA6/D,GAAA8W,OACAxiE,UAAAsM,EAAAtM,WAAA,EACA7E,KAAA,CACAi6B,IAAA,aACAsI,QAAApxB,IAGA,GACA,EAEAu/E,EAIAwF,uBAAA,WACA,I9Ct+BlE3tF,E8Cs+BkEmmC,G9Ct+BlEnmC,E8Cs+BkE,KAAAmmC,mB9Cp+B3DnmC,EAAQ1N,IAAIw6E,IAAwB36E,OAAOjC,U8Co+BgBkV,OAAA,KAAAghF,0BAKA,OAHA,KAAAjgD,mBAAA,GACA,KAAAigD,yBAAA,GAEA37F,QAAAmmD,IAAAkkC,GAAA,KAAA3uC,GACA,EAEAgiD,EAGA8C,cAAA,WAEA,KAAAzE,SAAA9R,SAAAlmE,QACA,KAAAg4E,SAAAhS,SAAAhmE,QACA,KAAAg4E,SAAAhP,KAAA,EACA,EAEA2Q,EACAyF,uCAAA,WACA,IAAA9xF,EAAA,KAAAA,QAAA03E,EAAA,KAAAA,YACA,GAAA13E,GAAA03E,IAKA13E,EAAAi1E,UAAA,CAIA,IAAA2R,EAAAlP,EAAA3F,uBACA6U,GAAAA,EAAA,KAAA8D,SAAAxS,mBACA,KAAAwS,SAAAxS,iBAAA0O,EAJA,CAMA,EAEAyF,EAGA0F,iBAAA,WACA,IAAArH,EAAA,CACAxS,iBAAA,KAAAwS,SAAAxS,iBACAyS,WAAA,KAAAD,SAAAC,WACA/R,SAAAxjF,MAAA2yB,KAAA,KAAA2iE,SAAA9R,UACAF,SAAAtjF,MAAA2yB,KAAA,KAAA2iE,SAAAhS,UACAgD,KAAA,KAAAgP,SAAAhP,MAKA,OAFA,KAAAyT,gBAEAzE,CACA,EAEA2B,EAQA2F,UAAA,eAAAC,EAAAzkD,GAAA3jD,KAAAA,MAAA,SAAAqoG,IAAA,IAAAzpD,EAAAjoC,EAAA6nF,EAAApT,EAAA8R,EAAAz+E,EAAA,OAAAze,KAAAA,MAAA,SAAAsoG,GAAA,cAAAA,EAAAnjG,KAAAmjG,EAAAzkG,MAAA,OACA,GAAA+6C,EAAA,KAAAs7C,eAEA,KAAA/jF,SAAA,KAAA03E,aAAAjvC,EAAA,CAAA0pD,EAAAzkG,KAAA,QACA,OAAAykG,EAAAhmG,OAAA,wBAAAgmG,EAAAzkG,KAAA,EAIA,KAAAmkG,yBAAA,UAGA,KAAAna,aAAA,KAAAA,YAAA9C,UAAA,CAAAud,EAAAzkG,KAAA,eAAAykG,EAAAhmG,OAAA,wBAAAgmG,EAAAzkG,KAAA,GAKAs3F,GAAA,iBAGA,KAAAtN,YAAA,CAAAya,EAAAzkG,KAAA,gBAAAykG,EAAAhmG,OAAA,qBAKAs8C,IAAA,KAAAs7C,eAAA,CAAAoO,EAAAzkG,KAAA,gBAAAykG,EAAAhmG,OAAA,kBAYA,GAZAgmG,EAAAnjG,KAAA,GAMA,KAAA8iG,4CAEAtxF,EAAA3B,KAAAC,OAKA,KAAA4rF,SAAAxS,iBAAA,KAAA/7D,SAAA+5D,kBAAA,MAAAic,EAAAzkG,KAAA,eACA,IAAAjC,MAAA,mDAQA,OALA48F,EAAA,KAAA0J,mBAEA9c,EAAA,KAAAj1E,QAAAi1E,YACA,KAAA2Z,oBAEAuD,EAAAzkG,KAAA,GACA,KAAAgqF,YAAApoF,SAAA,eAAAy3F,EAAAoL,EAAAnmG,KAAAmmG,EAAAzkG,KAAA,GAEA07F,GAAA,CACA3gD,SAAAA,EACAs+C,cAAAA,EACA9R,UAAAA,EACAoT,aAAAA,EACAroF,QAAA,KAAAA,QACAnL,QAAA,KAAAwY,aACA7M,UAAAA,IACA,QAAA2xF,EAAAzkG,KAAA,iBAAAykG,EAAAnjG,KAAA,GAAAmjG,EAAAhe,GAAAge,EAAA,UAEA,KAAAxF,iBAAAwF,EAAAhe,IAOA,KAAAhlF,KAAA,CAAAgN,OAAA,gBAEAmM,EAAAyE,OAGAzE,EAAAwpB,mBAAA,uBACA,yBAAAqgE,EAAAhjG,OAAA,GAAA+iG,EAAA,oBAxEA,OA0EA,WA1EA,OAAAD,EAAA7+F,MAAA,KAAAD,UAAA,KA4EAk5F,EAIAjC,QAAA,eAAAgI,EAAA,UAAAhH,OAAA,eAAAiH,EAAA7kD,GAAA3jD,KAAAA,MAAA,SAAAyoG,EAAAC,GAAA,IAAAC,EAAA7E,EAAAxqD,EAAArkC,EAAAgC,EAAA2xF,EAAAC,EAAAhb,EAAA,OAAA7tF,KAAAA,MAAA,SAAA8oG,GAAA,cAAAA,EAAA3jG,KAAA2jG,EAAAjlG,MAAA,OACA,GAQA8kG,QATA,IAAAD,EASA,GAAAA,GARA5E,MAAAA,OAAA,IAAA6E,GAAAA,EASAJ,EAAAhhD,YAAAu8C,EAAA,CAAAgF,EAAAjlG,KAAA,eAAAilG,EAAAxmG,OAAA,oBAKAimG,EAAAnmB,+BAAA,CAAA0mB,EAAAjlG,KAAA,QACA,OAAAilG,EAAAxmG,OAAA,oBAIAimG,EAAApyF,QAAA,CAAA2yF,EAAAjlG,KAAA,eAAAilG,EAAAxmG,OAAA,iBAeA,GAVAg3C,EAAAivD,EAAApyF,QAAAa,QACA/B,EAAAD,KAAAC,MACAgC,EAAAhC,EAAAqkC,EAGAivD,EAAAvH,gBAAAS,SAIAmH,EAAA3xF,EAAAsxF,EAAAj2E,SAAAy2E,kBACAF,EAAA5xF,EAAAsxF,EAAAj2E,SAAA+5D,kBAAA,KACAuc,IAAAC,EAAA,CAAAC,EAAAjlG,KAAA,SAUA,OARA+D,KAAAylC,MAAAp2B,EAAA,KAGAsxF,EAAAj2E,SAAAqZ,aAAAkhD,eAGA+b,GACAL,EAAAvH,kBACA8H,EAAAxmG,OAAA,kBAWA,IAPAurF,EAAA0a,EAAA1a,cACA,IAAA0a,EAAApyF,QAAAi1E,YAAAyC,EAAArG,aACA+gB,EAAAj2E,SAAAqZ,aAAAkhD,eAMA0b,EAAAS,WAAA,CAAAF,EAAAjlG,KAAA,SACA,OAAA0kG,EAAAS,WAAAT,EAAAJ,YAAAW,EAAAjlG,KAAA,GACA0kG,EAAAS,WAAA,QACA,OAAAT,EAAAS,gBAAAtiG,EAAAoiG,EAAAxmG,OAAA,yBAAAwmG,EAAA3jG,KAAA,GAAA2jG,EAAAjlG,KAAA,GAWA0kG,EAAAS,WAAA,QAAAF,EAAAjlG,KAAA,iBAAAilG,EAAA3jG,KAAA,GAAA2jG,EAAAxe,GAAAwe,EAAA,UAEA,QAEA,OAFAA,EAAA3jG,KAAA,GAEAojG,EAAAvH,kBAAA8H,EAAArjG,OAAA,6BAAAqjG,EAAAxjG,OAAA,GAAAmjG,EAAA,0BAEA,gBAAAQ,GAAA,OAAAT,EAAAj/F,MAAA,KAAAD,UAAA,EA9EA,EA8EA,EAEAk5F,EACAuC,kBAAA,WACA,KAAA5uF,SAAA,KAAAmc,SAAAu5D,eACAP,GAAA,KAAAn1E,QAEA,EAEAqsF,EACAhC,QAAA,eAAA0I,EAAA,UAAA9F,mBAAA,SAAA5+B,GACA,IAAA7b,EAAA6b,EAAApgE,OAEA+kG,EAAAD,EAAA52E,SAAA62E,cAEAC,EAAAD,GAAAxgD,EAAAwgD,EAIA,GAAAxgD,EALAugD,EAAA52E,SAAA+2E,yBAKAD,EAAA,CACA,IAAAnmF,EAAA+iE,GAAA,CACAhnD,SAAA,mBACAltB,KAAA,CACA62C,MAAAA,EACAxoB,MAAAipE,KAGAF,EAAApB,wBAAA7kF,EACA,CAGA,OAAAmmF,IAGAF,EAAA5jG,KAAA,CAAAgN,OAAA,gBAAAqxF,WAAA,YAAAuF,EAAApb,iBACA,EAKA,GAAAqS,CAAA,CAnsCvD,GQpDb,SAASmJ,GACPC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAA0D,iBAA7BD,EAAwCA,EAAyB78F,MAAM,KAAO,GAE3G+8F,EAAA,GAAAnqF,OACD8pF,EAEAI,EAGAH,GAkB2C,YAdX,IAA1BC,IAE4B,iBAA1BA,GACTG,EAAa5lG,KAAK,IAAIylG,GAGsBlhG,GAAA,WAEAE,QAAAohB,KACA,0IAEA,KAGA+/E,EAAA99F,KAAA,IACA,CC5BlD,IAAM+9F,GACJ,mGAEIC,GAA0B,CAAC,iBAAkB,eAAgB,UAE/DC,IAAe,EAcNC,GAAA,WA2BJ,SAAAA,EAAAC,GAkDsB,IAAAC,OAAA,IAAAD,EAAJ,CAAC,EAACA,EAAAE,EAAAD,EAjDzBvI,cAAAA,OAAA,IAAAwI,E/EjDmC,I+EiDIA,EAAAC,EAAAF,EACvCtI,cAAAA,OAAA,IAAAwI,E/E/CmC,K+E+CIA,EAAAC,EAAAH,EACvCnB,kBAAAA,OAAA,IAAAsB,E/EzB+B,K+EyBQA,EAAAC,EAAAJ,EACvC7d,kBAAAA,OAAA,IAAAie,EAAoB99C,GAAmB89C,EAAAC,EAAAL,EACvCre,cAAAA,OAAA,IAAA0e,GAAoBA,EAAAC,EAAAN,EACpB1N,eAAAA,OAAA,IAAAgO,GAAqBA,EACrB9E,EAASwE,EAATxE,UAAS+E,EAAAP,EACTv+D,aAAAA,OAAA,IAAA8+D,EAAe,CAAE,EAAAA,EACjB/e,EAAiBwe,EAAjBxe,kBACA+O,EAAeyP,EAAfzP,gBAAeiQ,EAAAR,EACfn3C,YAAAA,OAAA,IAAA23C,GAAkBA,EAAAC,EAAAT,EAClB1sB,cAAAA,OAAA,IAAAmtB,GAAoBA,EAAAC,EAAAV,EACpBzN,cAAAA,OAAA,IAAAmO,GAAoBA,EAAAC,EAAAX,EAEpBb,wBAAAA,OAAA,IAAAwB,EAA0B,IAAGA,EAAAC,EAAAZ,EAC7Bf,cAAAA,OAAA,IAAA2B,EAAgB,IAAMA,EAAAC,EAAAb,EAEtB5H,iBAAAA,OAAA,IAAAyI,EAAmB,IAAKA,EAAAC,EAAAd,EACxB3H,yBAAAA,OAAA,IAAAyI,EAA2B,GAAEA,EAAAC,EAAAf,EAE7B9W,uBAAAA,OAAA,IAAA6X,EAAyB,GAAEA,EAAAC,EAAAhB,EAC3B7W,sBAAAA,OAAA,IAAA6X,EAAwB,GAAEA,EAAAC,EAAAjB,EAC1BzW,qBAAAA,OAAA,IAAA0X,GAA2BA,EAAAC,EAAAlB,EAC3BxW,sBAAAA,OAAA,IAAA0X,EAAwB,GAAEA,EAAAC,EAAAnB,EAC1B5V,uBAAAA,OAAA,IAAA+W,EAAyB,GAAEA,EAAAC,EAAApB,EAE3BqB,KAAAA,OAAA,IAAAD,EAAO,GAAEA,EAAAE,EAAAtB,EACTuB,eAAAA,OAAA,IAAAD,EAAiB,CAAC,QAAS,eAAcA,EAAAE,EAAAxB,EACzCyB,OAAAA,OAAA,IAAAD,EAAS,GAAEA,EAAAE,EAAA1B,EACX2B,MAAAA,OAAA,IAAAD,EAAQ,GAAEA,EAAAE,EAAA5B,EACV6B,QAAAA,QAAA,IAAAD,EAAU,GAAEA,EAAAE,GAAA9B,EACZ+B,OAAAA,QAAA,IAAAD,GAAS,GAAEA,GACXE,GAAMhC,EAANgC,OAEAle,GAAuBkc,EAAvBlc,wBACAgB,GAAmBkb,EAAnBlb,oBAGAx7B,GAAU02C,EAAV12C,WAEAC,GAAay2C,EAAbz2C,cAEArE,GAAgB86C,EAAhB96C,iBAEAuD,GAAau3C,EAAbv3C,cAEAC,GAAgBs3C,EAAhBt3C,iBAEAsY,GAAWg/B,EAAXh/B,YAGAnoE,KAAKyB,KAAOwlG,EAAOrjG,GAEnB,IAAMwlG,GDnEwC,SAAAC,GAiBA,IAfAT,EAAAS,EAAAT,OACAE,EAAAO,EAAAP,MACAE,EAAAK,EAAAL,QACAE,EAAAG,EAAAH,OAGAz4C,EAAA44C,EAAA54C,WAEAC,EAAA24C,EAAA34C,cAEAd,EAAAy5C,EAAAz5C,cAIAuY,EAAAkhC,EAAAlhC,YAOAlgE,EAAA,CAEA4nD,iBALA02C,GAnBA8C,EAAAb,KAmBA,sCAAA54C,EANAy5C,EAAAx5C,kBAYAE,mBALAw2C,GAAAqC,EAAA,2CAOAl4C,cAAA61C,GACAuC,EAAA,CACA,uCAAApsF,OAZA,oBAaA+zC,EACAC,GAEAC,gBAAA41C,GAAAyC,EAAA,6CACA5gC,eAAAm+B,GAAA2C,EAAA,+DAAA/gC,IAWA,OARA1X,aAAA93C,SACA1Q,EAAAwoD,WAAAA,GAGAb,aAAAj3C,SACA1Q,EAAA2nD,cAAAA,GAGA3nD,CACA,CCoBvBqhG,CAAkB,CACvCd,KAAAA,EACAI,OAAAA,EACAE,MAAAA,EACAE,QAAAA,GACAE,OAAAA,GACAz4C,WAAAA,GACAC,cAAAA,GACAd,cAAAA,GACAC,iBAAAA,GACAsY,YAAAA,KAmGK,GAhGPnoE,KAAKg+F,kBAAA53F,EAAA,CACHq0E,cAAAA,EACAzqB,YAAAA,EACA3D,iBAAgBjmD,EAAA,GAAQimD,IAAoB,CAAE,GAAGk9C,UAAU,IAC3Dt4C,WAAYk4C,GACZ38C,YAAa28C,GACb16C,gBAAiB,SAACxqD,EAAa3F,EAAe2K,GAAE,OC/H/C,SAAsBugG,GAOG,IAN9BvgG,EAAEugG,EAAFvgG,GACAhF,EAAGulG,EAAHvlG,IACAykG,EAAcc,EAAdd,eAEAU,EAAcI,EAAdJ,eACA9qG,EAAKkrG,EAALlrG,MAGA,OALWkrG,EAAXx5C,YAUIo5C,EAAer5C,oBAAsB9mD,EAAGiQ,QAAQkwF,EAAer5C,oBAC1DzxD,EAIPoqG,EAAe19F,SAAS/G,IAGf,UAARA,GAAkC,UAAfgF,EAAGG,SAAuB,CAAC,SAAU,UAAU4B,SAAS/B,EAAGU,aAAa,SAAW,IAEhGrL,EAAMsP,QAAQ,QAAS,KAGzBtP,EAjBEA,CAkBX,CDoGQmrG,CAAc,CACZf,eAAAA,EACA14C,YAAAA,EACAo5C,eAAAA,GACAnlG,IAAAA,EACA3F,MAAAA,EACA2K,GAAAA,GACA,GAEDmgG,GAAc,CAGjBl4C,eAAgB,MAChBH,kBAAkB,EAElBO,cAAc,EAGdof,cAAc,EACdvQ,aAAc,SAACjxD,GACb,IACEA,EAAIooF,WAAY,CAChB,OAAOzlE,GAEjB,CAEO,IAGH7xB,KAAK0pG,gBAAkB,CACrB9K,cAAAA,EACAC,cAAAA,EACAmH,kBAAmBnhG,KAAKgnC,IAAIm6D,E/E9HO,M+E+HnC1c,kBAAmBzkF,KAAKgnC,IAAIy9C,EAAmB7/B,IAC/Cq/B,cAAAA,EACAH,kBAAAA,EACA+O,gBAAAA,EACA+B,eAAAA,EACAkJ,UAAAA,EACAjJ,cAAAA,EACAjf,cAAAA,EACAzqB,YAAAA,EACAs2C,wBAAAA,EACAF,cAAAA,EACA7G,iBAAAA,EACAC,yBAAAA,EACAnP,uBAAAA,EACAC,sBAAAA,EACAI,qBAAAA,EACAC,sBAAuBgZ,GAAyBhZ,GAChDY,uBAAwBoY,GAAyBpY,GACjDtG,wBAAAA,GACAgB,oBAAAA,GAEArjD,aAAAA,GAG+B,iBAAtB+/C,IAETjjF,QAAQohB,KAAK,gQAIuB6hE,EAAiB,OAGrD3oF,KAAK0pG,gBAAgB/gB,kBAAoBA,GAGZ,iBAApB+O,IAEThyF,QAAQohB,KAAK,8PAIuB4wE,EAAe,OAGnD13F,KAAK0pG,gBAAgBhS,gBAAkBA,GAGrC13F,KAAK0pG,gBAAgBhQ,gBAGvB15F,KAAKg+F,kBAAkBttC,cAAiB1wD,KAAKg+F,kBAAkBttC,cAE1D,KAAAstC,kBAAAttC,cAAA,IAAAo2C,GADDA,IAIC,KAAA8C,gBAAA1gD,KACA,UAAArqD,MAAA,8DAGA,KAAA+qG,gBAAA,CACA,CAlMX3C,EAGS4C,aAAA,gBAAOjmG,GAAa,QAAQ,MAAAkmG,EAAA7C,EAAAxpG,UAgV1B,OArIAqsG,EAGA59E,UAAA,eAAA69E,EAAA,KACA7gD,OAIA,KAAA8gD,SAUA96E,YAAA,kBAAA66E,EAAAE,aAAA,IACA,EAEAH,EAOAvzD,MAAA,WACA,KAAAgqC,SAIA,KAAAA,QAAAhqC,OACA,EAEAuzD,EAIA7J,eAAA,WACA,KAAA1f,SAIA,KAAAA,QAAA0f,gBACA,EAEA6J,EAIAvnG,KAAA,WACA,YAAAg+E,QAIAvgF,KAAAugF,QAAAh+E,KAAA,CAAAq+F,WAAA,YAAA5gG,KAAAugF,QAAAwK,gBAHAhpF,QAAArB,SAIA,EAEAopG,EAOA/lD,MAAA,SAAA97C,GACA,YAAAs4E,SAAA,KAAAA,QAAAp6E,YAIAnG,KAAAugF,QAAA2L,0BAAAjkF,GAHAlG,QAAArB,SAIA,EAEAopG,EAGA9pD,YAAA,WACA,QAAAugC,SAAA,KAAAA,QAAAp6E,YAIA,OAAAnG,KAAAugF,QAAA4W,cACA,EAEA2S,EAGAG,YAAA,WACA,KAAA1pB,UAQA,KAAA2pB,wCAEA,KAAA3pB,QAAAof,qBACA,EAEAmK,EACAE,OAAA,WAEA,IAAAG,EA+BA,SAAAC,GACA,IAAA1uF,EAAAyE,KACAkqF,EAAA3uF,GAAAA,EAAA+E,aAEA0pF,EAAA/jG,EAAA,CAAAuiF,kBAAA,EAAA+O,gBAAA,GAAA/qF,EAAAy9F,IAEA,OAAAC,GASA,MAAAD,EAAAzhB,mBACA,MAAAyhB,EAAA1S,iBACA,MAAA2S,EAAAC,0BACA,MAAAD,EAAAE,0BAEA/kG,GAAA,WAEAE,QAAAohB,KACA,wGAEA,IAGA,iBAAAujF,EAAAC,2BACAH,EAAAxhB,kBAAA0hB,EAAAC,0BAGA,iBAAAD,EAAAE,2BACAJ,EAAAzS,gBAAA2S,EAAAE,0BAGAJ,IA7BA3kG,GAAA,WAEAE,QAAAohB,KAAA,+BACA,IACAqjF,EA0BA,CApEAK,CAAA,KAAAd,iBAEA,KAAAnpB,QAAA,IAAA6c,GAAA,CACAn1F,QAAAkiG,EACA5M,iBAAA,KAAAS,mBAEA,EAEA8L,EACAI,sCAAA,WAIA,IACA,IACAO,EADAtqF,KACA4/B,qBAAA,gBAGA,IAAA0qD,EACA,OAGA,KAAAlqB,QAAA,QAAAkqB,EAAAhqF,YACA,OAAAljB,GACA,CAGA,EAAAwhC,GAAAkoE,EAAA,EAAAhjG,IAAA,iBAAAC,IA9IA,WACA,OAAA8iG,EACA,EAEA1iG,IACA,SAAAhG,GACA0oG,GAAA1oG,CACA,KA7ME,GA+XF,SAAAqrG,GAAAprE,GACA,SAAA7hB,OAAAqqF,GAAAxoE,EAAA30B,KAAA,SAAAwuB,GAAA,OAAAA,EAAA7uB,aAAA,IACA,CA5CA09F,GAAA4C,6BEjVEa,GAAA,SAAAC,GAMJ,SAAAD,EAAYziG,GAA+B,IAAAqI,EAYhD,OC/CG,SAA0BrI,EAAkBxG,EAAcmpG,EAAgBz/F,QAAhB,IAAAy/F,IAAAA,EAAQ,CAACnpG,SAAO,IAAA0J,IAAAA,EAAS,OACxF,IAAMmW,EAAWrZ,EAAQ47B,WAAa,CAAC,EAElCviB,EAAS7E,MACZ6E,EAAS7E,IAAM,CACbhb,KAAM,qBAAqBA,EACKyjD,SAAA0lD,EAAAhhG,KAAA,SAAAnI,GAAA,OACAA,KAAA0J,EAAA,YAAA1J,EACAomB,QAAAX,GACA,IACAW,QAAAX,KAIAjf,EAAA47B,UAAAviB,CACA,CDsBlCupF,CAAiB5iG,EAAS,UAAW,CAAC,WADpBH,GAAOgjG,oBAAqBxnG,EAAAA,GAAAA,MAG9CgN,EAAAq6F,EAAAhrG,KAAA,KAAMsI,IAAQ,KAEVA,EAAQ09C,mBAAqB79C,GAAOwO,UACtCxO,GAAOwO,SAAS4f,iBAAiB,oBAAoB,WACX,WAApCpuB,GAAOwO,SAAS40B,iBAClB56B,EAAKy6F,gBAEf,IACIz6F,CACJ,CAEAquB,GAAA+rE,EAAAC,GAAA,IAAAx6F,EAAAu6F,EAAAjtG,UAuEE,OAvEF0S,EAGSqzC,mBAAA,SAAmBr1C,EAAoByD,GAC5C,O7JuFG,SACLgL,EACAzO,EACAyD,EACAihB,GAEA,IACM3kB,EAAQ0kB,GAAsBhW,EAAazO,EADrByD,GAAQA,EAAKmV,yBAAuBpjB,EACgBkvB,GAMhF,OALApkB,EAAsBP,GACtBA,EAAMrI,MAAQ,QACV+L,GAAQA,EAAKtD,WACfJ,EAAMI,SAAWsD,EAAKtD,UAEjBc,EAAoBlB,EAC7B,C6JrGWs1C,CAAmBxjD,KAAKuvB,SAAS3S,YAAazO,EAAWyD,EAAM5R,KAAKuvB,SAASsD,iBACxF,EAEA1iB,EAGSyzC,iBAAA,SACL73C,EAEAlG,EACA+L,GAEA,YAHK,IAAL/L,IAAAA,EAAkC,Q7JkG/B,SACL+W,EACA7Q,EAEAlG,EACA+L,EACAihB,QAFK,IAALhtB,IAAAA,EAAkC,QAIlC,IACMqI,EAAQ8kB,GAAgBpW,EAAa7Q,EADf6F,GAAQA,EAAKmV,yBAAuBpjB,EACQkvB,GAKxE,OAJA3kB,EAAMrI,MAAQA,EACV+L,GAAQA,EAAKtD,WACfJ,EAAMI,SAAWsD,EAAKtD,UAEjBc,EAAoBlB,EAC7B,C6J9GW01C,CAAiB5jD,KAAKuvB,SAAS3S,YAAa7Q,EAASlG,EAAO+L,EAAM5R,KAAKuvB,SAASsD,iBAC3F,EAEA1iB,EAGS66F,oBAAA,SAAoBl4D,GACzB,GAAK9yC,KAAKwkD,aAAV,CAKA,IAAM/T,EExFH,SACLqC,EAAQp5B,GAUO,IARb4H,EAAQ5H,EAAR4H,SACAgyB,EAAM55B,EAAN45B,OACA9D,EAAG91B,EAAH81B,IAOIjR,EAAOn4B,EAAA,CACXkI,SAAUwkC,EAASxkC,SACnBilC,SAAS,IAAIthC,MAAOkY,eAChB7I,GACFA,EAAS7E,KAAO,CACdA,IAAK,CACHhb,KAAM6f,EAAS7E,IAAIhb,KACnBomB,QAASvG,EAAS7E,IAAIoL,YAGtByrB,KAAY9D,GAAO,CAAEA,IAAKD,GAAYC,KAExCniC,EAKR,SAAwCylC,GAItC,MAAO,CAHsC,CAC3CrzC,KAAM,eAEiBqzC,EAC3B,CAVem4D,CAA+Bn4D,GAE5C,OAAOxC,GAAe/R,EAAS,CAAClxB,GAClC,CF6DqB69F,CAA2Bp4D,EAAU,CACpDxxB,SAAUthB,KAAK8jD,iBACftU,IAAKxvC,KAAK2gB,SACV2yB,OAAQtzC,KAAKygB,aAAa6yB,SAK5BtzC,KAAKulD,cAAc9U,EAVvB,CAWA,EAEAtgC,EAGYo2C,cAAA,SAAcr4C,EAAc0D,EAAiB6J,GAErD,OADAvN,EAAMgtF,SAAWhtF,EAAMgtF,UAAY,aACnCyP,EAAAltG,UAAa8oD,cAAa5mD,KAAC,KAAAuO,EAAO0D,EAAM6J,EAC5C,EAEAtL,EAGU46F,eAAA,WACN,IAAMljD,EAAW7nD,KAAK4nD,iBAEtB,GAAwB,IAApBC,EAASxmD,QAMRrB,KAAKojD,KAAV,CAOA,IGzHF+nD,EACA37D,EHwHQiB,GGzHR06D,EHyH8CtjD,EG9GvCvX,IAVPd,EHwHwDxvC,KAAKuvB,SAAS+jB,QAAU/D,GAAYvvC,KAAKojD,OG9G/C,CAAE5T,IAAAA,GAAQ,CAAC,EAAG,CAPrB,CACzC,CAAE/vC,KAAM,iBACR,CACEmU,UAAwB5B,KACxBm5F,iBAAAA,OHqHFnrG,KAAKulD,cAAc9U,EARvB,CASA,EAAEi6D,CAAA,CA5FW,CAAsB5nD,IIwEnC,SAASsoD,GAAwB/9F,EAA2B5N,GAC1D,GAAa,UAATA,GAA6B,gBAATA,EAIxB,OAAO+I,MAAMC,QAAQ4E,GAASA,EAAmB,QAAK1J,CACxD,CCtHA,IAAI0nG,QAAyC1nG,ECMtC,SAAS2nG,GACdrjG,EACAsjG,QAAW,IAAXA,IAAAA,EDkCK,WACL,GAAIF,GACF,OAAOA,GAMT,GAAI5yE,GAAc3wB,GAAOmxB,OACvB,OAAQoyE,GAAkBvjG,GAAOmxB,MAAM3yB,KAAKwB,IAG9C,IAAMwO,EAAWxO,GAAOwO,SACpBk1F,EAAY1jG,GAAOmxB,MAEvB,GAAI3iB,GAA8C,mBAA3BA,EAAS6iB,cAC9B,IACE,IAAMC,EAAU9iB,EAAS6iB,cAAc,UACvCC,EAAQC,QAAS,EACjB/iB,EAASgjB,KAAKC,YAAYH,GAC1B,IAAMI,EAAgBJ,EAAQI,cAC1BA,GAAiBA,EAAcP,QACjCuyE,EAAYhyE,EAAcP,OAE5B3iB,EAASgjB,KAAKG,YAAYL,EAChC,CAAM,MAAO77B,GAEb,CAGE,OAAQ8tG,GAAkBG,EAAUllG,KAAKwB,GAE3C,CClE2B2jG,IAEzB,IAAIC,EAAkB,EAClBC,EAAe,EA+CnB,OF3BK,SACL1jG,EACA2jG,EACA75D,QAAM,IAANA,IAAAA,EGxBK,SAA8B3U,GACnC,IAAM2U,EAAgC,GAYtC,SAASw+B,EAAOs7B,GACd,OAAO95D,EAAO/7B,OAAO+7B,EAAO9lB,QAAQ4/E,GAAO,GAAG,EAClD,CAuEE,MAAO,CACLC,EAAG/5D,EACHh8B,IA7DF,SAAag2F,GACX,UAxBiBpoG,IAAVy5B,GAAuB2U,EAAO1wC,OAAS+7B,GAyB5C,OAAO9tB,EAAoB,IAAIsyC,GAAY,yDAI7C,IAAMiqD,EAAOE,IAcb,OAb8B,IAA1Bh6D,EAAO9lB,QAAQ4/E,IACjB95D,EAAO9wC,KAAK4qG,GAETA,EACFjrG,MAAK,kBAAM2vE,EAAOs7B,EAAK,IAIvBjrG,KAAK,MAAM,kBACV2vE,EAAOs7B,GAAMjrG,KAAK,MAAM,WAChC,GACU,IAECirG,CACX,EAyCIG,MA9BF,SAAehoD,GACb,OAAO,IAAI30C,GAAqB,SAAC3O,EAAS8O,GACxC,IAAIyvF,EAAUltD,EAAO1wC,OAErB,IAAK49F,EACH,OAAOv+F,GAAQ,GAIjB,IAAMurG,EAAqB/8E,YAAW,WAChC80B,GAAWA,EAAU,GACvBtjD,GAAQ,EAElB,GAASsjD,GAGHjS,EAAOxxC,SAAQ,SAAA8M,GACR+B,EAAoB/B,GAAMzM,MAAK,aAC3Bq+F,IACLloE,aAAak1E,GACbvrG,GAAQ,GAEpB,GAAW8O,EACX,GACA,GACA,EAOA,CHnE+D08F,CAC3DjkG,EAAQkkG,YAZiC,KAe3C,IAAIvQ,EAAyB,CAAC,EAG9B,SAASx/C,EAAK3L,GACZ,IAAM27D,EAAwC,GAc9C,GAXA57D,GAAoBC,GAAU,SAACpjC,EAAM5N,GACnC,IAAMonD,EAAe7T,GAA+BvzC,GACpD,GAAIuoD,GAAc4zC,EAAY/0C,GAAe,CAC3C,IAAM34C,EAA2Bk9F,GAAwB/9F,EAAM5N,GAC/DwI,EAAQi9B,mBAAmB,oBAAqB2hB,EAAc34C,EACtE,MACQk+F,EAAsBnrG,KAAKoM,EAEnC,IAGyC,IAAjC++F,EAAsB/qG,OACxB,OAAO+N,IAIT,IAAMi9F,EAA6B/7D,GAAeG,EAAS,GAAI27D,GAGzDE,EAAqB,SAAC/8F,GAC1BihC,GAAoB67D,GAAkB,SAACh/F,EAAM5N,GAC3C,IAAMyO,EAA2Bk9F,GAAwB/9F,EAAM5N,GAC/DwI,EAAQi9B,mBAAmB31B,EAAQyjC,GAA+BvzC,GAAOyO,EACjF,GACA,EAmBI,OAAO6jC,EAAOh8B,KAjBM,WAAF,OAChB61F,EAAY,CAAEpzE,KAAMuY,GAAkBs7D,EAAkBpkG,EAAQ2oC,eAAgBhwC,MAC9E,SAAAu5B,GAOE,YAL4Bx2B,IAAxBw2B,EAASkuB,aAA6BluB,EAASkuB,WAAa,KAAOluB,EAASkuB,YAIhFuzC,EAAaxzC,GAAiBwzC,EAAYzhE,GACnCA,CACjB,IACQ,SAAAtI,GAEE,MADAy6E,EAAmB,iBACbz6E,CAChB,GACO,IAE4BjxB,MAC7B,SAAA2P,GAAA,OAAUA,CAAM,IAChB,SAAAshB,GACE,GAAIA,aAAiB+vB,GAGnB,OADA0qD,EAAmB,kBACZl9F,IAEP,MAAMyiB,CAEhB,GAEA,CAME,OAFAuqB,EAAKuvC,2BAA4B,EAE1B,CACLvvC,KAAAA,EACA2H,MArEY,SAACC,GAAO,OAAoCjS,EAAOi6D,MAAMhoD,EAAQ,EAuEjF,CEpDSuoD,CAAgBtkG,GA7CvB,SAAqBoU,GACnB,IAAMmwF,EAAcnwF,EAAQmc,KAAKn3B,OACjCqqG,GAAmBc,EACnBb,IAEA,IAAMc,EAAcrmG,EAAA,CAClBoyB,KAAMnc,EAAQmc,KACdz5B,OAAQ,OACR2tG,eAAgB,SAChBnuE,QAASt2B,EAAQs2B,QAYjBouE,UAAWjB,GAAmB,KAAUC,EAAe,IACpD1jG,EAAQ2kG,cAGb,IACE,OAAOrB,EAAYtjG,EAAQqU,IAAKmwF,GAAgB7rG,MAAK,SAAAu5B,GAGnD,OAFAuxE,GAAmBc,EACnBb,IACO,CACLtjD,WAAYluB,EAAS5lB,OACrBgqB,QAAS,CACP,uBAAwBpE,EAASoE,QAAQr6B,IAAI,wBAC7C,cAAei2B,EAASoE,QAAQr6B,IAAI,gBAGhD,GACA,CAAM,MAAO3G,GAIP,ODwBJ8tG,QAAkB1nG,EC1Bd+nG,GAAmBc,EACnBb,IACOr8F,EAAoB/R,EACjC,CACA,GAGA,CEnCA,IAAMsvG,GAAmB,IAQzB,SAASC,GAAYvvF,EAAkB3R,EAAcupB,EAAiBF,GACpE,IAAMvX,EAAoB,CACxBH,SAAAA,EACA4S,SAAUvkB,EACV2pB,QAAQ,GAWV,YARe5xB,IAAXwxB,IACFzX,EAAMyX,OAASA,QAGHxxB,IAAVsxB,IACFvX,EAAMuX,MAAQA,GAGTvX,CACT,CAGA,IAAMqvF,GACJ,6IACIC,GAAkB,gCAoClBC,GACJ,uIACIC,GAAiB,gDA+BjBC,GAAa,uFAiCNC,G3L7IN,WAAuE,QAAAriF,EAAAxkB,UAAAlF,OAAzCgsG,EAAO,IAAA7kG,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPoiF,EAAOpiF,GAAA1kB,UAAA0kB,GAC1C,IAAMqiF,EAAgBD,EAAQ15E,MAAK,SAAC31B,EAAGmhB,GAAC,OAAKnhB,EAAE,GAAKmhB,EAAE,EAAE,IAAEvV,KAAI,SAAA3J,GAAA,OAAKA,EAAE,EAAE,IAEvE,OAAO,SAAC+L,EAAeuhG,QAAS,IAATA,IAAAA,EAAoB,GAIzC,IAHA,IAAM9vF,EAAuB,GACvB+vF,EAAQxhG,EAAMlC,MAAM,MAEjBhM,EAAIyvG,EAAWzvG,EAAI0vG,EAAMnsG,OAAQvD,IAAK,CAC7C,IAAM6zB,EAAO67E,EAAM1vG,GAKnB,KAAI6zB,EAAKtwB,OAAS,MAAlB,CAMA,IAAMosG,EAAcj5F,GAAqBzJ,KAAK4mB,GAAQA,EAAK/jB,QAAQ4G,GAAsB,MAAQmd,EAIjG,IAAI87E,EAAYt0F,MAAM,cAAtB,CAIA,IAAK,IAA6BwS,EAAlCC,EAAAC,GAAqByhF,KAAa3hF,EAAAC,KAAA9sB,MAAE,KAC5B4e,GAAQwf,EADEvR,EAAArtB,OACKmvG,GAErB,GAAI/vF,EAAO,CACTD,EAAOxc,KAAKyc,GACZ,KACV,CACA,CAEM,GAAID,EAAOpc,QAhDc,GAiDvB,KAZR,CAVA,CAwBA,CAEI,OAuBG,SAAqC2K,GAC1C,IAAKA,EAAM3K,OACT,MAAO,GAGT,IAAMqsG,EAAallG,MAAM2yB,KAAKnvB,GA2B9B,MAxBI,gBAAgBjB,KAAK2iG,EAAWA,EAAWrsG,OAAS,GAAE,UAAa,KACrEqsG,EAAWxrG,MAIbwrG,EAAW5kG,UAGP2L,GAAmB1J,KAAK2iG,EAAWA,EAAWrsG,OAAS,GAAE,UAAa,MACxEqsG,EAAWxrG,MAUPuS,GAAmB1J,KAAK2iG,EAAWA,EAAWrsG,OAAS,GAAE,UAAa,KACxEqsG,EAAWxrG,OAIRwrG,EAAWprG,MAAM,EA5GK,IA4GsBsH,KAAI,SAAA8T,GAAA,OAAAtX,EAAA,GAClDsX,EAAK,CACRH,SAAUG,EAAMH,UAAYmwF,EAAWA,EAAWrsG,OAAS,GAAGkc,SAC9D4S,SAAUzS,EAAK,UAAa,KAAG,GAEnC,CA5DWiwF,CAA4BlwF,EACvC,CACA,E2LkGmDjX,WAAC,EAFb,CArEe,CAxD9B,GA6BuB,SAAAmrB,GAC7C,IAAMsf,EAAQ87D,GAAY/8D,KAAKre,GAE/B,GAAIsf,EAAO,CAGT,GAFeA,EAAM,IAAmC,IAA7BA,EAAM,GAAGhlB,QAAQ,QAEhC,CACV,IAAM2hF,EAAWZ,GAAgBh9D,KAAKiB,EAAM,IAExC28D,IAEF38D,EAAM,GAAK28D,EAAS,GACpB38D,EAAM,GAAK28D,EAAS,GACpB38D,EAAM,GAAK28D,EAAS,GAE5B,CAII,IAAAC,EAAyBC,GAA8B78D,EAAM,IAAM47D,GAAkB57D,EAAM,IAApFrlC,EAAIiiG,EAAA,GAEX,OAAOf,GAFce,EAAA,GAEQjiG,EAAMqlC,EAAM,IAAMA,EAAM,QAAKttC,EAAWstC,EAAM,IAAMA,EAAM,QAAKttC,EAChG,CAGA,GAsCqD,CA1F9B,GA+DU,SAAAguB,GAC/B,IAAMsf,EAAQg8D,GAAWj9D,KAAKre,GAE9B,GAAIsf,EAAO,CAET,GADeA,EAAM,IAAMA,EAAM,GAAGhlB,QAAQ,YAAc,EAC9C,CACV,IAAM2hF,EAAWV,GAAel9D,KAAKiB,EAAM,IAEvC28D,IAEF38D,EAAM,GAAKA,EAAM,IAAM,OACvBA,EAAM,GAAK28D,EAAS,GACpB38D,EAAM,GAAK28D,EAAS,GACpB38D,EAAM,GAAK,GAEnB,CAEI,IAAI1zB,EAAW0zB,EAAM,GACjBrlC,EAAOqlC,EAAM,IAAM47D,GAAgBkB,EACpBD,GAA8BliG,EAAM2R,GAEvD,OAFC3R,EAAImiG,EAAA,GAEEjB,GAFAvvF,EAAQwwF,EAAA,GAEcniG,EAAMqlC,EAAM,IAAMA,EAAM,QAAKttC,EAAWstC,EAAM,IAAMA,EAAM,QAAKttC,EAChG,CAGA,GAcqD,CAvG9B,GA+FU,SAAAguB,GAC/B,IAAMsf,EAAQk8D,GAAWn9D,KAAKre,GAE9B,OAAOsf,EACH67D,GAAY77D,EAAM,GAAIA,EAAM,IAAM47D,IAAmB57D,EAAM,GAAIA,EAAM,IAAMA,EAAM,QAAKttC,QACtFA,CACN,KA+CMmqG,GAAgC,SAACliG,EAAc2R,GACnD,IAAMywF,GAA0D,IAAtCpiG,EAAKqgB,QAAQ,oBACjCgiF,GAAiE,IAA1CriG,EAAKqgB,QAAQ,wBAE1C,OAAO+hF,GAAqBC,EACxB,EACyB,IAAvBriG,EAAKqgB,QAAQ,KAAcrgB,EAAK9B,MAAM,KAAK,GAAK+iG,GAChDmB,EAAA,oBAAwCzwF,EAAQ,wBAACA,GAEA,CAAA3R,EAAA2R,EACA,EC1LnDoP,GAAmB,SA6BZuhF,GA3Be,WAC1B,IAAIC,EAEJ,MAAO,CACL1sG,KAAMkrB,GAENT,UAAS,WAAI,EACbI,aAAY,SAAC8hF,GAGX,GAAIA,EAAa3uG,KACf,OAAO2uG,EAIT,IACE,GAsBR,SAA0BA,EAAqBD,GAC7C,QAAKA,MAeP,SAA6BC,EAAqBD,GAChD,IAAME,EAAiBD,EAAariG,QAC9BuiG,EAAkBH,EAAcpiG,QAGtC,SAAKsiG,IAAmBC,OAKnBD,IAAmBC,IAAsBD,GAAkBC,KAI5DD,IAAmBC,MAIlBC,GAAmBH,EAAcD,MAIjCK,GAAkBJ,EAAcD,KAKvC,CAtCMM,CAAoBL,EAAcD,MAwCxC,SAA+BC,EAAqBD,GAClD,IAAMO,EAAoBC,GAAuBR,GAC3CS,EAAmBD,GAAuBP,GAEhD,SAAKM,IAAsBE,KAIvBF,EAAkBjvG,OAASmvG,EAAiBnvG,MAAQivG,EAAkBpwG,QAAUswG,EAAiBtwG,UAIhGiwG,GAAmBH,EAAcD,MAIjCK,GAAkBJ,EAAcD,IAKvC,CAzDMU,CAAsBT,EAAcD,GAK1C,CApCYjgF,CAAiBkgF,EAAcD,GAEjC,OAAO,IAEjB,CAAQ,MAAOnlG,GAAM,CAEf,OAAQmlG,EAAgBC,CAC9B,EAEA,EAiFA,SAASI,GAAkBJ,EAAqBD,GAC9C,IAAIW,EAAgBC,GAAoBX,GACpCY,EAAiBD,GAAoBZ,GAGzC,IAAKW,IAAkBE,EACrB,OAAO,EAIT,GAAKF,IAAkBE,IAAqBF,GAAiBE,EAC3D,OAAO,EAOT,GAAIA,EAAe3tG,SAAWytG,EAAcztG,OAC1C,OAAO,EAIT,IAAK,IAAIvD,EAAI,EAAGA,EAAIkxG,EAAe3tG,OAAQvD,IAAK,CAC9C,IAAMmxG,EAASD,EAAelxG,GACxBoxG,EAASJ,EAAchxG,GAE7B,GACEmxG,EAAO1xF,WAAa2xF,EAAO3xF,UAC3B0xF,EAAO95E,SAAW+5E,EAAO/5E,QACzB85E,EAAOh6E,QAAUi6E,EAAOj6E,OACxBg6E,EAAM,WAAcC,EAAM,SAE1B,OAAO,CAEb,CAEE,OAAO,CACT,CAEA,SAASX,GAAmBH,EAAqBD,GAC/C,IAAIgB,EAAqBf,EAAaxsF,YAClCwtF,EAAsBjB,EAAcvsF,YAGxC,IAAKutF,IAAuBC,EAC1B,OAAO,EAIT,GAAKD,IAAuBC,IAA0BD,GAAsBC,EAC1E,OAAO,EAOT,IACE,QAAUD,EAAmBpmG,KAAK,MAAQqmG,EAAoBrmG,KAAK,IACvE,CAAI,MAAOC,GACP,OAAO,CACX,CACA,CAEA,SAAS2lG,GAAuBzgG,GAC9B,OAAOA,EAAMC,WAAaD,EAAMC,UAAUhM,QAAU+L,EAAMC,UAAUhM,OAAO,EAC7E,CAEA,SAAS4sG,GAAoB7gG,GAC3B,IAAMC,EAAYD,EAAMC,UAExB,GAAIA,EACF,IAEE,OAAOA,EAAUhM,OAAO,GAAGqb,WAAWC,MAC5C,CAAM,MAAOzU,GACP,MACN,CAGA,CAzJsBujB,GAA4BI,GAAkBuhF,ICPlEthF,KACA2B,KACAe,KACAyM,KACA9H,KACAkK,KACA+vE,KACA7vE,KAmIK,IAAMgxE,GAA6C,SAExDpnG,EAEAijB,GAGA,QALO,IAAPjjB,IAAAA,EAA+B,CAAC,QAE7B,IAAHijB,IAAAA,EAAWtL,MAGN9X,GAAOwO,SAAZ,CAMA,IAAAg5F,EAA0BpkF,EAAInD,cAAtBrM,EAAM4zF,EAAN5zF,OAAQD,EAAA6zF,EAAA7zF,MACV+zB,EAAMvnC,EAAQunC,KAAQ9zB,GAAUA,EAAOiF,SAC7C,GAAK6uB,EAAL,CAKI/zB,IACFxT,EAAQqL,KAAAlN,EAAA,GACHqV,EAAMqF,UACN7Y,EAAQqL,OAIVrL,EAAQoG,UAEXpG,EAAQoG,QAAU6c,EAAIzC,eAGxB,IAAM4vC,EAASvwD,GAAOwO,SAAS6iB,cAAc,UAC7Ck/B,EAAOv2D,OAAQ,EACfu2D,EAAO9C,YAAc,YACrB8C,EAAO3B,IjG7J0B,SACA64C,EACAC,GAMA,IAAAhgE,EAAAO,GAAAw/D,GACA,IAAA//D,EACA,SAGA,IAAAigE,EAAA1tD,GAAAvS,GAAA,oBAEAkgE,EAAA,OAAAngE,GAAAC,GACA,QAAAvrC,KAAAurG,EACA,WAAAvrG,GAIA,YAAAA,EAIA,YAAAA,EAAA,CACA,IAAAqP,EAAAk8F,EAAAl8F,KACA,IAAAA,EACA,SAEAA,EAAA7R,OACAiuG,GAAA,SAAA53F,mBAAAxE,EAAA7R,OAEA6R,EAAAI,QACAg8F,GAAA,UAAA53F,mBAAAxE,EAAAI,OAEA,MACAg8F,GAAA,IAAA53F,mBAAA7T,GAAA,IAAA6T,mBAAA03F,EAAAvrG,IAIA,OAAAwrG,EAAA,IAAAC,CACA,CiGmHpBC,CAAwBngE,EAAKvnC,GAEtCA,EAAQ2nG,SACVv3C,EAAOw3C,OAAS5nG,EAAQ2nG,QAG1B,IAAQE,EAAY7nG,EAAZ6nG,QACR,GAAIA,EAAS,CACX,IAAMC,EAAmC,SAAC7hG,GACxC,GAAmB,mCAAfA,EAAMa,KACR,IACE+gG,GACV,SACUhoG,GAAOqjC,oBAAoB,UAAW4kE,EAChD,CAEA,EACIjoG,GAAOouB,iBAAiB,UAAW65E,EACvC,CAEE,IAAMC,EAAiBloG,GAAOwO,SAASgjB,MAAQxxB,GAAOwO,SAASkiB,KAC3Dw3E,GACFA,EAAez2E,YAAY8+B,EAvC/B,CARA,CAmDA,ExMpOM5xD,GAAiBjJ,OAAOC,UAAUqF,SA4GjC,SAASsE,GAAcT,GAC5B,OAnFF,SAAmBA,EAAcG,GAC/B,OAAOL,GAAe9G,KAAKgH,KAAS,WAAWG,EAAS,GAC1D,CAiFSD,CAAUF,EAAK,SACxB,CAuCO,SAASY,GAAWZ,GAEzB,OAAOa,QAAQb,GAAOA,EAAI/F,MAA4B,mBAAb+F,EAAI/F,KAC/C,CHpEA,SAASgE,GAAYL,GACnB,OAAOA,GAAOA,EAAIM,MAAQA,KAAON,OAAMZ,CACzC,CAGO,IAAMmB,GACW,iBAAd3B,YAA0ByB,GAAYzB,aAE5B,iBAAVgB,QAAsBS,GAAYT,SAC1B,iBAARY,MAAoBH,GAAYG,OACtB,iBAAVC,EAAAA,GAAsBJ,GAAYI,EAAAA,IACzC,WACC,OAAOhF,IACX,CAFG,IAGD,CAAC,EAoBI,SAASkF,GAAsBzD,EAA0C0D,EAAkBZ,GAChG,IAAMa,EAAOb,GAAOO,GACdO,EAAcD,EAAIC,WAAaD,EAAIC,YAAc,CAAC,EAExD,OADkBA,EAAW5D,KAAU4D,EAAW5D,GAAQ0D,IAE5D,CO1GO,SAASmI,KACd,IAAMlI,EAAMN,GACNyI,EAASnI,EAAImI,QAAUnI,EAAIoI,SAE7BC,EAAgB,WAAF,OAAgC,GAAhB5I,KAAK6I,QAAa,EACpD,IACE,GAAIH,GAAUA,EAAOI,WACnB,OAAOJ,EAAOI,aAAaC,QAAQ,KAAM,IAEvCL,GAAUA,EAAOM,kBACnBJ,EAAgB,WAKd,IAAMK,EAAa,IAAIC,WAAW,GAElC,OADAR,EAAOM,gBAAgBC,GAChBA,EAAW,EAC1B,EAEA,CAAI,MAAOE,GAEX,CAKE,OAAS,CAAC,KAA6B,IAAM,IAAM,IAAM,MAAMJ,QAAQ,UAAU,SAAAxP,GAAE,OAE/EA,GAA8C,GAAlBqP,MAA2BrP,EAA0B,GAAK0E,SAAS,GAAG,GAExG,CI9BO,SAASkP,KACd,OAAOC,KAAKC,MAvBW,GAwBzB,CA0Ca,IAAAC,GAlCb,WACE,IAAQC,EAAgBtN,GAAhBsN,YACR,IAAKA,IAAgBA,EAAYF,IAC/B,OAAOF,GAKT,IAAMK,EAA2BJ,KAAKC,MAAQE,EAAYF,MACpDI,EAAuC3O,MAA1ByO,EAAYE,WAA0BD,EAA2BD,EAAYE,WAWhG,OAAO,WACL,OAAQA,EAAaF,EAAYF,OArDZ,GAsDzB,CACA,CAWkCK,GV5DrBjN,IU+EgC,WAK3C,IAAQ8M,EAAgBtN,GAAhBsN,YACR,GAAKA,GAAgBA,EAAYF,IAAjC,CAKA,IAAMO,EAAY,KACZC,EAAiBN,EAAYF,MAC7BS,EAAUV,KAAKC,MAGfU,EAAkBR,EAAYE,WAChCzN,KAAKgO,IAAIT,EAAYE,WAAaI,EAAiBC,GACnDF,EACEK,EAAuBF,EAAkBH,EAQzCM,EAAkBX,EAAYY,QAAUZ,EAAYY,OAAOD,gBAG3DE,EAFgD,iBAApBF,EAEgBlO,KAAKgO,IAAIE,EAAkBL,EAAiBC,GAAWF,GAGrGK,GAF8BG,EAAuBR,KAInDG,GAAmBK,GAEdb,EAAYE,WA5BzB,CAsCA,CA/C6C,GV/EU,CACrD,QACA,OACA,OACA,QACA,MACA,SACA,UAOW/M,GAGT,CAAC,EA0EiC,IQ5FpB4J,GR4FoBnJ,GAhCtC,WACE,IAAID,GAAU,EACRC,EAA0B,CAC9BC,OAAQ,WACNF,GAAU,CAChB,EACIG,QAAS,WACPH,GAAU,CAChB,EACII,UAAW,WAAF,OAAQJ,CAAO,GAoBU,OALAT,GAAA/E,SAAA,SAAAkB,GACAuE,EAAAvE,GAAA,YACA,IAGAuE,CACA,CAEAiqG,GWnGzB/8F,GAAsB,cHOjB,SAAA/D,GAELA,EAAAA,EAAA,QAAD,GAAC,UAECA,EAAAA,EAAA,SAAD,GAAC,WAEAA,EAAAA,EAAA,SAAD,GAAC,UACb,CAPiB,CAOlBA,KAAAA,GAAA,KA8BA,IAIME,GAAW,WAKR,SAAAA,EACLI,GACAJ,EAAA5R,UAAAiS,OAAA/P,KAAA,MAAA0P,EAAA5R,UAAAkS,QAAAhQ,KAAA,MAAA0P,EAAA5R,UAAAmS,QAAAjQ,KAAA,MAAA0P,EAAA5R,UAAAoS,QAAAlQ,KAAA,MACAK,KAAK8P,OAASX,GAAOY,QACrB/P,KAAKgQ,UAAY,GAEjB,IACEP,EAASzP,KAAKiQ,SAAUjQ,KAAKkQ,QACnC,CAAM,MAAO3S,GACPyC,KAAKkQ,QAAQ3S,EACnB,CACA,CAEA,IAAA4S,EAAAd,EAAA5R,UAgIG,OAhIH0S,EACSvP,KAAA,SACLwP,EACAC,GACkC,IAAAC,EAAA,KAClC,OAAO,IAAIjB,GAAY,SAAC3O,EAAS8O,GAC/Bc,EAAKN,UAAU/O,KAAK,EAClB,EACA,SAAAsP,GACE,GAAKH,EAKH,IACE1P,EAAQ0P,EAAYG,GAClC,CAAc,MAAOhT,GACPiS,EAAOjS,EACrB,MANYmD,EAAQ6P,EAQpB,EACQ,SAAAhB,GACE,GAAKc,EAGH,IACE3P,EAAQ2P,EAAWd,GACjC,CAAc,MAAOhS,GACPiS,EAAOjS,EACrB,MANYiS,EAAOD,EAQnB,IAEMe,EAAKE,kBACX,GACA,EAEAL,EAAA,MACS,SACLE,GAEA,OAAOrQ,KAAKY,MAAK,SAAA6P,GAAA,OAAOA,CAAG,GAAEJ,EACjC,EAEAF,EAAA,QACS,SAAiBO,GAAuD,IAAAC,EAAA,KAC7E,OAAO,IAAItB,GAAqB,SAAC3O,EAAS8O,GACxC,IAAIiB,EACAG,EAEJ,OAAOD,EAAK/P,MACV,SAAAtC,GACEsS,GAAa,EACbH,EAAMnS,EACFoS,GACFA,GAEZ,IACQ,SAAAnB,GACEqB,GAAa,EACbH,EAAMlB,EACFmB,GACFA,GAEZ,IACQ9P,MAAK,WACDgQ,EACFpB,EAAOiB,GAIT/P,EAAQ+P,EAChB,GACA,GACA,EAEAN,EACmBT,OAAA,eAAAmB,EAAA,UAAAZ,SAAW,SAAC3R,GAC3BuS,EAAKC,WAAW3B,GAAO4B,SAAUzS,EACrC,CAAG,EAEH6R,EACmBR,QAAA,eAAAqB,EAAA,UAAAd,QAAU,SAACX,GAC1ByB,EAAKF,WAAW3B,GAAO8B,SAAU1B,EACrC,CAAG,EAEHY,EACAP,QAAA,eAAAsB,EAAA,UAAmBJ,WAAa,SAACK,EAAe7S,GACxC4S,EAAKpB,SAAWX,GAAOY,UAIvBxI,GAAWjJ,GACPA,EAAyBsC,KAAKsQ,EAAKjB,SAAUiB,EAAKhB,UAI1DgB,EAAKpB,OAASqB,EACdD,EAAKE,OAAS9S,EAEd4S,EAAKV,oBACT,CAAG,EAEHL,EACmBN,QAAA,eAAAwB,EAAA,UAAAb,iBAAmB,WAClC,GAAIa,EAAKvB,SAAWX,GAAOY,QAA3B,CAIA,IAAMuB,EAAiBD,EAAKrB,UAAU1N,QACtC+O,EAAKrB,UAAY,GAEjBsB,EAAe/Q,SAAQ,SAAAgR,GACjBA,EAAQ,KAIRF,EAAKvB,SAAWX,GAAO4B,UAEzBQ,EAAQ,GAAGF,EAAKD,QAGdC,EAAKvB,SAAWX,GAAO8B,UACzBM,EAAQ,GAAGF,EAAKD,QAGlBG,EAAQ,IAAK,EACnB,GApBA,CAqBA,CAAG,EAAAlC,CAAA,CAlJc,GCvBV,SAASqC,GACdC,EACAzD,EACA0D,EACAC,GAEA,YAFK,IAALA,IAAAA,EAAgB,GAET,IAAIxC,IAA0B,SAAC3O,EAAS8O,GAC7C,IAAMsC,EAAYH,EAAWE,GAC7B,GAAc,OAAV3D,GAAuC,mBAAd4D,EAC3BpR,EAAQwN,OACH,CACL,IAAMqC,EAASuB,EAAS1L,EAAC,CAAC,EAAI8H,GAAS0D,GAInCrK,GAAWgJ,GACRA,EACF3P,MAAK,SAAAmR,GAAA,OAASL,GAAsBC,EAAYI,EAAOH,EAAMC,EAAQ,GAAGjR,KAAKF,EAAQ,IACrFE,KAAK,KAAM4O,GAETkC,GAAsBC,EAAYpB,EAAQqB,EAAMC,EAAQ,GAC1DjR,KAAKF,GACLE,KAAK,KAAM4O,EAEtB,CACA,GACA,CJkKiB,SAAA7C,GAAAC,GAOA,OAAAC,GAAAD,EAHA,IAAAE,IAIA,CAEA,SAAAD,GAAAD,EAAAG,GACA,GAyCA,SAAA1C,GACA,IAAAjD,GAAAiD,GACA,SAGA,IACA,IAAA5I,EAAAjE,OAAA0C,eAAAmK,GAAA7I,YAAAC,KACA,OAAAA,GAAA,WAAAA,CACA,OAAAlE,GACA,QACA,CACA,CApDAyP,CAAAJ,GAAA,CAEA,IAAAK,EAAAF,EAAA7I,IAAA0I,GACA,QAAAjJ,IAAAsJ,EACA,OAAAA,EAGA,IAAAC,EAAA,GAEAH,EAAAzI,IAAAsI,EAAAM,GAEA,QAAAC,EAAA,EAAAC,EAAA5P,OAAAwE,KAAA4K,GAAAO,EAAAC,EAAA/L,OAAA8L,IAAA,KAAAlJ,EAAAmJ,EAAAD,QACA,IAAAP,EAAA3I,KACAiJ,EAAAjJ,GAAA4I,GAAAD,EAAA3I,GAAA8I,GAEA,CAEA,OAAAG,CACA,CAEA,GAAA1E,MAAAC,QAAAmE,GAAA,CAEA,IAAAK,EAAAF,EAAA7I,IAAA0I,GACA,QAAAjJ,IAAAsJ,EACA,OAAAA,EAGA,IAAAC,EAAA,GAQA,OANAH,EAAAzI,IAAAsI,EAAAM,GAEAN,EAAArM,SAAA,SAAA8M,GACAH,EAAAjM,KAAA4L,GAAAQ,EAAAN,GACA,IAEAG,CACA,CAEA,OAAAN,CACA,CO1NV,SAASuG,GAAcC,EAAkBC,GAiC7B,QAjCoC,IAAPA,IAAAA,EAA0B,CAAC,GACrEA,EAAQC,QACLF,EAAQG,WAAaF,EAAQC,KAAKE,aACrCJ,EAAQG,UAAYF,EAAQC,KAAKE,YAG9BJ,EAAQK,KAAQJ,EAAQI,MAC3BL,EAAQK,IAAMJ,EAAQC,KAAK1P,IAAMyP,EAAQC,KAAKI,OAASL,EAAQC,KAAKK,WAIxEP,EAAQQ,UAAYP,EAAQO,WAAazB,KAErCkB,EAAQQ,qBACVT,EAAQS,mBAAqBR,EAAQQ,oBAGnCR,EAAQS,iBACVV,EAAQU,eAAiBT,EAAQS,gBAE/BT,EAAQU,MAEVX,EAAQW,IAA6B,KAAvBV,EAAQU,IAAI1S,OAAgBgS,EAAQU,IAAMzG,WAErC3J,IAAjB0P,EAAQW,OACVZ,EAAQY,KAAOX,EAAQW,OAEpBZ,EAAQK,KAAOJ,EAAQI,MAC1BL,EAAQK,IAAI,GAAGJ,EAAAI,KAEA,iBAAAJ,EAAAY,UACAb,EAAAa,QAAAZ,EAAAY,SAEAb,EAAAU,eACAV,EAAAc,cAAAvQ,OACA,oBAAA0P,EAAAa,SACAd,EAAAc,SAAAb,EAAAa,aACA,CACA,IAAAA,EAAAd,EAAAQ,UAAAR,EAAAa,QACAb,EAAAc,SAAAA,GAAA,EAAAA,EAAA,CACA,CACAb,EAAAc,UACAf,EAAAe,QAAAd,EAAAc,SAEAd,EAAAe,cACAhB,EAAAgB,YAAAf,EAAAe,cAEAhB,EAAAG,WAAAF,EAAAE,YACAH,EAAAG,UAAAF,EAAAE,YAEAH,EAAAiB,WAAAhB,EAAAgB,YACAjB,EAAAiB,UAAAhB,EAAAgB,WAEA,iBAAAhB,EAAAiB,SACAlB,EAAAkB,OAAAjB,EAAAiB,QAEAjB,EAAAkB,SACAnB,EAAAmB,OAAAlB,EAAAkB,OAEA,CU9FZ,SAAS+L,GAAYlG,GAG1B,OAAOA,EAAKmG,WACd,CJHO,SAASpG,GAAmBC,GACjC,IAAAC,EAA+CD,EAAKE,cAApCC,EAAOF,EAAfP,OAA0BU,EAAAH,EAATjB,QACzBqB,EAA2DC,GAAWN,GAEtE,OAAOzN,GAAkB,CACvBoC,KAHU0L,EAAJ1L,KAIN4L,GAJcF,EAAFE,GAKZC,eAL8BH,EAAdG,eAMhBL,QAAAA,EACAhG,OAPsCkG,EAANlG,OAQhCsG,KAR4CJ,EAAJI,KASxCL,SAAAA,EACAM,OAVqDL,EAAPK,QAYlD,CAgDO,SAASJ,GAAWN,GACzB,OAkBF,SAAyBA,GACvB,MAAkD,mBAAnCA,EAAmBiB,WACpC,CApBMC,CAAgBlB,GACXA,EAAKiB,cAKa,mBAAhBjB,EAAKvD,OAEPuD,EAAKvD,SAGP,CAAC,CACV,CKpCO,SAASoK,GAAkC7G,GAChD,IAAMsB,EAASyE,KACf,IAAKzE,EACH,MAAO,CAAC,EAIV,IAAM1B,EA5CD,SACLQ,EACAkB,EACAD,GAEA,IAAMxT,EAAUyT,EAAO+E,aAEJC,GAAehF,EAAOiF,UAAY,CAAC,GAA9CC,UAGSC,GAAkBpF,GAASA,EAAMqF,WAAc,CAAC,GAAzDC,QAEF/G,EAAMrN,GAAkB,CAC5ByH,YAAanM,EAAQmM,aAAelB,GACpCiB,QAASlM,EAAQkM,QACjB0M,aAAAA,EACAH,WAAAA,EACAlG,SAAAA,IAKF,OAFAkB,EAAOsF,MAAQtF,EAAOsF,KAAK,YAAahH,GAEjCA,CACT,CAqBcwG,CAAoC9F,GAAWN,GAAMI,UAAY,GAAIkB,EFuW1EkE,KAAgBS,YEpWjBa,EAAMZ,GAAYlG,GACxB,IAAK8G,EACH,OAAOlH,EAMT,IAAMmH,EAAcD,GAAOA,EAAIE,8BAC/B,GAAID,EACF,OAAOA,EAMT,IAAAE,EAAgDH,EAAII,SAAhCC,EAAeF,EAA3BG,WAA6BrW,EAAAkW,EAAAlW,OACd,MAAnBoW,IACFvH,EAAIyH,YAAY,GAAGF,GAIA,IAAAG,EAAAhH,GAAAwG,GAWA,OARA/V,GAAA,QAAAA,IACA6O,EAAAuG,YAAAmB,EAAAC,aAGA3H,EAAAD,QAAAvP,OLahB,SAAuB4P,GAG5B,IAAQmB,EAAenB,EAAKE,cAApBiB,WAER,OAAO/T,QArGyB,EAqGjB+T,EACjB,CKnBuBN,CAAAiG,IAEAxF,EAAAsF,MAAAtF,EAAAsF,KAAA,YAAAhH,GAEAA,CACA,CH3DvB,IAYagE,GAAA,WA+DJ,SAAAA,IACLhe,KAAK+iB,qBAAsB,EAC3B/iB,KAAKgjB,gBAAkB,GACvBhjB,KAAKijB,iBAAmB,GACxBjjB,KAAKkjB,aAAe,GACpBljB,KAAKmjB,aAAe,GACpBnjB,KAAKojB,MAAQ,CAAC,EACdpjB,KAAKqjB,MAAQ,CAAC,EACdrjB,KAAKsjB,OAAS,CAAC,EACftjB,KAAKujB,UAAY,CAAC,EAClBvjB,KAAKwjB,uBAAyB,CAAC,EAC/BxjB,KAAKyjB,oBAAsBC,IAC/B,CAEA1F,EAIgBD,MAAP,SAAatC,GAClB,OAAOA,EAAQA,EAAMsC,QAAU,IAAIC,CACvC,EAEA,IAAA7N,EAAA6N,EAAAvgB,UAsjBE,OAtjBF0S,EAGS4N,MAAA,WACL,IAAM4F,EAAW,IAAI3F,EAkBrB,OAjBA2F,EAAST,aAAa,GAAAxG,OAAM1c,KAAKkjB,cACjCS,EAASN,MAAMjd,EAAA,GAAOpG,KAAKqjB,OAC3BM,EAASL,OAAOld,EAAA,GAAOpG,KAAKsjB,QAC5BK,EAASJ,UAAUnd,EAAA,GAAOpG,KAAKujB,WAC/BI,EAASP,MAAQpjB,KAAKojB,MACtBO,EAASC,OAAS5jB,KAAK4jB,OACvBD,EAASE,MAAQ7jB,KAAK6jB,MACtBF,EAASG,SAAW9jB,KAAK8jB,SACzBH,EAASI,iBAAmB/jB,KAAK+jB,iBACjCJ,EAASK,aAAehkB,KAAKgkB,aAC7BL,EAASV,iBAAiB,GAAAvG,OAAM1c,KAAKijB,kBACrCU,EAASM,gBAAkBjkB,KAAKikB,gBAChCN,EAASR,aAAa,GAAAzG,OAAM1c,KAAKmjB,cACjCQ,EAASH,uBAAuBpd,EAAA,GAAOpG,KAAKwjB,wBAC5CG,EAASF,oBAAoBrd,EAAA,GAAOpG,KAAKyjB,qBACzCE,EAASO,QAAUlkB,KAAKkkB,QAEjBP,CACX,EAEAxT,EACSgU,UAAA,SAAUzI,GACf1b,KAAKkkB,QAAUxI,CACnB,EAEAvL,EAKSgQ,UAAA,WACL,OAAOngB,KAAKkkB,OAChB,EAEA/T,EAISiU,iBAAA,SAAiB3e,GACtBzF,KAAKgjB,gBAAgB/hB,KAAKwE,EAC9B,EAEA0K,EAGSkU,kBAAA,SAAkB5e,GAEvB,OADAzF,KAAKijB,iBAAiBhiB,KAAKwE,GACpBzF,IACX,EAEAmQ,EAGSmU,QAAA,SAAQhR,GAgBb,OAbAtT,KAAKojB,MAAQ9P,GAAQ,CACnBI,WAAO/P,EACPC,QAAID,EACJ6P,gBAAY7P,EACZod,aAASpd,EACTgQ,cAAUhQ,GAGR3D,KAAK8jB,UACP3Q,GAAcnT,KAAK8jB,SAAU,CAAExQ,KAAAA,IAGjCtT,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS2Q,QAAA,WACL,OAAO9gB,KAAKojB,KAChB,EAEAjT,EAGSqU,kBAAA,WACL,OAAOxkB,KAAKikB,eAChB,EAEA9T,EAGSsU,kBAAA,SAAkBC,GAEvB,OADA1kB,KAAKikB,gBAAkBS,EAChB1kB,IACX,EAEAmQ,EAGSwU,QAAA,SAAQ9J,GAMb,OALA7a,KAAKqjB,MAAAjd,EAAA,GACApG,KAAKqjB,MACLxI,GAEL7a,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSyU,OAAA,SAAO3gB,EAAa3F,GAAwB,IAAAumB,EAGjD,OAFA7kB,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,QAAKwB,EAAA,IAAG5gB,GAAM3F,EAAAumB,IACrC7kB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS2U,UAAA,SAAUC,GAMf,OALA/kB,KAAKsjB,OAAAld,EAAA,GACApG,KAAKsjB,OACLyB,GAEL/kB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS6U,SAAA,SAAS/gB,EAAaob,GAAoB,IAAA4F,EAG/C,OAFAjlB,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,SAAM2B,EAAA,IAAGhhB,GAAMob,EAAA4F,IACvCjlB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGS+U,eAAA,SAAetD,GAGpB,OAFA5hB,KAAKgkB,aAAepC,EACpB5hB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSgV,SAAA,SAELtf,GAIA,OAFA7F,KAAK4jB,OAAS/d,EACd7F,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSiV,mBAAA,SAAmB3jB,GAGxB,OAFAzB,KAAK+jB,iBAAmBtiB,EACxBzB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSkV,WAAA,SAAWphB,EAAaoP,GAS7B,OARgB,OAAZA,SAEKrT,KAAKujB,UAAUtf,GAEtBjE,KAAKujB,UAAUtf,GAAOoP,EAGxBrT,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAKSmV,QAAA,SAAQlL,GAGb,OAFApa,KAAK6jB,MAAQzJ,EACbpa,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAISoV,QAAA,WACL,OAAOvlB,KAAK6jB,KAChB,EAEA1T,EAISqV,eAAA,WAGL,IAAMpL,EAAOpa,KAAK6jB,MAIlB,OAAOzJ,GAAQA,EAAKmG,WACxB,EAEApQ,EAGSsV,WAAA,SAAWrS,GAOhB,OANKA,EAGHpT,KAAK8jB,SAAW1Q,SAFTpT,KAAK8jB,SAId9jB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSuV,WAAA,WACL,OAAO1lB,KAAK8jB,QAChB,EAEA3T,EAGS8N,OAAA,SAAOH,GACZ,IAAKA,EACH,OAAO9d,KAGT,IAAM2lB,EAAyC,mBAAnB7H,EAAgCA,EAAe9d,MAAQ8d,EAEnF,GAAI6H,aAAwB3H,EAAO,CACjC,IAAM4H,EAAYD,EAAarH,eAE/Bte,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,MAAUuC,EAAU/K,MAC3C7a,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,OAAWsC,EAAUvG,OAC7Crf,KAAKujB,UAAUnd,EAAA,GAAOpG,KAAKujB,UAAcqC,EAAUxG,UAC/CwG,EAAUtS,MAAQ9V,OAAOwE,KAAK4jB,EAAUtS,MAAMjS,SAChDrB,KAAKojB,MAAQwC,EAAUtS,MAErBsS,EAAU/f,QACZ7F,KAAK4jB,OAASgC,EAAU/f,OAEtB+f,EAAUhE,YAAYvgB,SACxBrB,KAAKgkB,aAAe4B,EAAUhE,aAE5B+D,EAAanB,sBACfxkB,KAAKikB,gBAAkB0B,EAAanB,qBAElCoB,EAAUhD,qBACZ5iB,KAAKyjB,oBAAsBmC,EAAUhD,mBAE7C,MAAW,GAAIxb,GAAcue,GAAe,CACtC,IAAME,EAAe/H,EACrB9d,KAAKqjB,MAAMjd,EAAA,GAAOpG,KAAKqjB,MAAUwC,EAAahL,MAC9C7a,KAAKsjB,OAAOld,EAAA,GAAOpG,KAAKsjB,OAAWuC,EAAaxG,OAChDrf,KAAKujB,UAAUnd,EAAA,GAAOpG,KAAKujB,UAAcsC,EAAazG,UAClDyG,EAAavS,OACftT,KAAKojB,MAAQyC,EAAavS,MAExBuS,EAAahgB,QACf7F,KAAK4jB,OAASiC,EAAahgB,OAEzBggB,EAAajE,cACf5hB,KAAKgkB,aAAe6B,EAAajE,aAE/BiE,EAAanB,iBACf1kB,KAAKikB,gBAAkB4B,EAAanB,gBAElCmB,EAAajD,qBACf5iB,KAAKyjB,oBAAsBoC,EAAajD,mBAEhD,CAEI,OAAO5iB,IACX,EAEAmQ,EAGS2V,MAAA,WAeL,OAdA9lB,KAAKkjB,aAAe,GACpBljB,KAAKqjB,MAAQ,CAAC,EACdrjB,KAAKsjB,OAAS,CAAC,EACftjB,KAAKojB,MAAQ,CAAC,EACdpjB,KAAKujB,UAAY,CAAC,EAClBvjB,KAAK4jB,YAASjgB,EACd3D,KAAK+jB,sBAAmBpgB,EACxB3D,KAAKgkB,kBAAergB,EACpB3D,KAAKikB,qBAAkBtgB,EACvB3D,KAAK6jB,WAAQlgB,EACb3D,KAAK8jB,cAAWngB,EAChB3D,KAAKukB,wBACLvkB,KAAKmjB,aAAe,GACpBnjB,KAAKyjB,oBAAsBC,KACpB1jB,IACX,EAEAmQ,EAGS8P,cAAA,SAAcC,EAAwB6F,GAC3C,IAAMC,EAAsC,iBAAnBD,EAA8BA,EAja3B,IAoa5B,GAAIC,GAAa,EACf,OAAOhmB,KAGT,IAAMimB,EAAA7f,EAAA,CACJwN,UAAW5B,MACRkO,GAGChB,EAAclf,KAAKkjB,aAMzB,OALAhE,EAAYje,KAAKglB,GACjBjmB,KAAKkjB,aAAehE,EAAY7d,OAAS2kB,EAAY9G,EAAY5c,OAAO0jB,GAAa9G,EAErFlf,KAAKukB,wBAEEvkB,IACX,EAEAmQ,EAGS+V,kBAAA,WACL,OAAOlmB,KAAKkjB,aAAaljB,KAAKkjB,aAAa7hB,OAAS,EACxD,EAEA8O,EAGSgW,iBAAA,WAGL,OAFAnmB,KAAKkjB,aAAe,GACpBljB,KAAKukB,wBACEvkB,IACX,EAEAmQ,EAGSiW,cAAA,SAAcC,GAEnB,OADArmB,KAAKmjB,aAAaliB,KAAKolB,GAChBrmB,IACX,EAEAmQ,EAISmW,eAAA,WAGL,OAFatmB,KAAKse,eAENE,WAChB,EAEArO,EAGSoW,iBAAA,WAEL,OADAvmB,KAAKmjB,aAAe,GACbnjB,IACX,EAEAmQ,EACSmO,aAAA,WAiBL,MAAO,CACLY,YAHElf,KAbFkjB,aAiBA1E,YAJExe,KAZFmjB,aAiBA/D,SALEpf,KAXFujB,UAiBA1I,KANE7a,KAVFqjB,MAiBAhE,MAPErf,KATFsjB,OAiBAhQ,KAREtT,KARFojB,MAiBAvd,MATE7F,KAPF4jB,OAiBAhC,YAVE5hB,KANFgkB,cAgB6B,GAC7BtF,gBAXE1e,KALFijB,iBAiBAL,mBAZE5iB,KAJFyjB,oBAiBA5B,sBAbE7hB,KAHFwjB,uBAiBA1B,gBAdE9hB,KAFF+jB,iBAiBA3J,KAfEpa,KADF6jB,MAkBN,EAEA1T,EAQSqW,aAAA,SACLtY,EACA0D,EACA6U,GAYA,YAbI,IAAJ7U,IAAAA,EAAkB,CAAC,QACM,IAAzB6U,IAAAA,EAA8C,IIxiB3C,SAA+BvY,EAAca,GAClD,IAAQ6S,EAA0D7S,EAA1D6S,YAAaxH,EAA6CrL,EAA7CqL,KAAM8E,EAAuCnQ,EAAvCmQ,YAAa2C,EAA0B9S,EAA1B8S,uBA8G1C,SAA0B3T,EAAca,GACtC,IACEsQ,EAOEtQ,EAPFsQ,MACAxE,EAME9L,EANF8L,KACAvH,EAKEvE,EALFuE,KACA8L,EAIErQ,EAJFqQ,SACAvZ,EAGEkJ,EAHFlJ,MAEAic,EACE/S,EADF+S,gBAGIC,EAAepV,GAAkB0S,GACnC0C,GAAgBvkB,OAAOwE,KAAK+f,GAAc1gB,SAC5C6M,EAAMmR,MAAMjZ,EAAA,GAAO2b,EAAiB7T,EAAMmR,QAG5C,IAAM2C,EAAcrV,GAAkBkO,GAClCmH,GAAexkB,OAAOwE,KAAKggB,GAAa3gB,SAC1C6M,EAAM2M,KAAKzU,EAAA,GAAO4b,EAAgB9T,EAAM2M,OAG1C,IAAMoH,EAActV,GAAkB2G,GAClC2O,GAAezkB,OAAOwE,KAAKigB,GAAa5gB,SAC1C6M,EAAMoF,KAAKlN,EAAA,GAAO6b,EAAgB/T,EAAMoF,OAG1C,IAAM4O,EAAkBvV,GAAkByS,GACtC8C,GAAmB1kB,OAAOwE,KAAKkgB,GAAiB7gB,SAClD6M,EAAMkR,SAAShZ,EAAA,GAAO8b,EAAoBhU,EAAMkR,WAG9CvZ,IACFqI,EAAMrI,MAAQA,GAGZic,IACF5T,EAAMqS,YAAcuB,EAExB,CAjJEK,CAAiBjU,EAAOa,GAKpBqL,GA0JN,SAA0BlM,EAAckM,GACtClM,EAAMkR,SAAAhZ,EAAA,CAAakZ,MAAOnF,GAAmBC,IAAUlM,EAAMkR,UAC7D,IAAMgD,EAAW9B,GAAYlG,GAC7B,GAAIgI,EAAU,CACZlU,EAAM2T,sBAAAzb,EAAA,CACJiR,uBAAwB4J,GAAkC7G,IACvDlM,EAAM2T,uBAEX,IAAMC,EAAkBpH,GAAW0H,GAAUT,YACzCG,IACF5T,EAAM2M,KAAKzU,EAAA,CAAIma,YAAauB,GAAoB5T,EAAM2M,MAE5D,CACA,CAtKIwH,CAAiBnU,EAAOkM,GA4K5B,SAAiClM,EAAc0T,GlBmCjC,IAAAU,EkBjCZpU,EAAM0T,YAAc1T,EAAM0T,alBiCdU,EkBjCqCpU,EAAM0T,YlBkC3CpZ,MAAAC,QAAA6Z,GAAAA,EAAA,CAAAA,IkBlC0D,GAGlEV,IACF1T,EAAM0T,YAAc1T,EAAM0T,YAAYlF,OAAOkF,IAI3C1T,EAAM0T,cAAgB1T,EAAM0T,YAAYvgB,eACnC6M,EAAM0T,WAEjB,CAtLEW,CAAwBrU,EAAO0T,GA0IjC,SAAiC1T,EAAcgR,GAC7C,IAAMsD,EAAkB,GAAA9F,OAAOxO,EAAMgR,aAAe,GAAQA,GAC5DhR,EAAMgR,YAAcsD,EAAkBnhB,OAASmhB,OAAoB7e,CACrE,CA5IE8e,CAAwBvU,EAAOgR,GA8IjC,SAAiChR,EAAc2T,GAC7C3T,EAAM2T,sBAAAzb,EAAA,GACD8H,EAAM2T,sBACNA,EAEP,CAlJEa,CAAwBxU,EAAO2T,EACjC,CJ0hBIpD,CAAsBvQ,EAAOlO,KAAKse,gBAU3B5M,GAPc,GAAAgL,OAChB+J,EX7iBAvhB,GAAqC,yBAAyB,iBAAM,EAAE,IWgjBtElF,KAAKijB,kBAGoC/U,EAAO0D,EACzD,EAEAzB,EAGSuW,yBAAA,SAAyBC,GAG9B,OAFA3mB,KAAKwjB,uBAAuBpd,EAAA,GAAOpG,KAAKwjB,uBAA2BmD,GAE5D3mB,IACX,EAEAmQ,EAGSyW,sBAAA,SAAsBvT,GAE3B,OADArT,KAAKyjB,oBAAsBpQ,EACpBrT,IACX,EAEAmQ,EAGS0W,sBAAA,WACL,OAAO7mB,KAAKyjB,mBAChB,EAEAtT,EAOSwP,iBAAA,SAAiBxR,EAAoByD,GAC1C,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KAExD,IAAKtN,KAAKkkB,QAER,OADAle,GAAO8gB,KAAK,+DACLzY,EAGT,IAAM0Y,EAAqB,IAAIloB,MAAM,6BAarC,OAXAmB,KAAKkkB,QAAQvE,iBACXxR,EAAS/H,EAAA,CAEP4gB,kBAAmB7Y,EACnB4Y,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,IAEZrO,MAGKqO,CACX,EAEA8B,EAQS8W,eAAA,SAAelb,EAAiBlG,EAAuB+L,GAC5D,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KAExD,IAAKtN,KAAKkkB,QAER,OADAle,GAAO8gB,KAAK,6DACLzY,EAGT,IAAM0Y,EAAqB,IAAIloB,MAAMkN,GAcrC,OAZA/L,KAAKkkB,QAAQ+C,eACXlb,EACAlG,EAAKO,EAAA,CAEH4gB,kBAAmBjb,EACnBgb,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,IAEZrO,MAGKqO,CACX,EAEA8B,EAOS6P,aAAA,SAAa9R,EAAc0D,GAChC,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KAExD,OAAKtN,KAAKkkB,SAKVlkB,KAAKkkB,QAAQlE,aAAa9R,EAAK9H,EAAA,GAAOwL,EAAM,CAAAtD,SAAUD,IAAWrO,MAE1DqO,IANLrI,GAAO8gB,KAAK,2DACLzY,EAMb,EAEA8B,EAGYoU,sBAAA,WAA8B,IAAAjU,EAAA,KAIjCtQ,KAAK+iB,sBACR/iB,KAAK+iB,qBAAsB,EAC3B/iB,KAAKgjB,gBAAgBziB,SAAQ,SAAAkF,GAC3BA,EAAS6K,EACjB,IACMtQ,KAAK+iB,qBAAsB,EAEjC,EAAE/E,CAAA,CA3oBW,GAmqBb,SAAS0F,KACP,MAAO,CACLtK,QAAS9L,KACTwM,OAAQxM,KAAQuM,UAAU,IAE9B,CKvtBO,IC8CMsN,GAAcC,WD9CA,WCsHdC,GAAA,WAyDJ,SAAAA,EACL3L,EACAD,EACAE,EACiB2L,GAEjB,IAAIC,EAQAC,OAVqB,IAARF,IAAAA,EAAmBH,IACpC,KAAAG,SAAAA,EAEK7L,EAIH8L,EAAgB9L,GAHhB8L,EAAgB,IAAIvJ,IACNmG,UAAUzI,GAMrBC,EAIH6L,EAAyB7L,GAHzB6L,EAAyB,IAAIxJ,IACNmG,UAAUzI,GAKnC1b,KAAKynB,OAAS,CAAC,CAAEhM,MAAO8L,IAEpB7L,GAEF1b,KAAK0nB,WAAWhM,GAGlB1b,KAAK2nB,gBAAkBH,CAC3B,CAEA,IAAArX,EAAAkX,EAAA5pB,UAygBE,OAzgBF0S,EAQSyX,YAAA,SAAYC,GACjB,OAAO7nB,KAAKsnB,SAAWO,CAC3B,EAEA1X,EAMSuX,WAAA,SAAWhM,GAEhB,IAAMoM,EAAM9nB,KAAK+nB,cACjBD,EAAIpM,OAASA,EACboM,EAAIrM,MAAM0I,UAAUzI,GAEhBA,GAAUA,EAAOsM,mBAEnBtM,EAAOsM,mBAEb,EAEA7X,EAKS8X,UAAA,WAGL,IAAMxM,EAAQzb,KAAKqgB,WAAWtC,QAO9B,OALA/d,KAAKkoB,WAAWjnB,KAAK,CAEnBya,OAAQ1b,KAAKmgB,YACb1E,MAAAA,IAEKA,CACX,EAEAtL,EAKSgY,SAAA,WAEL,QAAInoB,KAAKkoB,WAAW7mB,QAAU,IAErBrB,KAAKkoB,WAAWhmB,MAC7B,EAEAiO,EAKSiY,UAAA,SAAa3iB,GAAkC,IAIhD4iB,EAJgD/X,EAAA,KAE9CmL,EAAQzb,KAAKioB,YAGnB,IACEI,EAAqB5iB,EAASgW,EACpC,CAAM,MAAOle,GAGP,MADAyC,KAAKmoB,WACC5qB,CACZ,CAEI,OAAIgK,GAAW8gB,GAENA,EAAmBznB,MACxB,SAAA0nB,GAGE,OADAhY,EAAK6X,WACEG,CACjB,IACQ,SAAA/qB,GAGE,MADA+S,EAAK6X,WACC5qB,CAChB,KAKIyC,KAAKmoB,WACEE,EACX,EAEAlY,EAKSgQ,UAAA,WAEL,OAAOngB,KAAK+nB,cAAcrM,MAC9B,EAEAvL,EAKSkQ,SAAA,WAEL,OAAOrgB,KAAK+nB,cAActM,KAC9B,EAEAtL,EAGSoY,kBAAA,WACL,OAAOvoB,KAAK2nB,eAChB,EAEAxX,EAIS+X,SAAA,WACL,OAAOloB,KAAKynB,MAChB,EAEAtX,EAIS4X,YAAA,WACL,OAAO/nB,KAAKynB,OAAOznB,KAAKynB,OAAOpmB,OAAS,EAC5C,EAEA8O,EAKSwP,iBAAA,SAAiBxR,EAAoByD,GAC1C,IAAMvD,EAAWrO,KAAKwoB,aAAe5W,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KACvEyZ,EAAqB,IAAIloB,MAAM,6BASrC,OAPAmB,KAAKqgB,WAAWV,iBAAiBxR,EAAS/H,EAAA,CACxC4gB,kBAAmB7Y,EACnB4Y,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,KAGLA,CACX,EAEA8B,EAKS8W,eAAA,SACLlb,EAEAlG,EACA+L,GAEA,IAAMvD,EAAWrO,KAAKwoB,aAAe5W,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KACvEyZ,EAAqB,IAAIloB,MAAMkN,GASrC,OAPA/L,KAAKqgB,WAAW4G,eAAelb,EAASlG,EAAKO,EAAA,CAC3C4gB,kBAAmBjb,EACnBgb,mBAAAA,GACGnV,EAAI,CACPtD,SAAUD,KAGLA,CACX,EAEA8B,EAKS6P,aAAA,SAAa9R,EAAc0D,GAChC,IAAMvD,EAAUuD,GAAQA,EAAKtD,SAAWsD,EAAKtD,SAAWhB,KAMxD,OALKY,EAAMzO,OACTO,KAAKwoB,aAAena,GAGtBrO,KAAKqgB,WAAWL,aAAa9R,EAAK9H,EAAA,GAAOwL,EAAM,CAAAtD,SAAUD,KAClDA,CACX,EAEA8B,EAKSsY,YAAA,WACL,OAAOzoB,KAAKwoB,YAChB,EAEArY,EAKS8P,cAAA,SAAcC,EAAwBtO,GAE3C,IAAA8W,EAA0B1oB,KAAK+nB,cAAvBtM,EAAKiN,EAALjN,MAAOC,EAAAgN,EAAAhN,OAEf,GAAKA,EAAL,CAEA,IAAAhC,EACGgC,EAAO+E,YAAc/E,EAAO+E,cAAiB,CAAC,EAACkI,EAAAjP,EAD1CkP,iBAAAA,OAAiB,IAAAD,EAAE,KAAIA,EAAAE,EAAAnP,EAAEqM,eAAAA,OAAA,IAAA8C,EAvXT,IAuX0BA,EAGlD,KAAI9C,GAAkB,GAAtB,CAEA,IACME,EAAA7f,EAAA,CAAqBwN,UADT5B,MACuBkO,GACnC4I,EAAkBF,E1B1YrB,SAA2BnjB,GAChC,KAAM,gBACJ,OAAOA,IAGT,IAAMC,EAAUZ,GAAWY,QACrBC,EAA8C,CAAC,EAE/CC,EAAgBpI,OAAOwE,KAAKuD,IAGlCK,EAAcrF,SAAQ,SAAAsF,GACpB,IAAMC,EAAwBP,GAAuBM,GACrDF,EAAaE,GAASH,EAAQG,GAC9BH,EAAQG,GAASC,CACrB,IAEE,IACE,OAAOL,GACX,SAEIG,EAAcrF,SAAQ,SAAAsF,GACpBH,EAAQG,GAASF,EAAaE,EACpC,GACA,CACA,C0BkXSL,EAAe,kBAAMojB,EAAiB3C,EAAkBrU,EAAK,IAC9DqU,EAEoB,OAApB6C,IAEApN,EAAOsF,MACTtF,EAAOsF,KAAK,sBAAuB8H,EAAiBlX,GAWtD6J,EAAMwE,cAAc6I,EAAiB/C,GAtBN,CALZ,CA4BvB,EAEA5V,EAISmU,QAAA,SAAQhR,GAGbtT,KAAKqgB,WAAWiE,QAAQhR,GAExBtT,KAAKuoB,oBAAoBjE,QAAQhR,EACrC,EAEAnD,EAISwU,QAAA,SAAQ9J,GAGb7a,KAAKqgB,WAAWsE,QAAQ9J,GAExB7a,KAAKuoB,oBAAoB5D,QAAQ9J,EACrC,EAEA1K,EAIS2U,UAAA,SAAUC,GAGf/kB,KAAKqgB,WAAWyE,UAAUC,GAE1B/kB,KAAKuoB,oBAAoBzD,UAAUC,EACvC,EAEA5U,EAISyU,OAAA,SAAO3gB,EAAa3F,GAGzB0B,KAAKqgB,WAAWuE,OAAO3gB,EAAK3F,GAE5B0B,KAAKuoB,oBAAoB3D,OAAO3gB,EAAK3F,EACzC,EAEA6R,EAIS6U,SAAA,SAAS/gB,EAAaob,GAG3Brf,KAAKqgB,WAAW2E,SAAS/gB,EAAKob,GAE9Brf,KAAKuoB,oBAAoBvD,SAAS/gB,EAAKob,EAC3C,EAMAlP,EACSkV,WAAA,SAAW5jB,EAAc4R,GAG9BrT,KAAKqgB,WAAWgF,WAAW5jB,EAAM4R,GAEjCrT,KAAKuoB,oBAAoBlD,WAAW5jB,EAAM4R,EAC9C,EAEAlD,EAKS4Y,eAAA,SAAetjB,GAEpB,IAAAujB,EAA0BhpB,KAAK+nB,cAAvBtM,EAAKuN,EAALvN,MAAOuN,EAAAtN,QAEbjW,EAASgW,EAEf,EAKAtL,EACS8Y,IAAA,SAAIxjB,GAET,IAAMyjB,EAASC,GAASnpB,MACxB,IACEyF,EAASzF,KACf,SAEMmpB,GAASD,EACf,CACA,EAEA/Y,EAISiZ,eAAA,SAAsCC,GAE3C,IAAM3N,EAAS1b,KAAKmgB,YACpB,IAAKzE,EAAQ,OAAO,KACpB,IAEE,OAAOA,EAAO0N,eAAeC,EACnC,CAAM,MAAOrgB,GAEP,OAAO,IACb,CACA,EAEAmH,EAmBSmZ,iBAAA,SAAiBjW,EAA6BkW,GAkBnD,OAjBevpB,KAAKwpB,qBAAkC,mBAAoBnW,EAASkW,EAkBvF,EAEApZ,EAISsZ,aAAA,WACL,OAAOzpB,KAAKwpB,qBAAgD,eAChE,EAEArZ,EAKSuZ,eAAA,SAAeC,GAEpB,QAF8B,IAAVA,IAAAA,GAAsB,GAEtCA,EAEF,OAAO3pB,KAAK2pB,aAId3pB,KAAK4pB,oBACT,EAEAzZ,EAISwZ,WAAA,WAEL,IACMlO,EADQzb,KAAK+nB,cACCtM,MACdrI,EAAUqI,EAAMiK,aAClBtS,GdjhBW,SAAAA,GACA,IAAAC,EAAA,GAGA,OAAAD,EAAAmB,SACAlB,EAAA,CAAAkB,OAAA,WAGApB,GAAAC,EAAAC,EACA,CcygBbwW,CAAazW,GAEfpT,KAAK4pB,qBAGLnO,EAAMgK,YACV,EAEAtV,EAIS2Z,aAAA,SAAazW,GAElB,IAAA0W,EAA0B/pB,KAAK+nB,cAAvBtM,EAAKsO,EAALtO,MAAOC,EAAAqO,EAAArO,OACfxD,EAAwDwD,GAAUA,EAAO+E,cAAiB,CAAC,EAAnFtM,EAAO+D,EAAP/D,QAAO6V,EAAA9R,EAAE9D,YAAAA,OAAA,IAAA4V,EAAc9W,GAAA8W,EAGvB3V,GAAcvP,GAAWmlB,WAAa,CAAC,GAAvC5V,UAEFjB,EdjpBH,SAAqBC,GAE1B,IAAM6W,EAAe/X,KAEfiB,EAAmB,CACvBW,IAAKzG,KACL0G,MAAM,EACNJ,UAAWsW,EACXjW,QAASiW,EACThW,SAAU,EACVK,OAAQ,KACRD,OAAQ,EACRR,gBAAgB,EAChB+C,OAAQ,WAAF,OAkHS,SAAAzD,GACA,OAAAzG,GAAA,CACAoH,IAAA,GAAAX,EAAAW,IACAC,KAAAZ,EAAAY,KAEAC,QAAA,IAAAhC,KAAA,IAAAmB,EAAAa,SAAAkW,cACAvW,UAAA,IAAA3B,KAAA,IAAAmB,EAAAQ,WAAAuW,cACA5V,OAAAnB,EAAAmB,OACAD,OAAAlB,EAAAkB,OACAb,IAAA,iBAAAL,EAAAK,KAAA,iBAAAL,EAAAK,IAAA,GAAAL,EAAAK,SAAA9P,EACAuQ,SAAAd,EAAAc,SACAL,mBAAAT,EAAAS,mBACAuW,MAAA,CACAjW,QAAAf,EAAAe,QACAC,YAAAhB,EAAAgB,YACAZ,WAAAJ,EAAAG,UACA8W,WAAAjX,EAAAiB,YAGA,CArIDiW,CAAclX,EAAQ,GAOtC,OAJIC,GACFF,GAAcC,EAASC,GAGlBD,CACT,Cc4nBoBmX,CAAWnkB,EAAC,CAC1B+N,QAAAA,EACAC,YAAAA,EACAd,KAAMmI,EAAMqF,WACRzM,GAAa,CAAEA,UAAAA,GAChBhB,IAICmX,EAAiB/O,EAAMiK,YAAcjK,EAAMiK,aAUjD,OATI8E,GAA4C,OAA1BA,EAAejW,QACnCpB,GAAcqX,EAAgB,CAAEjW,OAAQ,WAG1CvU,KAAK2pB,aAGLlO,EAAMgK,WAAWrS,GAEVA,CACX,EAEAjD,EAOSsa,qBAAA,WAEL,IAAM/O,EAAS1b,KAAKmgB,YACdlY,EAAUyT,GAAUA,EAAO+E,aACjC,OAAOjZ,QAAQS,GAAWA,EAAQyiB,eACtC,EAEAva,EAGUyZ,mBAAA,WAEN,IAAAe,EAA0B3qB,KAAK+nB,cAAvBtM,EAAKkP,EAALlP,MAAOC,EAAAiP,EAAAjP,OAETtI,EAAUqI,EAAMiK,aAClBtS,GAAWsI,GAAUA,EAAOgO,gBAC9BhO,EAAOgO,eAAetW,EAE5B,EAMAjD,EACUqZ,qBAAA,SAAwBzqB,GAC9B,IACM6rB,EADUC,KACOxlB,WACvB,GAAIulB,GAAUA,EAAOE,YAAmD,mBAA9BF,EAAOE,WAAW/rB,GAAwB,SAAAgsB,EAAAxkB,UAAAlF,OAHnC2pB,EAAI,IAAAxiB,MAAAuiB,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA1kB,UAAA0kB,GAInD,OAAOL,EAAOE,WAAW/rB,GAAQyH,MAAMxG,KAAMgrB,EACnD,CAEA,EAAE3D,CAAA,CAlmBW,GA4mBN,SAASwD,KAKd,OAJA/lB,GAAWO,WAAaP,GAAWO,YAAc,CAC/CylB,WAAY,CAAC,EACbI,SAAKvnB,GAEAmB,EACT,CAUO,SAASqkB,GAAS+B,GACvB,IAAMC,EAAWN,KACX3B,EAASkC,GAAkBD,GAEjC,OADAE,GAAgBF,EAAUD,GACnBhC,CACT,CAYO,SAAStJ,KAEd,IAAMuL,EAAWN,KAEjB,GAAIM,EAAS9lB,YAAc8lB,EAAS9lB,WAAWimB,IAAK,CAClD,IAAMJ,EAAMC,EAAS9lB,WAAWimB,IAAI1L,gBAEpC,GAAIsL,EACF,OAAOA,CAEb,CAGE,OAcF,SAAsBC,GAapB,YAb4B,IAARA,IAAAA,EAAoBN,MA0EjBU,EAtEJJ,KAuETI,GAAWA,EAAQlmB,YAAckmB,EAAQlmB,WAAW6lB,OArE5DE,GAAkBD,GAAUvD,YAAYT,KAGxCkE,GAAgBF,EAAU,IAAI9D,IAIzB+D,GAAkBD,GA6D3B,IAAyBI,CA5DzB,CA5BSC,CAAaL,EACtB,CAkGO,SAASC,GAAkBG,GAEhC,OAAOrmB,GAAwB,OAAO,kBAAM,IAAImiB,EAAK,GAAEkE,EACzD,CASO,SAASF,GAAgBE,EAAkBL,GAChD,QAAKK,KACeA,EAAQlmB,WAAakmB,EAAQlmB,YAAc,CAAC,GACrD6lB,IAAMA,GACV,EACT,CPhuBgC,IAAIzL,QA8NpC,IAAMC,GAAsD,CAC1D,OACA,QACA,QACA,WACA,OACA,cACA,iBACA,sBEhVK,SAASuH,GACdlb,EAEA+R,GAIA,IAAMjY,EAAkC,iBAAnBiY,EAA8BA,OAAiBna,EAC9D0P,EAAoC,iBAAnByK,EAA8B,CAAEA,eAAAA,QAAmBna,EAE1E,OAAOic,KAAgBqH,eAAelb,EAASlG,EAAOwN,EACxD,CA0UO,SAAS8M,KAEd,OAAOP,KAAgBO,WACzB,wGWzYA,IAAM4Q,GAA6E,CAAC,EAC9EC,GAA6D,CAAC,EKWpE,SAASwE,KACD,gBAINlwB,GAAe/E,SAAQ,SAAUsF,GACzBA,KAASf,GAAWY,ShCNvB,SAAcyF,EAAgC1J,EAAc2J,GACjE,GAAM3J,KAAQ0J,EAAd,CAIA,IAAME,EAAWF,EAAO1J,GAClB6J,EAAUF,EAAmBC,GAIZ,mBAAZC,GAkCN,SAA6BA,EAA0BD,GAC5D,IACE,IAAMK,EAAQL,EAAS5N,WAAa,CAAC,EACrC6N,EAAQ7N,UAAY4N,EAAS5N,UAAYiO,EAvBtC,SAAkCnH,EAAa9C,EAAcnD,GAClE,IACEd,OAAOa,eAAekG,EAsBY,sBAtBD,CAE/BjG,MAAOA,EACPG,UAAU,EACVD,cAAc,GAEpB,CAAI,MAAOiN,GAEX,CACA,CAaID,CAAyBF,EAAS,EAAuBD,EAC7D,CAAI,MAAOI,GAAM,CACjB,CAvCIF,CAAoBD,EAASD,GAG/BF,EAAO1J,GAAQ6J,CAXjB,CAYA,CgCLIJ,CAAKpG,GAAWY,QAASG,GAAO,SAAUC,GAGxC,OAFAP,GAAuBM,GAASC,EAEzB,WAAgC,QAAAilB,EAAAxkB,UAAAlF,OAAnB2pB,EAAI,IAAAxiB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA1kB,UAAA0kB,ILGvB,SAAyBxrB,EAA6BsP,GAC3D,IAAMsiB,EAAe5xB,GAAQsxB,GAAStxB,GACtC,GAAK4xB,EAIL,IAAK,IAA6B1F,EAAlCC,gsBAAAC,CAAsBwF,KAAY1F,EAAAC,KAAA9sB,MAAE,KAAzByS,EAAQoa,EAAArtB,MACjB,IACEiT,EAAQxC,EACd,CAAM,MAAOxR,GAMb,CACA,CACA,CKlBQ6zB,CAAgB,UADwB,CAAEpG,KAAAA,EAAMnlB,MAAAA,IAGhD,IAAM4vB,EAAMlwB,GAAuBM,GACnC4vB,GAAOA,EAAIjvB,MAAM1B,GAAWY,QAASslB,EAC7C,CACA,GACA,GACA,CO9Ba,IAAAsQ,GAAsB,CAAC,QAAS,QAAS,UAAW,MAAO,OAAQ,SAoBzE,SAAS40E,GAAwBrqG,GACtC,MAAkB,SAAVA,EAAmB,UAAYy1B,GAAoBtwB,SAASnF,GAASA,EAAQ,KACvF,CxCiCoC,SAAAuE,GAAAC,EAAAC,GACA,IAAA9B,MAAAC,QAAA4B,GACA,SAKA,IAFA,IFyIL1D,EEzIK4D,EAAA,GAEAzM,EAAA,EAAAA,EAAAuM,EAAAhJ,OAAAvD,IAAA,CACA,IAAAQ,EAAA+L,EAAAvM,GACA,IFuIT,iBAFI6I,EE/HKrI,IFiIW,OAARqI,IAAkBA,EAAqBiB,SAAYjB,EAAqBkB,QEhI3E0C,EAAAtJ,KAAA,kBAEAsJ,EAAAtJ,KAAAuJ,OAAAlM,GAEA,OAAAf,GACAgN,EAAAtJ,KAAA,+BACA,CACA,CAEA,OAAAsJ,EAAAxB,KAAAuB,EACA,CuMxEpC,IhLwKwG7I,GACAmT,GgLzKlG+X,GAAmB,iBAgCZwjF,IhLwI2F1uG,GgLvItGkrB,GhLwIsG/X,GgLvKpE,SAAC3M,QAAO,IAAPA,IAAAA,EAAiC,CAAC,GACrE,IAAMmoG,EAASnoG,EAAQmoG,QAAU9qG,GAEjC,MAAO,CACL7D,KAAMkrB,GAENT,UAAS,WAAI,EACbC,MAAK,SAACzQ,GtKhBH,IAA0CnK,EACzC9R,EsKgBI,iBtKjBqC8R,EsKqBV,SAAAmI,GAAqB,IAAlBsR,EAAItR,EAAJsR,KAAMnlB,EAAA6T,EAAA7T,MACpCsa,OAAgBzE,GAAW00F,EAAOplG,SAASnF,IAwBvD,SAAwBmlB,EAAiBnlB,GACvC,IAAMiY,EAAiC,CACrCjY,MAAOqqG,GAAwBrqG,GAC/BwZ,MAAO,CACL9Y,UAAWykB,KtLkIV,WAMP,IAFE,IAAME,EAAMtL,KAEdmL,EAAAxkB,UAAAlF,OALK8tB,EAAI,IAAA3mB,MAAAuiB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJkE,EAAIlE,GAAA1kB,UAAA0kB,GAMP,GAAoB,IAAhBkE,EAAK9tB,OAAc,CACrB,IAAOoa,EAAmB0T,EAAI,GAAhB1pB,EAAY0pB,EAAI,GAC9B,OAAK1T,EAMEyP,EAAI9C,WAAU,WAGnB,OADA8C,EAAInD,cAActM,MAAQA,EACnBhW,EAASgW,EACtB,IARayP,EAAI9C,UAAU3iB,EAS3B,CAGSylB,EAAI9C,UAAU+G,EAAK,GAC5B,CsLtJE/G,EAAU,SAAA3M,GAYR,GAXAA,EAAM4I,mBAAkB,SAAAnW,GAQtB,OAPAA,EAAMlI,OAAS,UrMmCP,SAAAkI,EAAAQ,GACA,IAAAH,EAnDd,SAA2BL,GACzB,OAAOA,EAAMC,WAAaD,EAAMC,UAAUhM,OAAS+L,EAAMC,UAAUhM,OAAO,QAAKwB,CACjF,CAiDcsK,CAAAC,GACA,GAAAK,EAAA,CAIA,IACAI,EAAAJ,EAAAK,UAGA,GAFAL,EAAAK,UAAAxI,EAAA,GAFA,CAAA3G,KAAA,UAAAoP,SAAA,GAEAF,EAAAD,GAEAA,GAAA,SAAAA,EAAA,CACA,IAAAI,EAAA1I,EAAA,GAAAuI,GAAAA,EAAAI,KAAAL,EAAAK,MACAR,EAAAK,UAAAG,KAAAD,CACA,CATA,CAUA,CqM/CRL,CAAsBP,EAAO,CAC3BW,SAAS,EACTpP,KAAM,YAGDyO,CACb,IAEkB,WAAVrI,IAAkC,IAAZmlB,EAAK,GAAc,CAC3C,IAAMjf,EAAA,sBAA+B3B,GAAS4gB,EAAK1oB,MAAM,GAAI,MAAQ,kBAGiB,OAFAmZ,EAAAuJ,SAAA,YAAAgG,EAAA1oB,MAAA,SACA2kB,GAAAlb,EAAA+R,EAEA,CAEA,ItL5C1F3P,EACAyD,EsL2C0FigB,EAAA7G,EAAAywB,MAAA,SAAAz8C,GAAA,OAAAA,aAAAH,KAAA,IACA,aAAAgH,GAAAgsB,EAEA,OtL/C1F1jB,EsL8C0F0jB,EtL7C1FjgB,EsL6C0FkM,OtL1CnF8B,KAAgBD,iBAAiBxR,EFsTnC,SACLyD,GAEA,GAAKA,EAKL,OAaF,SACEA,GAEA,OAAOA,aAAgBoM,IAAyB,mBAATpM,CACzC,CAjBMiO,CAAsBjO,IA+B5B,SAA4BA,GAC1B,OAAOpU,OAAOwE,KAAK4P,GAAM/G,MAAK,SAAA5G,GAAA,OAAOyb,GAAmB1U,SAAS/G,EAA4B,GAC/F,CA7BM6b,CAAmBlO,GAHd,CAAEkM,eAAgBlM,GASpBA,CACT,CEzUqDmO,CAA+BnO,IsL+CQqV,GADA7c,GAAA4gB,EAAA,KACAlN,EACA,GACA,CAxDpFuyF,CAAerlF,EAAMnlB,EAC7B,E3K7BO,SAAoBpG,EAA6B8R,GACtDwf,GAAStxB,GAAQsxB,GAAStxB,IAAS,GAClCsxB,GAAStxB,GAAsCwB,KAAKsQ,EACvD,CKCE0f,CADMxxB,EAAO,UACI8R,GLYZ,SAAyB9R,EAA6B0xB,GACtDH,GAAavxB,KAChB0xB,IACAH,GAAavxB,IAAQ,EAEzB,CKhBEyxB,CAAgBzxB,EAAM+1B,IsKyBxB,EAEA,EhLoJwGh4B,OAAA6I,QACA,WACA,OAAAuO,GAAApO,WAAA,EAAAD,UACA,GACA,CAAA3C,GAAAnC,MiLhLlGwa,GAAe,CACnB,IAAIkS,GACJ,IAAIM,GACJ,IAAIwB,GACJ,IAAI2E,GAAe,CACjBnD,SAAS,EACTU,sBAAsB,IAExB,IAAI4K,GAAY,CACdr3B,SAAS,EACTs2B,KAAK,EACL/C,OAAO,EACP4B,SAAS,EACTjQ,QAAQ,EACRyF,KAAK,IAEP,IAAI+N,GAAa,CACfn6B,IAAK,QACLm5B,MAAO,IAET,IAAIqB,IAIJxiB,GAAahb,KAAK,IAAIg6C,IAItBh/B,GAAahb,KAAK,IAAIqvG,IAyCxBnsG,OAAOosG,OAAS,CAAEC,aAtCG,SAACC,GAAM,OAC1B,IAAI/F,GAAc,CAChBl7D,IAAKihE,EAAOjhE,IAEZ0M,UAAWovD,GACX1uF,YAAawwF,GAGbh5F,YAAaq8F,EAAOr8F,YACpBD,QAASs8F,EAAOt8F,QAEhB4yC,WAAY,SAAC74C,GAAU,IAAAwiG,EAiBrB,OAhBAxiG,EAAMlI,OAAS,aAEXyqG,EAAOE,aAAyB,OAAdD,EAAIxiG,EAAMoF,OAANo9F,EAAYh9F,cAC7BxF,EAAMoF,KAAKI,MAGhB+8F,EAAOG,cAAgB1iG,EAAMC,WAC/BkhG,GAAiB,CAAEhhG,QAASH,EAAMI,SAAUgF,KAAMi9F,OAAOM,YAAY,UAInEJ,EAAO51F,OACJ3M,EAAM2M,OAAM3M,EAAM2M,KAAO,CAAC,GAC/Brd,OAAO6I,OAAO6H,EAAM2M,KAAM41F,EAAO51F,OAG5B3M,CACT,EAEAs6B,iBAAkBioE,EAAOjoE,iBACzB8hE,yBAA0BmG,EAAOnG,yBACjCC,yBAA0BkG,EAAOlG,yBAEjCtuF,aAAc,GAAAS,OAAIT,GAAc,CAAAw0F,EAAOK,gBAAkB,IAAIX,KAAkB1mG,OAAOjC,UACtF,EAE4BoY,cAAAA,GAAeyvF,iBAAAA,IAE/ClrG,OAAOosG,OAAOM,YAAc,SAACE,QAAQ,IAARA,IAAAA,EAAW,YAEtC,IAAIC,EAAW,CAAC,EAGhB,GAAIr2E,IAAK,KAAAs2E,EAGoCC,EAFrC59F,EAAkB,OAAd29F,EAAGt2E,IAAAA,cAAW,EAAXs2E,EAAa39F,KAEtBqnB,IAAAA,SAAernB,GAAqB,GAAbA,EAAK1P,OACtBstG,EAAG,CACT19F,WAAY,WACZ5P,GAAI0P,EAAK1P,OACRmtG,GAAWz9F,EAAKK,WAHnBq9F,EAG6BE,EAGxBv2E,IAAAA,KAAS,6BACZq2E,EAASt9F,MAAQJ,EAAKI,UAEfinB,IAAAA,KAASvnB,SAAsC,GAA3BunB,IAAAA,KAASvnB,QAAQ+9F,SAC9CH,EAAW,CACTptG,GAAI+2B,IAAAA,KAASvnB,QAAQ+9F,QAG3B,CAEA,OAAOH,CACT,EAEAr2E,IAAAA,aAAiB5kB,IAAI,cAAc,WACjC6J,KAAgB0E,QAAQisF,OAAOM,cACjC","sources":["webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../src/baggage.ts","webpack://@fof/sentry/../../src/tracing.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/tracing/spanstatus.ts","webpack://@fof/sentry/../../../src/tracing/span.ts","webpack://@fof/sentry/../../../src/utils/hasTracingEnabled.ts","webpack://@fof/sentry/../../../src/tracing/trace.ts","webpack://@fof/sentry/../../../src/tracing/transaction.ts","webpack://@fof/sentry/../../../src/tracing/idletransaction.ts","webpack://@fof/sentry/../../../src/tracing/utils.ts","webpack://@fof/sentry/../../../src/tracing/errors.ts","webpack://@fof/sentry/../../../src/tracing/sampling.ts","webpack://@fof/sentry/../../../src/tracing/hubextensions.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../../../../src/browser/web-vitals/lib/polyfills/interactionCountPolyfill.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getINP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/onTTFB.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getCLS.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getFID.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../src/span.ts","webpack://@fof/sentry/../../../../src/browser/metrics/utils.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://@fof/sentry/../../../../src/browser/metrics/index.ts","webpack://@fof/sentry/../../../src/browser/request.ts","webpack://@fof/sentry/../../../src/common/fetch.ts","webpack://@fof/sentry/../../../src/browser/browsertracing.ts","webpack://@fof/sentry/../../../src/browser/router.ts","webpack://@fof/sentry/../../../src/browser/backgroundtab.ts","webpack://@fof/sentry/../../../src/tracing/measurement.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return r;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    r = {},\n    e = Object.prototype,\n    n = e.hasOwnProperty,\n    o = \"function\" == typeof Symbol ? Symbol : {},\n    i = o.iterator || \"@@iterator\",\n    a = o.asyncIterator || \"@@asyncIterator\",\n    u = o.toStringTag || \"@@toStringTag\";\n  function c(t, r, e, n) {\n    return Object.defineProperty(t, r, {\n      value: e,\n      enumerable: !n,\n      configurable: !n,\n      writable: !n\n    });\n  }\n  try {\n    c({}, \"\");\n  } catch (t) {\n    c = function c(t, r, e) {\n      return t[r] = e;\n    };\n  }\n  function h(r, e, n, o) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype);\n    return c(a, \"_invoke\", function (r, e, n) {\n      var o = 1;\n      return function (i, a) {\n        if (3 === o) throw Error(\"Generator is already running\");\n        if (4 === o) {\n          if (\"throw\" === i) throw a;\n          return {\n            value: t,\n            done: !0\n          };\n        }\n        for (n.method = i, n.arg = a;;) {\n          var u = n.delegate;\n          if (u) {\n            var c = d(u, n);\n            if (c) {\n              if (c === f) continue;\n              return c;\n            }\n          }\n          if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n            if (1 === o) throw o = 4, n.arg;\n            n.dispatchException(n.arg);\n          } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n          o = 3;\n          var h = s(r, e, n);\n          if (\"normal\" === h.type) {\n            if (o = n.done ? 4 : 2, h.arg === f) continue;\n            return {\n              value: h.arg,\n              done: n.done\n            };\n          }\n          \"throw\" === h.type && (o = 4, n.method = \"throw\", n.arg = h.arg);\n        }\n      };\n    }(r, n, new Context(o || [])), !0), a;\n  }\n  function s(t, r, e) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(r, e)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  r.wrap = h;\n  var f = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var l = {};\n  c(l, i, function () {\n    return this;\n  });\n  var p = Object.getPrototypeOf,\n    y = p && p(p(x([])));\n  y && y !== e && n.call(y, i) && (l = y);\n  var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l);\n  function g(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (r) {\n      c(t, r, function (t) {\n        return this._invoke(r, t);\n      });\n    });\n  }\n  function AsyncIterator(t, r) {\n    function e(o, i, a, u) {\n      var c = s(t[o], t, i);\n      if (\"throw\" !== c.type) {\n        var h = c.arg,\n          f = h.value;\n        return f && \"object\" == _typeof(f) && n.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) {\n          e(\"next\", t, a, u);\n        }, function (t) {\n          e(\"throw\", t, a, u);\n        }) : r.resolve(f).then(function (t) {\n          h.value = t, a(h);\n        }, function (t) {\n          return e(\"throw\", t, a, u);\n        });\n      }\n      u(c.arg);\n    }\n    var o;\n    c(this, \"_invoke\", function (t, n) {\n      function i() {\n        return new r(function (r, o) {\n          e(t, n, r, o);\n        });\n      }\n      return o = o ? o.then(i, i) : i();\n    }, !0);\n  }\n  function d(r, e) {\n    var n = e.method,\n      o = r.i[n];\n    if (o === t) return e.delegate = null, \"throw\" === n && r.i[\"return\"] && (e.method = \"return\", e.arg = t, d(r, e), \"throw\" === e.method) || \"return\" !== n && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), f;\n    var i = s(o, r.i, e.arg);\n    if (\"throw\" === i.type) return e.method = \"throw\", e.arg = i.arg, e.delegate = null, f;\n    var a = i.arg;\n    return a ? a.done ? (e[r.r] = a.value, e.next = r.n, \"return\" !== e.method && (e.method = \"next\", e.arg = t), e.delegate = null, f) : a : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f);\n  }\n  function w(t) {\n    this.tryEntries.push(t);\n  }\n  function m(r) {\n    var e = r[4] || {};\n    e.type = \"normal\", e.arg = t, r[4] = e;\n  }\n  function Context(t) {\n    this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0);\n  }\n  function x(r) {\n    if (null != r) {\n      var e = r[i];\n      if (e) return e.call(r);\n      if (\"function\" == typeof r.next) return r;\n      if (!isNaN(r.length)) {\n        var o = -1,\n          a = function e() {\n            for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e;\n            return e.value = t, e.done = !0, e;\n          };\n        return a.next = a;\n      }\n    }\n    throw new TypeError(_typeof(r) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, \"constructor\", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), r.isGeneratorFunction = function (t) {\n    var r = \"function\" == typeof t && t.constructor;\n    return !!r && (r === GeneratorFunction || \"GeneratorFunction\" === (r.displayName || r.name));\n  }, r.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, \"GeneratorFunction\")), t.prototype = Object.create(v), t;\n  }, r.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () {\n    return this;\n  }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(h(t, e, n, o), i);\n    return r.isGeneratorFunction(e) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, g(v), c(v, u, \"Generator\"), c(v, i, function () {\n    return this;\n  }), c(v, \"toString\", function () {\n    return \"[object Generator]\";\n  }), r.keys = function (t) {\n    var r = Object(t),\n      e = [];\n    for (var n in r) e.unshift(n);\n    return function t() {\n      for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t;\n      return t.done = !0, t;\n    };\n  }, r.values = x, Context.prototype = {\n    constructor: Context,\n    reset: function reset(r) {\n      if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0][4];\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(r) {\n      if (this.done) throw r;\n      var e = this;\n      function n(t) {\n        a.type = \"throw\", a.arg = r, e.next = t;\n      }\n      for (var o = e.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i[4],\n          u = this.prev,\n          c = i[1],\n          h = i[2];\n        if (-1 === i[0]) return n(\"end\"), !1;\n        if (!c && !h) throw Error(\"try statement without catch or finally\");\n        if (null != i[0] && i[0] <= u) {\n          if (u < c) return this.method = \"next\", this.arg = t, n(c), !0;\n          if (u < h) return n(h), !1;\n        }\n      }\n    },\n    abrupt: function abrupt(t, r) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var n = this.tryEntries[e];\n        if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) {\n          var o = n;\n          break;\n        }\n      }\n      o && (\"break\" === t || \"continue\" === t) && o[0] <= r && r <= o[2] && (o = null);\n      var i = o ? o[4] : {};\n      return i.type = t, i.arg = r, o ? (this.method = \"next\", this.next = o[2], f) : this.complete(i);\n    },\n    complete: function complete(t, r) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && r && (this.next = r), f;\n    },\n    finish: function finish(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[2] === t) return this.complete(e[4], e[3]), m(e), f;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[0] === t) {\n          var n = e[4];\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            m(e);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(r, e, n) {\n      return this.delegate = {\n        i: x(r),\n        r: e,\n        n: n\n      }, \"next\" === this.method && (this.arg = t), f;\n    }\n  }, r;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { DynamicSamplingContext } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { isString } from './is';\nimport { logger } from './logger';\n\nexport const BAGGAGE_HEADER_NAME = 'baggage';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nexport const SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nexport const MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nexport function baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader: string | string[] | number | null | undefined | boolean,\n): Partial<DynamicSamplingContext> | undefined {\n  if (!isString(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject: Readonly<Record<string, string>> = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce<Record<string, string>>((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      for (const key of Object.keys(currBaggageObject)) {\n        acc[key] = currBaggageObject[key];\n      }\n      return acc;\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce<Record<string, string>>((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext as Partial<DynamicSamplingContext>;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nexport function dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext?: Partial<DynamicSamplingContext>,\n): string | undefined {\n  if (!dynamicSamplingContext) {\n    return undefined;\n  }\n\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce<Record<string, string>>(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader: string): Record<string, string> {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce<Record<string, string>>((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object: Record<string, string>): string | undefined {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n","import type { PropagationContext, TraceparentData } from '@sentry/types';\n\nimport { baggageHeaderToDynamicSamplingContext } from './baggage';\nimport { uuid4 } from './misc';\n\n// eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor -- RegExp is used for readability here\nexport const TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nexport function extractTraceparentData(traceparent?: string): TraceparentData | undefined {\n  if (!traceparent) {\n    return undefined;\n  }\n\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n  if (!matches) {\n    return undefined;\n  }\n\n  let parentSampled: boolean | undefined;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n/**\n * Create tracing context from incoming headers.\n *\n * @deprecated Use `propagationContextFromHeaders` instead.\n */\n// TODO(v8): Remove this function\nexport function tracingContextFromHeaders(\n  sentryTrace: Parameters<typeof extractTraceparentData>[0],\n  baggage: Parameters<typeof baggageHeaderToDynamicSamplingContext>[0],\n): {\n  traceparentData: ReturnType<typeof extractTraceparentData>;\n  dynamicSamplingContext: ReturnType<typeof baggageHeaderToDynamicSamplingContext>;\n  propagationContext: PropagationContext;\n} {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceparentData,\n      dynamicSamplingContext: undefined,\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        spanId: uuid4().substring(16),\n      },\n    };\n  } else {\n    return {\n      traceparentData,\n      dynamicSamplingContext: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      propagationContext: {\n        traceId: traceId || uuid4(),\n        parentSpanId: parentSpanId || uuid4().substring(16),\n        spanId: uuid4().substring(16),\n        sampled: parentSampled,\n        dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n      },\n    };\n  }\n}\n\n/**\n * Create a propagation context from incoming headers.\n */\nexport function propagationContextFromHeaders(\n  sentryTrace: string | undefined,\n  baggage: string | number | boolean | string[] | null | undefined,\n): PropagationContext {\n  const traceparentData = extractTraceparentData(sentryTrace);\n  const dynamicSamplingContext = baggageHeaderToDynamicSamplingContext(baggage);\n\n  const { traceId, parentSpanId, parentSampled } = traceparentData || {};\n\n  if (!traceparentData) {\n    return {\n      traceId: traceId || uuid4(),\n      spanId: uuid4().substring(16),\n    };\n  } else {\n    return {\n      traceId: traceId || uuid4(),\n      parentSpanId: parentSpanId || uuid4().substring(16),\n      spanId: uuid4().substring(16),\n      sampled: parentSampled,\n      dsc: dynamicSamplingContext || {}, // If we have traceparent data but no DSC it means we are not head of trace and we must freeze it\n    };\n  }\n}\n\n/**\n * Create sentry-trace header from span context values.\n */\nexport function generateSentryTraceHeader(\n  traceId: string = uuid4(),\n  spanId: string = uuid4().substring(16),\n  sampled?: boolean,\n): string {\n  let sampledString = '';\n  if (sampled !== undefined) {\n    sampledString = sampled ? '-1' : '-0';\n  }\n  return `${traceId}-${spanId}${sampledString}`;\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","export const SDK_VERSION = '7.120.3';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import type { Span } from '@sentry/types';\n\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\nexport enum SpanStatus {\n  /** The operation completed successfully. */\n  Ok = 'ok',\n  /** Deadline expired before operation could complete. */\n  DeadlineExceeded = 'deadline_exceeded',\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  Unauthenticated = 'unauthenticated',\n  /** 403 Forbidden */\n  PermissionDenied = 'permission_denied',\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  NotFound = 'not_found',\n  /** 429 Too Many Requests */\n  ResourceExhausted = 'resource_exhausted',\n  /** Client specified an invalid argument. 4xx. */\n  InvalidArgument = 'invalid_argument',\n  /** 501 Not Implemented */\n  Unimplemented = 'unimplemented',\n  /** 503 Service Unavailable */\n  Unavailable = 'unavailable',\n  /** Other/generic 5xx. */\n  InternalError = 'internal_error',\n  /** Unknown. Any non-standard HTTP status code. */\n  UnknownError = 'unknown_error',\n  /** The operation was cancelled (typically by the user). */\n  Cancelled = 'cancelled',\n  /** Already exists (409) */\n  AlreadyExists = 'already_exists',\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  FailedPrecondition = 'failed_precondition',\n  /** The operation was aborted, typically due to a concurrency issue. */\n  Aborted = 'aborted',\n  /** Operation was attempted past the valid range. */\n  OutOfRange = 'out_of_range',\n  /** Unrecoverable data loss or corruption */\n  DataLoss = 'data_loss',\n}\n\nexport type SpanStatusType =\n  /** The operation completed successfully. */\n  | 'ok'\n  /** Deadline expired before operation could complete. */\n  | 'deadline_exceeded'\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  | 'unauthenticated'\n  /** 403 Forbidden */\n  | 'permission_denied'\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  | 'not_found'\n  /** 429 Too Many Requests */\n  | 'resource_exhausted'\n  /** Client specified an invalid argument. 4xx. */\n  | 'invalid_argument'\n  /** 501 Not Implemented */\n  | 'unimplemented'\n  /** 503 Service Unavailable */\n  | 'unavailable'\n  /** Other/generic 5xx. */\n  | 'internal_error'\n  /** Unknown. Any non-standard HTTP status code. */\n  | 'unknown_error'\n  /** The operation was cancelled (typically by the user). */\n  | 'cancelled'\n  /** Already exists (409) */\n  | 'already_exists'\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  | 'failed_precondition'\n  /** The operation was aborted, typically due to a concurrency issue. */\n  | 'aborted'\n  /** Operation was attempted past the valid range. */\n  | 'out_of_range'\n  /** Unrecoverable data loss or corruption */\n  | 'data_loss';\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport function getSpanStatusFromHttpCode(httpStatus: number): SpanStatusType {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @deprecated Use {@link spanStatusFromHttpCode} instead.\n * This export will be removed in v8 as the signature contains a typo.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nexport const spanStatusfromHttpCode = getSpanStatusFromHttpCode;\n\n/**\n * Sets the Http status attributes on the current span based on the http code.\n * Additionally, the span's status is updated, depending on the http code.\n */\nexport function setHttpStatus(span: Span, httpStatus: number): void {\n  // TODO (v8): Remove these calls\n  // Relay does not require us to send the status code as a tag\n  // For now, just because users might expect it to land as a tag we keep sending it.\n  // Same with data.\n  // In v8, we replace both, simply with\n  // span.setAttribute('http.response.status_code', httpStatus);\n\n  // eslint-disable-next-line deprecation/deprecation\n  span.setTag('http.status_code', String(httpStatus));\n  // eslint-disable-next-line deprecation/deprecation\n  span.setData('http.response.status_code', httpStatus);\n\n  const spanStatus = getSpanStatusFromHttpCode(httpStatus);\n  if (spanStatus !== 'unknown_error') {\n    span.setStatus(spanStatus);\n  }\n}\n","/* eslint-disable max-lines */\nimport type {\n  Instrumenter,\n  Measurements,\n  Primitive,\n  Span as SpanInterface,\n  SpanAttributeValue,\n  SpanAttributes,\n  SpanContext,\n  SpanContextData,\n  SpanJSON,\n  SpanOrigin,\n  SpanTimeInput,\n  TraceContext,\n  Transaction,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport {\n  SEMANTIC_ATTRIBUTE_PROFILE_ID,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n} from '../semanticAttributes';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport {\n  TRACE_FLAG_NONE,\n  TRACE_FLAG_SAMPLED,\n  spanTimeInputToSeconds,\n  spanToJSON,\n  spanToTraceContext,\n  spanToTraceHeader,\n} from '../utils/spanUtils';\nimport type { SpanStatusType } from './spanstatus';\nimport { setHttpStatus } from './spanstatus';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nexport class SpanRecorder {\n  public spans: Span[];\n\n  private readonly _maxlen: number;\n\n  public constructor(maxlen: number = 1000) {\n    this._maxlen = maxlen;\n    this.spans = [];\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n  public add(span: Span): void {\n    if (this.spans.length > this._maxlen) {\n      // eslint-disable-next-line deprecation/deprecation\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nexport class Span implements SpanInterface {\n  /**\n   * Tags for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public tags: { [key: string]: Primitive };\n\n  /**\n   * Data for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public data: { [key: string]: any };\n\n  /**\n   * List of spans that were finalized\n   *\n   * @deprecated This property will no longer be public. Span recording will be handled internally.\n   */\n  public spanRecorder?: SpanRecorder;\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `Sentry.getRootSpan()` instead\n   */\n  public transaction?: Transaction;\n\n  /**\n   * The instrumenter that created this span.\n   *\n   * TODO (v8): This can probably be replaced by an `instanceOf` check of the span class.\n   *            the instrumenter can only be sentry or otel so we can check the span instance\n   *            to verify which one it is and remove this field entirely.\n   *\n   * @deprecated This field will be removed.\n   */\n  public instrumenter: Instrumenter;\n\n  protected _traceId: string;\n  protected _spanId: string;\n  protected _parentSpanId?: string | undefined;\n  protected _sampled: boolean | undefined;\n  protected _name?: string | undefined;\n  protected _attributes: SpanAttributes;\n  /** Epoch timestamp in seconds when the span started. */\n  protected _startTime: number;\n  /** Epoch timestamp in seconds when the span ended. */\n  protected _endTime?: number | undefined;\n  /** Internal keeper of the status */\n  protected _status?: SpanStatusType | string | undefined;\n  protected _exclusiveTime?: number;\n\n  protected _measurements: Measurements;\n\n  private _logMessage?: string;\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n  public constructor(spanContext: SpanContext = {}) {\n    this._traceId = spanContext.traceId || uuid4();\n    this._spanId = spanContext.spanId || uuid4().substring(16);\n    this._startTime = spanContext.startTimestamp || timestampInSeconds();\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags ? { ...spanContext.tags } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data ? { ...spanContext.data } : {};\n    // eslint-disable-next-line deprecation/deprecation\n    this.instrumenter = spanContext.instrumenter || 'sentry';\n\n    this._attributes = {};\n    this.setAttributes({\n      [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanContext.origin || 'manual',\n      [SEMANTIC_ATTRIBUTE_SENTRY_OP]: spanContext.op,\n      ...spanContext.attributes,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n\n    if (spanContext.parentSpanId) {\n      this._parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this._sampled = spanContext.sampled;\n    }\n    if (spanContext.status) {\n      this._status = spanContext.status;\n    }\n    if (spanContext.endTimestamp) {\n      this._endTime = spanContext.endTimestamp;\n    }\n    if (spanContext.exclusiveTime !== undefined) {\n      this._exclusiveTime = spanContext.exclusiveTime;\n    }\n    this._measurements = spanContext.measurements ? { ...spanContext.measurements } : {};\n  }\n\n  // This rule conflicts with another eslint rule :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * An alias for `description` of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name || '';\n  }\n\n  /**\n   * Update the name of the span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set name(name: string) {\n    this.updateName(name);\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get description(): string | undefined {\n    return this._name;\n  }\n\n  /**\n   * Get the description of the Span.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public set description(description: string | undefined) {\n    this._name = description;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated Use `spanContext().traceId` instead.\n   */\n  public get traceId(): string {\n    return this._traceId;\n  }\n\n  /**\n   * The ID of the trace.\n   * @deprecated You cannot update the traceId of a span after span creation.\n   */\n  public set traceId(traceId: string) {\n    this._traceId = traceId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated Use `spanContext().spanId` instead.\n   */\n  public get spanId(): string {\n    return this._spanId;\n  }\n\n  /**\n   * The ID of the span.\n   * @deprecated You cannot update the spanId of a span after span creation.\n   */\n  public set spanId(spanId: string) {\n    this._spanId = spanId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `startSpan` functions instead.\n   */\n  public set parentSpanId(string) {\n    this._parentSpanId = string;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).parent_span_id` instead.\n   */\n  public get parentSpanId(): string | undefined {\n    return this._parentSpanId;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated Use `isRecording()` instead.\n   */\n  public get sampled(): boolean | undefined {\n    return this._sampled;\n  }\n\n  /**\n   * Was this span chosen to be sent as part of the sample?\n   * @deprecated You cannot update the sampling decision of a span after span creation.\n   */\n  public set sampled(sampled: boolean | undefined) {\n    this._sampled = sampled;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `spanToJSON(span).atttributes` instead.\n   */\n  public get attributes(): SpanAttributes {\n    return this._attributes;\n  }\n\n  /**\n   * Attributes for the span.\n   * @deprecated Use `setAttributes()` instead.\n   */\n  public set attributes(attributes: SpanAttributes) {\n    this._attributes = attributes;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get startTimestamp(): number {\n    return this._startTime;\n  }\n\n  /**\n   * Timestamp in seconds (epoch time) indicating when the span started.\n   * @deprecated In v8, you will not be able to update the span start time after creation.\n   */\n  public set startTimestamp(startTime: number) {\n    this._startTime = startTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Use `spanToJSON()` instead.\n   */\n  public get endTimestamp(): number | undefined {\n    return this._endTime;\n  }\n\n  /**\n   * Timestamp in seconds when the span ended.\n   * @deprecated Set the end time via `span.end()` instead.\n   */\n  public set endTimestamp(endTime: number | undefined) {\n    this._endTime = endTime;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `spanToJSON().status` instead to get the status.\n   */\n  public get status(): SpanStatusType | string | undefined {\n    return this._status;\n  }\n\n  /**\n   * The status of the span.\n   *\n   * @deprecated Use `.setStatus()` instead to set or update the status.\n   */\n  public set status(status: SpanStatusType | string | undefined) {\n    this._status = status;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `spanToJSON().op` to read the op instead.\n   */\n  public get op(): string | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined;\n  }\n\n  /**\n   * Operation of the span\n   *\n   * @deprecated Use `startSpan()` functions to set or `span.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, 'op')\n   *             to update the span instead.\n   */\n  public set op(op: string | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_OP, op);\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `spanToJSON().origin` to read the origin instead.\n   */\n  public get origin(): SpanOrigin | undefined {\n    return this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined;\n  }\n\n  /**\n   * The origin of the span, giving context about what created the span.\n   *\n   * @deprecated Use `startSpan()` functions to set the origin instead.\n   */\n  public set origin(origin: SpanOrigin | undefined) {\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, origin);\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /** @inheritdoc */\n  public spanContext(): SpanContextData {\n    const { _spanId: spanId, _traceId: traceId, _sampled: sampled } = this;\n    return {\n      spanId,\n      traceId,\n      traceFlags: sampled ? TRACE_FLAG_SAMPLED : TRACE_FLAG_NONE,\n    };\n  }\n\n  /**\n   * Creates a new `Span` while setting the current `Span.id` as `parentSpanId`.\n   * Also the `sampled` decision will be inherited.\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startChild(\n    spanContext?: Pick<SpanContext, Exclude<keyof SpanContext, 'sampled' | 'traceId' | 'parentSpanId'>>,\n  ): SpanInterface {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this._spanId,\n      sampled: this._sampled,\n      traceId: this._traceId,\n    });\n\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.spanRecorder = this.spanRecorder;\n    // eslint-disable-next-line deprecation/deprecation\n    if (childSpan.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    const rootSpan = getRootSpan(this);\n    // TODO: still set span.transaction here until we have a more permanent solution\n    // Probably similarly to the weakmap we hold in node-experimental\n    // eslint-disable-next-line deprecation/deprecation\n    childSpan.transaction = rootSpan as Transaction;\n\n    if (DEBUG_BUILD && rootSpan) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = spanToJSON(childSpan).description || '< unknown name >';\n      const idStr = rootSpan.spanContext().spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      logger.log(logMessage);\n      this._logMessage = logMessage;\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * Sets the tag attribute on the current span.\n   *\n   * Can also be used to unset a tag, by passing `undefined`.\n   *\n   * @param key Tag key\n   * @param value Tag value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  public setTag(key: string, value: Primitive): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * Sets the data attribute on the current span\n   * @param key Data key\n   * @param value Data value\n   * @deprecated Use `setAttribute()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setData(key: string, value: any): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /** @inheritdoc */\n  public setAttribute(key: string, value: SpanAttributeValue | undefined): void {\n    if (value === undefined) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._attributes[key];\n    } else {\n      this._attributes[key] = value;\n    }\n  }\n\n  /** @inheritdoc */\n  public setAttributes(attributes: SpanAttributes): void {\n    Object.keys(attributes).forEach(key => this.setAttribute(key, attributes[key]));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setStatus(value: SpanStatusType): this {\n    this._status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top-level `setHttpStatus()` instead.\n   */\n  public setHttpStatus(httpStatus: number): this {\n    setHttpStatus(this, httpStatus);\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @deprecated Use `.updateName()` instead.\n   */\n  public setName(name: string): void {\n    this.updateName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON(span).status === 'ok'` instead.\n   */\n  public isSuccess(): boolean {\n    return this._status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `.end()` instead.\n   */\n  public finish(endTimestamp?: number): void {\n    return this.end(endTimestamp);\n  }\n\n  /** @inheritdoc */\n  public end(endTimestamp?: SpanTimeInput): void {\n    // If already ended, skip\n    if (this._endTime) {\n      return;\n    }\n    const rootSpan = getRootSpan(this);\n    if (\n      DEBUG_BUILD &&\n      // Don't call this for transactions\n      rootSpan &&\n      rootSpan.spanContext().spanId !== this._spanId\n    ) {\n      const logMessage = this._logMessage;\n      if (logMessage) {\n        logger.log((logMessage as string).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this._endTime = spanTimeInputToSeconds(endTimestamp);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public toTraceparent(): string {\n    return spanToTraceHeader(this);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToJSON()` or access the fields directly instead.\n   */\n  public toContext(): SpanContext {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      endTimestamp: this._endTime,\n      // eslint-disable-next-line deprecation/deprecation\n      op: this.op,\n      parentSpanId: this._parentSpanId,\n      sampled: this._sampled,\n      spanId: this._spanId,\n      startTimestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      traceId: this._traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Update the fields directly instead.\n   */\n  public updateWithContext(spanContext: SpanContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    this.data = spanContext.data || {};\n    // eslint-disable-next-line deprecation/deprecation\n    this._name = spanContext.name || spanContext.description;\n    this._endTime = spanContext.endTimestamp;\n    // eslint-disable-next-line deprecation/deprecation\n    this.op = spanContext.op;\n    this._parentSpanId = spanContext.parentSpanId;\n    this._sampled = spanContext.sampled;\n    this._spanId = spanContext.spanId || this._spanId;\n    this._startTime = spanContext.startTimestamp || this._startTime;\n    this._status = spanContext.status;\n    // eslint-disable-next-line deprecation/deprecation\n    this.tags = spanContext.tags || {};\n    this._traceId = spanContext.traceId || this._traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `spanToTraceContext()` util function instead.\n   */\n  public getTraceContext(): TraceContext {\n    return spanToTraceContext(this);\n  }\n\n  /**\n   * Get JSON representation of this span.\n   *\n   * @hidden\n   * @internal This method is purely for internal purposes and should not be used outside\n   * of SDK code. If you need to get a JSON representation of a span,\n   * use `spanToJSON(span)` instead.\n   */\n  public getSpanJSON(): SpanJSON {\n    return dropUndefinedKeys({\n      data: this._getData(),\n      description: this._name,\n      op: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_OP] as string | undefined,\n      parent_span_id: this._parentSpanId,\n      span_id: this._spanId,\n      start_timestamp: this._startTime,\n      status: this._status,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this._endTime,\n      trace_id: this._traceId,\n      origin: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN] as SpanOrigin | undefined,\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      profile_id: this._attributes[SEMANTIC_ATTRIBUTE_PROFILE_ID] as string | undefined,\n      exclusive_time: this._exclusiveTime,\n      measurements: Object.keys(this._measurements).length > 0 ? this._measurements : undefined,\n    });\n  }\n\n  /** @inheritdoc */\n  public isRecording(): boolean {\n    return !this._endTime && !!this._sampled;\n  }\n\n  /**\n   * Convert the object to JSON.\n   * @deprecated Use `spanToJSON(span)` instead.\n   */\n  public toJSON(): SpanJSON {\n    return this.getSpanJSON();\n  }\n\n  /**\n   * Get the merged data for this span.\n   * For now, this combines `data` and `attributes` together,\n   * until eventually we can ingest `attributes` directly.\n   */\n  private _getData():\n    | {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [key: string]: any;\n      }\n    | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const { data, _attributes: attributes } = this;\n\n    const hasData = Object.keys(data).length > 0;\n    const hasAttributes = Object.keys(attributes).length > 0;\n\n    if (!hasData && !hasAttributes) {\n      return undefined;\n    }\n\n    if (hasData && hasAttributes) {\n      return {\n        ...data,\n        ...attributes,\n      };\n    }\n\n    return hasData ? data : attributes;\n  }\n}\n","import type { Options } from '@sentry/types';\n\nimport { getClient } from '../exports';\n\n// Treeshakable guard to remove all code related to tracing\ndeclare const __SENTRY_TRACING__: boolean | undefined;\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nexport function hasTracingEnabled(\n  maybeOptions?: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'> | undefined,\n): boolean {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n","import type { Scope, Span, SpanTimeInput, StartSpanOptions, TransactionContext } from '@sentry/types';\n\nimport { addNonEnumerableProperty, dropUndefinedKeys, logger, tracingContextFromHeaders } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '.';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { getCurrentScope, withScope } from '../exports';\nimport type { Hub } from '../hub';\nimport { runWithAsyncContext } from '../hub';\nimport { getIsolationScope } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport type { Scope as ScopeClass } from '../scope';\nimport { handleCallbackErrors } from '../utils/handleCallbackErrors';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanIsSampled, spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n *\n * This function is meant to be used internally and may break at any time. Use at your own risk.\n *\n * @internal\n * @private\n *\n * @deprecated Use `startSpan` instead.\n */\nexport function trace<T>(\n  context: TransactionContext,\n  callback: (span?: Span) => T,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onError: (error: unknown, span?: Span) => void = () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  afterFinish: () => void = () => {},\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const scope = getCurrentScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const parentSpan = scope.getSpan();\n\n  const spanContext = normalizeContext(context);\n  const activeSpan = createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: false,\n    scope,\n  });\n\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(activeSpan);\n\n  return handleCallbackErrors(\n    () => callback(activeSpan),\n    error => {\n      activeSpan && activeSpan.setStatus('internal_error');\n      onError(error, activeSpan);\n    },\n    () => {\n      activeSpan && activeSpan.end();\n      // eslint-disable-next-line deprecation/deprecation\n      scope.setSpan(parentSpan);\n      afterFinish();\n    },\n  );\n}\n\n/**\n * Wraps a function with a transaction/span and finishes the span after the function is done.\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getSpan()`, as long as the function is executed while the scope is active.\n *\n * If you want to create a span that is not set as active, use {@link startInactiveSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpan<T>(context: StartSpanOptions, callback: (span: Span | undefined) => T): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      return handleCallbackErrors(\n        () => callback(activeSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet\n          if (activeSpan) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n        () => activeSpan && activeSpan.end(),\n      );\n    });\n  });\n}\n\n/**\n * @deprecated Use {@link startSpan} instead.\n */\nexport const startActiveSpan = startSpan;\n\n/**\n * Similar to `Sentry.startSpan`. Wraps a function with a transaction/span, but does not finish the span\n * after the function is done automatically. You'll have to call `span.end()` manually.\n *\n * The created span is the active span and will be used as parent by other spans created inside the function\n * and can be accessed via `Sentry.getActiveSpan()`, as long as the function is executed while the scope is active.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startSpanManual<T>(\n  context: StartSpanOptions,\n  callback: (span: Span | undefined, finish: () => void) => T,\n): T {\n  const spanContext = normalizeContext(context);\n\n  return runWithAsyncContext(() => {\n    return withScope(context.scope, scope => {\n      // eslint-disable-next-line deprecation/deprecation\n      const hub = getCurrentHub();\n      // eslint-disable-next-line deprecation/deprecation\n      const parentSpan = scope.getSpan();\n\n      const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n      const activeSpan = shouldSkipSpan\n        ? undefined\n        : createChildSpanOrTransaction(hub, {\n            parentSpan,\n            spanContext,\n            forceTransaction: context.forceTransaction,\n            scope,\n          });\n\n      function finishAndSetSpan(): void {\n        activeSpan && activeSpan.end();\n      }\n\n      return handleCallbackErrors(\n        () => callback(activeSpan, finishAndSetSpan),\n        () => {\n          // Only update the span status if it hasn't been changed yet, and the span is not yet finished\n          if (activeSpan && activeSpan.isRecording()) {\n            const { status } = spanToJSON(activeSpan);\n            if (!status || status === 'ok') {\n              activeSpan.setStatus('internal_error');\n            }\n          }\n        },\n      );\n    });\n  });\n}\n\n/**\n * Creates a span. This span is not set as active, so will not get automatic instrumentation spans\n * as children or be able to be accessed via `Sentry.getSpan()`.\n *\n * If you want to create a span that is set as active, use {@link startSpan}.\n *\n * Note that if you have not enabled tracing extensions via `addTracingExtensions`\n * or you didn't set `tracesSampleRate` or `tracesSampler`, this function will not generate spans\n * and the `span` returned from the callback will be undefined.\n */\nexport function startInactiveSpan(context: StartSpanOptions): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const spanContext = normalizeContext(context);\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n  const parentSpan = context.scope\n    ? // eslint-disable-next-line deprecation/deprecation\n      context.scope.getSpan()\n    : getActiveSpan();\n\n  const shouldSkipSpan = context.onlyIfParent && !parentSpan;\n\n  if (shouldSkipSpan) {\n    return undefined;\n  }\n\n  const scope = context.scope || getCurrentScope();\n\n  // Even though we don't actually want to make this span active on the current scope,\n  // we need to make it active on a temporary scope that we use for event processing\n  // as otherwise, it won't pick the correct span for the event when processing it\n  const temporaryScope = (scope as ScopeClass).clone();\n\n  return createChildSpanOrTransaction(hub, {\n    parentSpan,\n    spanContext,\n    forceTransaction: context.forceTransaction,\n    scope: temporaryScope,\n  });\n}\n\n/**\n * Returns the currently active span.\n */\nexport function getActiveSpan(): Span | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentScope().getSpan();\n}\n\ninterface ContinueTrace {\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers,\n   * or in the browser from `<meta name=\"sentry-trace\">` and `<meta name=\"baggage\">` HTML tags.\n   *\n   * @deprecated Use the version of this function taking a callback as second parameter instead:\n   *\n   * ```\n   * Sentry.continueTrace(sentryTrace: '...', baggage: '...' }, () => {\n   *    // ...\n   * })\n   * ```\n   *\n   */\n  ({\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  }): Partial<TransactionContext>;\n\n  /**\n   * Continue a trace from `sentry-trace` and `baggage` values.\n   * These values can be obtained from incoming request headers, or in the browser from `<meta name=\"sentry-trace\">`\n   * and `<meta name=\"baggage\">` HTML tags.\n   *\n   * Spans started with `startSpan`, `startSpanManual` and `startInactiveSpan`, within the callback will automatically\n   * be attached to the incoming trace.\n   *\n   * Deprecation notice: In the next major version of the SDK the provided callback will not receive a transaction\n   * context argument.\n   */\n  <V>(\n    {\n      sentryTrace,\n      baggage,\n    }: {\n      // eslint-disable-next-line deprecation/deprecation\n      sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n      // eslint-disable-next-line deprecation/deprecation\n      baggage: Parameters<typeof tracingContextFromHeaders>[1];\n    },\n    // TODO(v8): Remove parameter from this callback.\n    callback: (transactionContext: Partial<TransactionContext>) => V,\n  ): V;\n}\n\nexport const continueTrace: ContinueTrace = <V>(\n  {\n    sentryTrace,\n    baggage,\n  }: {\n    // eslint-disable-next-line deprecation/deprecation\n    sentryTrace: Parameters<typeof tracingContextFromHeaders>[0];\n    // eslint-disable-next-line deprecation/deprecation\n    baggage: Parameters<typeof tracingContextFromHeaders>[1];\n  },\n  callback?: (transactionContext: Partial<TransactionContext>) => V,\n): V | Partial<TransactionContext> => {\n  // TODO(v8): Change this function so it doesn't do anything besides setting the propagation context on the current scope:\n  /*\n    return withScope((scope) => {\n      const propagationContext = propagationContextFromHeaders(sentryTrace, baggage);\n      scope.setPropagationContext(propagationContext);\n      return callback();\n    })\n  */\n\n  const currentScope = getCurrentScope();\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceparentData, dynamicSamplingContext, propagationContext } = tracingContextFromHeaders(\n    sentryTrace,\n    baggage,\n  );\n\n  currentScope.setPropagationContext(propagationContext);\n\n  if (DEBUG_BUILD && traceparentData) {\n    logger.log(`[Tracing] Continuing trace ${traceparentData.traceId}.`);\n  }\n\n  const transactionContext: Partial<TransactionContext> = {\n    ...traceparentData,\n    metadata: dropUndefinedKeys({\n      dynamicSamplingContext,\n    }),\n  };\n\n  if (!callback) {\n    return transactionContext;\n  }\n\n  return runWithAsyncContext(() => {\n    return callback(transactionContext);\n  });\n};\n\nfunction createChildSpanOrTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  {\n    parentSpan,\n    spanContext,\n    forceTransaction,\n    scope,\n  }: {\n    parentSpan: Span | undefined;\n    spanContext: TransactionContext;\n    forceTransaction?: boolean;\n    scope: Scope;\n  },\n): Span | undefined {\n  if (!hasTracingEnabled()) {\n    return undefined;\n  }\n\n  const isolationScope = getIsolationScope();\n\n  let span: Span | undefined;\n  if (parentSpan && !forceTransaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    span = parentSpan.startChild(spanContext);\n  } else if (parentSpan) {\n    // If we forced a transaction but have a parent span, make sure to continue from the parent span, not the scope\n    const dsc = getDynamicSamplingContextFromSpan(parentSpan);\n    const { traceId, spanId: parentSpanId } = parentSpan.spanContext();\n    const sampled = spanIsSampled(parentSpan);\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  } else {\n    const { traceId, dsc, parentSpanId, sampled } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    // eslint-disable-next-line deprecation/deprecation\n    span = hub.startTransaction({\n      traceId,\n      parentSpanId,\n      parentSampled: sampled,\n      ...spanContext,\n      metadata: {\n        dynamicSamplingContext: dsc,\n        // eslint-disable-next-line deprecation/deprecation\n        ...spanContext.metadata,\n      },\n    });\n  }\n\n  // We always set this as active span on the scope\n  // In the case of this being an inactive span, we ensure to pass a detached scope in here in the first place\n  // But by having this here, we can ensure that the lookup through `getCapturedScopesOnSpan` results in the correct scope & span combo\n  // eslint-disable-next-line deprecation/deprecation\n  scope.setSpan(span);\n\n  setCapturedScopesOnSpan(span, scope, isolationScope);\n\n  return span;\n}\n\n/**\n * This converts StartSpanOptions to TransactionContext.\n * For the most part (for now) we accept the same options,\n * but some of them need to be transformed.\n *\n * Eventually the StartSpanOptions will be more aligned with OpenTelemetry.\n */\nfunction normalizeContext(context: StartSpanOptions): TransactionContext {\n  if (context.startTime) {\n    const ctx: TransactionContext & { startTime?: SpanTimeInput } = { ...context };\n    ctx.startTimestamp = spanTimeInputToSeconds(context.startTime);\n    delete ctx.startTime;\n    return ctx;\n  }\n\n  return context;\n}\n\nconst SCOPE_ON_START_SPAN_FIELD = '_sentryScope';\nconst ISOLATION_SCOPE_ON_START_SPAN_FIELD = '_sentryIsolationScope';\n\ntype SpanWithScopes = Span & {\n  [SCOPE_ON_START_SPAN_FIELD]?: Scope;\n  [ISOLATION_SCOPE_ON_START_SPAN_FIELD]?: Scope;\n};\n\nfunction setCapturedScopesOnSpan(span: Span | undefined, scope: Scope, isolationScope: Scope): void {\n  if (span) {\n    addNonEnumerableProperty(span, ISOLATION_SCOPE_ON_START_SPAN_FIELD, isolationScope);\n    addNonEnumerableProperty(span, SCOPE_ON_START_SPAN_FIELD, scope);\n  }\n}\n\n/**\n * Grabs the scope and isolation scope off a span that were active when the span was started.\n */\nexport function getCapturedScopesOnSpan(span: Span): { scope?: Scope; isolationScope?: Scope } {\n  return {\n    scope: (span as SpanWithScopes)[SCOPE_ON_START_SPAN_FIELD],\n    isolationScope: (span as SpanWithScopes)[ISOLATION_SCOPE_ON_START_SPAN_FIELD],\n  };\n}\n","import type {\n  Context,\n  Contexts,\n  DynamicSamplingContext,\n  MeasurementUnit,\n  SpanTimeInput,\n  Transaction as TransactionInterface,\n  TransactionContext,\n  TransactionEvent,\n  TransactionMetadata,\n} from '@sentry/types';\nimport { dropUndefinedKeys, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\nimport { getMetricSummaryJsonForSpan } from '../metrics/metric-summary';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, SEMANTIC_ATTRIBUTE_SENTRY_SOURCE } from '../semanticAttributes';\nimport { spanTimeInputToSeconds, spanToJSON, spanToTraceContext } from '../utils/spanUtils';\nimport { getDynamicSamplingContextFromSpan } from './dynamicSamplingContext';\nimport { Span as SpanClass, SpanRecorder } from './span';\nimport { getCapturedScopesOnSpan } from './trace';\n\n/** JSDoc */\nexport class Transaction extends SpanClass implements TransactionInterface {\n  /**\n   * The reference to the current hub.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public _hub: Hub;\n\n  protected _name: string;\n\n  private _contexts: Contexts;\n\n  private _trimEnd?: boolean | undefined;\n\n  // DO NOT yet remove this property, it is used in a hack for v7 backwards compatibility.\n  private _frozenDynamicSamplingContext: Readonly<Partial<DynamicSamplingContext>> | undefined;\n\n  private _metadata: Partial<TransactionMetadata>;\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   *\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public constructor(transactionContext: TransactionContext, hub?: Hub) {\n    super(transactionContext);\n    this._contexts = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this._metadata = {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.metadata,\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    // TODO (v8): Replace this with another way to set the root span\n    // eslint-disable-next-line deprecation/deprecation\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this._metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  // This sadly conflicts with the getter/setter ordering :(\n  /* eslint-disable @typescript-eslint/member-ordering */\n\n  /**\n   * Getter for `name` property.\n   * @deprecated Use `spanToJSON(span).description` instead.\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Setter for `name` property, which also sets `source` as custom.\n   * @deprecated Use `updateName()` and `setMetadata()` instead.\n   */\n  public set name(newName: string) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.setName(newName);\n  }\n\n  /**\n   * Get the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public get metadata(): TransactionMetadata {\n    // We merge attributes in for backwards compatibility\n    return {\n      // Defaults\n      // eslint-disable-next-line deprecation/deprecation\n      source: 'custom',\n      spanMetadata: {},\n\n      // Legacy metadata\n      ...this._metadata,\n\n      // From attributes\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] && {\n        source: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE] as TransactionMetadata['source'],\n      }),\n      ...(this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] && {\n        sampleRate: this._attributes[SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE] as TransactionMetadata['sampleRate'],\n      }),\n    };\n  }\n\n  /**\n   * Update the metadata for this transaction.\n   * @deprecated Use `spanGetMetadata(transaction)` instead.\n   */\n  public set metadata(metadata: TransactionMetadata) {\n    this._metadata = metadata;\n  }\n\n  /* eslint-enable @typescript-eslint/member-ordering */\n\n  /**\n   * Setter for `name` property, which also sets `source` on the metadata.\n   *\n   * @deprecated Use `.updateName()` and `.setAttribute()` instead.\n   */\n  public setName(name: string, source: TransactionMetadata['source'] = 'custom'): void {\n    this._name = name;\n    this.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n  }\n\n  /** @inheritdoc */\n  public updateName(name: string): this {\n    this._name = name;\n    return this;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n  public initSpanRecorder(maxlen: number = 1000): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Set the context of a transaction event.\n   * @deprecated Use either `.setAttribute()`, or set the context on the scope before creating the transaction.\n   */\n  public setContext(key: string, context: Context | null): void {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top-level `setMeasurement()` instead.\n   */\n  public setMeasurement(name: string, value: number, unit: MeasurementUnit = ''): void {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * Store metadata on this transaction.\n   * @deprecated Use attributes or store data on the scope instead.\n   */\n  public setMetadata(newMetadata: Partial<TransactionMetadata>): void {\n    this._metadata = { ...this._metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const timestampInS = spanTimeInputToSeconds(endTimestamp);\n    const transaction = this._finishTransaction(timestampInS);\n    if (!transaction) {\n      return undefined;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public toContext(): TransactionContext {\n    // eslint-disable-next-line deprecation/deprecation\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this._name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public updateWithContext(transactionContext: TransactionContext): this {\n    // eslint-disable-next-line deprecation/deprecation\n    super.updateWithContext(transactionContext);\n\n    this._name = transactionContext.name || '';\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   *\n   * @deprecated Use top-level `getDynamicSamplingContextFromSpan` instead.\n   */\n  public getDynamicSamplingContext(): Readonly<Partial<DynamicSamplingContext>> {\n    return getDynamicSamplingContextFromSpan(this);\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setHub(hub: Hub): void {\n    this._hub = hub;\n  }\n\n  /**\n   * Get the profile id of the transaction.\n   */\n  public getProfileId(): string | undefined {\n    if (this._contexts !== undefined && this._contexts['profile'] !== undefined) {\n      return this._contexts['profile'].profile_id as string;\n    }\n    return undefined;\n  }\n\n  /**\n   * Finish the transaction & prepare the event to send to Sentry.\n   */\n  protected _finishTransaction(endTimestamp?: number): TransactionEvent | undefined {\n    // This transaction is already finished, so we should not flush it again.\n    if (this._endTime !== undefined) {\n      return undefined;\n    }\n\n    if (!this._name) {\n      DEBUG_BUILD && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this._name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.end(endTimestamp);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this._sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      DEBUG_BUILD && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    const finishedSpans = this.spanRecorder\n      ? // eslint-disable-next-line deprecation/deprecation\n        this.spanRecorder.spans.filter(span => span !== this && spanToJSON(span).timestamp)\n      : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      const endTimes = finishedSpans.map(span => spanToJSON(span).timestamp).filter(Boolean) as number[];\n      this._endTime = endTimes.reduce((prev, current) => {\n        return prev > current ? prev : current;\n      });\n    }\n\n    const { scope: capturedSpanScope, isolationScope: capturedSpanIsolationScope } = getCapturedScopesOnSpan(this);\n\n    // eslint-disable-next-line deprecation/deprecation\n    const { metadata } = this;\n    // eslint-disable-next-line deprecation/deprecation\n    const { source } = metadata;\n\n    const transaction: TransactionEvent = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: spanToTraceContext(this),\n      },\n      // TODO: Pass spans serialized via `spanToJSON()` here instead in v8.\n      spans: finishedSpans,\n      start_timestamp: this._startTime,\n      // eslint-disable-next-line deprecation/deprecation\n      tags: this.tags,\n      timestamp: this._endTime,\n      transaction: this._name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        capturedSpanScope,\n        capturedSpanIsolationScope,\n        ...dropUndefinedKeys({\n          dynamicSamplingContext: getDynamicSamplingContextFromSpan(this),\n        }),\n      },\n      _metrics_summary: getMetricSummaryJsonForSpan(this),\n      ...(source && {\n        transaction_info: {\n          source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      DEBUG_BUILD &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    DEBUG_BUILD && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this._name}.`);\n\n    return transaction;\n  }\n}\n","/* eslint-disable max-lines */\nimport type { SpanTimeInput, TransactionContext } from '@sentry/types';\nimport { logger, timestampInSeconds } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { spanTimeInputToSeconds, spanToJSON } from '../utils/spanUtils';\nimport type { Span } from './span';\nimport { SpanRecorder } from './span';\nimport { Transaction } from './transaction';\n\nexport const TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nexport class IdleTransactionSpanRecorder extends SpanRecorder {\n  public constructor(\n    private readonly _pushActivity: (id: string) => void,\n    private readonly _popActivity: (id: string) => void,\n    public transactionSpanId: string,\n    maxlen?: number,\n  ) {\n    super(maxlen);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public add(span: Span): void {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanContext().spanId !== this.transactionSpanId) {\n      // We patch span.end() to pop an activity after setting an endTimestamp.\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const originalEnd = span.end;\n      span.end = (...rest: unknown[]) => {\n        this._popActivity(span.spanContext().spanId);\n        return originalEnd.apply(span, rest);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (spanToJSON(span).timestamp === undefined) {\n        this._pushActivity(span.spanContext().spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\nexport type BeforeFinishCallback = (transactionSpan: IdleTransaction, endTimestamp: number) => void;\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nexport class IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n  public activities: Record<string, boolean>;\n  // Track state of activities in previous heartbeat\n  private _prevHeartbeatString: string | undefined;\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n  private _heartbeatCounter: number;\n\n  // We should not use heartbeat if we finished a transaction\n  private _finished: boolean;\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n  private _idleTimeoutCanceledPermanently: boolean;\n\n  private readonly _beforeFinishCallbacks: BeforeFinishCallback[];\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n  private _idleTimeoutID: ReturnType<typeof setTimeout> | undefined;\n\n  private _finishReason: (typeof IDLE_TRANSACTION_FINISH_REASONS)[number];\n\n  private _autoFinishAllowed: boolean;\n\n  /**\n   * @deprecated Transactions will be removed in v8. Use spans instead.\n   */\n  public constructor(\n    transactionContext: TransactionContext,\n    // eslint-disable-next-line deprecation/deprecation\n    private readonly _idleHub: Hub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n    private readonly _idleTimeout: number = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n    private readonly _finalTimeout: number = TRACING_DEFAULTS.finalTimeout,\n    private readonly _heartbeatInterval: number = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n    private readonly _onScope: boolean = false,\n    /**\n     * When set to `true`, will disable the idle timeout (`_idleTimeout` option) and heartbeat mechanisms (`_heartbeatInterval`\n     * option) until the `sendAutoFinishSignal()` method is called. The final timeout mechanism (`_finalTimeout` option)\n     * will not be affected by this option, meaning the transaction will definitely be finished when the final timeout is\n     * reached, no matter what this option is configured to.\n     *\n     * Defaults to `false`.\n     */\n    delayAutoFinishUntilSignal: boolean = false,\n  ) {\n    super(transactionContext, _idleHub);\n\n    this.activities = {};\n    this._heartbeatCounter = 0;\n    this._finished = false;\n    this._idleTimeoutCanceledPermanently = false;\n    this._beforeFinishCallbacks = [];\n    this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];\n    this._autoFinishAllowed = !delayAutoFinishUntilSignal;\n\n    if (_onScope) {\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      DEBUG_BUILD && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanContext().spanId}`);\n      // eslint-disable-next-line deprecation/deprecation\n      _idleHub.getScope().setSpan(this);\n    }\n\n    if (!delayAutoFinishUntilSignal) {\n      this._restartIdleTimeout();\n    }\n\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.end();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n  public end(endTimestamp?: SpanTimeInput): string | undefined {\n    const endTimestampInS = spanTimeInputToSeconds(endTimestamp);\n\n    this._finished = true;\n    this.activities = {};\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.op === 'ui.action.click') {\n      this.setAttribute(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.spanRecorder) {\n      DEBUG_BUILD &&\n        // eslint-disable-next-line deprecation/deprecation\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestampInS * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestampInS);\n      }\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span: Span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanContext().spanId === this.spanContext().spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!spanToJSON(span).timestamp) {\n          span.setStatus('cancelled');\n          span.end(endTimestampInS);\n          DEBUG_BUILD &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const { start_timestamp: startTime, timestamp: endTime } = spanToJSON(span);\n        const spanStartedBeforeTransactionFinish = startTime && startTime < endTimestampInS;\n\n        // Add a delta with idle timeout so that we prevent false positives\n        const timeoutWithMarginOfError = (this._finalTimeout + this._idleTimeout) / 1000;\n        const spanEndedBeforeFinalTimeout = endTime && startTime && endTime - startTime < timeoutWithMarginOfError;\n\n        if (DEBUG_BUILD) {\n          const stringifiedSpan = JSON.stringify(span, undefined, 2);\n          if (!spanStartedBeforeTransactionFinish) {\n            logger.log('[Tracing] discarding Span since it happened after Transaction was finished', stringifiedSpan);\n          } else if (!spanEndedBeforeFinalTimeout) {\n            logger.log('[Tracing] discarding Span since it finished after Transaction final timeout', stringifiedSpan);\n          }\n        }\n\n        return spanStartedBeforeTransactionFinish && spanEndedBeforeFinalTimeout;\n      });\n\n      DEBUG_BUILD && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      DEBUG_BUILD && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      // eslint-disable-next-line deprecation/deprecation\n      const scope = this._idleHub.getScope();\n      // eslint-disable-next-line deprecation/deprecation\n      if (scope.getTransaction() === this) {\n        // eslint-disable-next-line deprecation/deprecation\n        scope.setSpan(undefined);\n      }\n    }\n\n    return super.end(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets executed before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n  public registerBeforeFinishCallback(callback: BeforeFinishCallback): void {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public initSpanRecorder(maxlen?: number): void {\n    // eslint-disable-next-line deprecation/deprecation\n    if (!this.spanRecorder) {\n      const pushActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id: string): void => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      // eslint-disable-next-line deprecation/deprecation\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanContext().spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      DEBUG_BUILD && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n  public cancelIdleTimeout(\n    endTimestamp?: Parameters<IdleTransaction['end']>[0],\n    {\n      restartOnChildSpanChange,\n    }: {\n      restartOnChildSpanChange?: boolean;\n    } = {\n      restartOnChildSpanChange: true,\n    },\n  ): void {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.end(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Temporary method used to externally set the transaction's `finishReason`\n   *\n   * ** WARNING**\n   * This is for the purpose of experimentation only and will be removed in the near future, do not use!\n   *\n   * @internal\n   *\n   */\n  public setFinishReason(reason: string): void {\n    this._finishReason = reason;\n  }\n\n  /**\n   * Permits the IdleTransaction to automatically end itself via the idle timeout and heartbeat mechanisms when the `delayAutoFinishUntilSignal` option was set to `true`.\n   */\n  public sendAutoFinishSignal(): void {\n    if (!this._autoFinishAllowed) {\n      DEBUG_BUILD && logger.log('[Tracing] Received finish signal for idle transaction.');\n      this._restartIdleTimeout();\n      this._autoFinishAllowed = true;\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n  private _restartIdleTimeout(endTimestamp?: Parameters<IdleTransaction['end']>[0]): void {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.end(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n  private _pushActivity(spanId: string): void {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    DEBUG_BUILD && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n  private _popActivity(spanId: string): void {\n    if (this.activities[spanId]) {\n      DEBUG_BUILD && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      DEBUG_BUILD && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampInSeconds();\n      if (this._idleTimeoutCanceledPermanently) {\n        if (this._autoFinishAllowed) {\n          this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n          this.end(endTimestamp);\n        }\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampInSeconds is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n  private _beat(): void {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      if (this._autoFinishAllowed) {\n        DEBUG_BUILD && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n        this.end();\n      }\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n  private _pingHeartbeat(): void {\n    DEBUG_BUILD && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n","import type { Transaction } from '@sentry/types';\nimport { extractTraceparentData as _extractTraceparentData } from '@sentry/utils';\n\nimport type { Hub } from '../hub';\nimport { getCurrentHub } from '../hub';\n\n/**\n * Grabs active transaction off scope.\n *\n * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveTransaction<T extends Transaction>(maybeHub?: Hub): T | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = maybeHub || getCurrentHub();\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = hub.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  return scope.getTransaction() as T | undefined;\n}\n\n// so it can be used in manual instrumentation without necessitating a hard dependency on @sentry/utils\nexport { stripUrlQueryAndFragment } from '@sentry/utils';\n\n/**\n * The `extractTraceparentData` function and `TRACEPARENT_REGEXP` constant used\n * to be declared in this file. It was later moved into `@sentry/utils` as part of a\n * move to remove `@sentry/tracing` dependencies from `@sentry/node` (`extractTraceparentData`\n * is the only tracing function used by `@sentry/node`).\n *\n * These exports are kept here for backwards compatability's sake.\n *\n * See https://github.com/getsentry/sentry-javascript/issues/4642 for more details.\n *\n * @deprecated Import this function from `@sentry/utils` instead\n */\nexport const extractTraceparentData = _extractTraceparentData;\n","import {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  logger,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SpanStatusType } from './spanstatus';\nimport { getActiveTransaction } from './utils';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nexport function registerErrorInstrumentation(): void {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addGlobalErrorInstrumentationHandler(errorCallback);\n  addGlobalUnhandledRejectionInstrumentationHandler(errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback(): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status: SpanStatusType = 'internal_error';\n    DEBUG_BUILD && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n","import type { Options, SamplingContext } from '@sentry/types';\nimport { isNaN, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE } from '../semanticAttributes';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled';\nimport { spanToJSON } from '../utils/spanUtils';\nimport type { Transaction } from './transaction';\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * This method muttes the given `transaction` and will set the `sampled` value on it.\n * It returns the same transaction, for convenience.\n */\nexport function sampleTransaction<T extends Transaction>(\n  transaction: T,\n  options: Pick<Options, 'tracesSampleRate' | 'tracesSampler' | 'enableTracing'>,\n  samplingContext: SamplingContext,\n): T {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  // eslint-disable-next-line deprecation/deprecation\n  if (transaction.sampled !== undefined) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(transaction.sampled));\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, Number(sampleRate));\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE, sampleRate);\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  // eslint-disable-next-line deprecation/deprecation\n  transaction.sampled = Math.random() < (sampleRate as number | boolean);\n\n  // if we're not going to keep it, we're done\n  // eslint-disable-next-line deprecation/deprecation\n  if (!transaction.sampled) {\n    DEBUG_BUILD &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  DEBUG_BUILD &&\n    // eslint-disable-next-line deprecation/deprecation\n    logger.log(`[Tracing] starting ${transaction.op} transaction - ${spanToJSON(transaction).description}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nexport function isValidSampleRate(rate: unknown): boolean {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    DEBUG_BUILD &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n","import type { ClientOptions, CustomSamplingContext, TransactionContext } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Hub } from '../hub';\nimport { getMainCarrier } from '../hub';\nimport { spanToTraceHeader } from '../utils/spanUtils';\nimport { registerErrorInstrumentation } from './errors';\nimport { IdleTransaction } from './idletransaction';\nimport { sampleTransaction } from './sampling';\nimport { Transaction } from './transaction';\n\n/** Returns all trace headers that are currently on the top scope. */\n// eslint-disable-next-line deprecation/deprecation\nfunction traceHeaders(this: Hub): { [key: string]: string } {\n  // eslint-disable-next-line deprecation/deprecation\n  const scope = this.getScope();\n  // eslint-disable-next-line deprecation/deprecation\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': spanToTraceHeader(span),\n      }\n    : {};\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  this: Hub,\n  transactionContext: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = this.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    DEBUG_BUILD &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    // eslint-disable-next-line deprecation/deprecation\n    transactionContext.sampled = false;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nexport function startIdleTransaction(\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub,\n  transactionContext: TransactionContext,\n  idleTimeout: number,\n  finalTimeout: number,\n  onScope?: boolean,\n  customSamplingContext?: CustomSamplingContext,\n  heartbeatInterval?: number,\n  delayAutoFinishUntilSignal: boolean = false,\n): IdleTransaction {\n  // eslint-disable-next-line deprecation/deprecation\n  const client = hub.getClient();\n  const options: Partial<ClientOptions> = (client && client.getOptions()) || {};\n\n  // eslint-disable-next-line deprecation/deprecation\n  let transaction = new IdleTransaction(\n    transactionContext,\n    hub,\n    idleTimeout,\n    finalTimeout,\n    heartbeatInterval,\n    onScope,\n    delayAutoFinishUntilSignal,\n  );\n  transaction = sampleTransaction(transaction, options, {\n    name: transactionContext.name,\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    attributes: {\n      // eslint-disable-next-line deprecation/deprecation\n      ...transactionContext.data,\n      ...transactionContext.attributes,\n    },\n    ...customSamplingContext,\n  });\n  if (transaction.isRecording()) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans as number));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nexport function addTracingExtensions(): void {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric } from '../../types';\nimport { observe } from '../observe';\n\ndeclare global {\n  interface Performance {\n    interactionCount: number;\n  }\n}\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries: Metric['entries']): void => {\n  (entries as PerformanceEventTiming[]).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po: PerformanceObserver | undefined;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nexport const getInteractionCount = (): number => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nexport const initInteractionCountPolyfill = (): void => {\n  if ('interactionCount' in performance || po) return;\n\n  po = observe('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } as PerformanceObserverInit);\n};\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport { getInteractionCount, initInteractionCountPolyfill } from './lib/polyfills/interactionCountPolyfill';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { INPMetric } from './types/inp';\n\ninterface Interaction {\n  id: number;\n  latency: number;\n  entries: PerformanceEventTiming[];\n}\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = (): number => {\n  return getInteractionCount();\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList: Interaction[] = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap: { [interactionId: string]: Interaction } = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry: PerformanceEventTiming): void => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId!];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId!,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = (): Interaction => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/responsiveness/) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/inp/#what-is-a-good-inp-score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onINP = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/inp/#what's-a-%22good%22-inp-value\n  // const thresholds = [200, 500];\n\n  // TODO(philipwalton): remove once the polyfill is no longer needed.\n  initInteractionCountPolyfill();\n\n  const metric = initMetric('INP');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: INPMetric['entries']): void => {\n    entries.forEach(entry => {\n      if (entry.interactionId) {\n        processEntry(entry);\n      }\n\n      // Entries of type `first-input` don't currently have an `interactionId`,\n      // so to consider them in INP we have to first check that an existing\n      // entry doesn't match the `duration` and `startTime`.\n      // Note that this logic assumes that `event` entries are dispatched\n      // before `first-input` entries. This is true in Chrome but it is not\n      // true in Firefox; however, Firefox doesn't support interactionId, so\n      // it's not an issue at the moment.\n      // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n      if (entry.entryType === 'first-input') {\n        const noMatchingEntry = !longestInteractionList.some(interaction => {\n          return interaction.entries.some(prevEntry => {\n            return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n          });\n        });\n        if (noMatchingEntry) {\n          processEntry(entry);\n        }\n      }\n    });\n\n    const inp = estimateP98LongestInteraction();\n\n    if (inp && inp.latency !== metric.value) {\n      metric.value = inp.latency;\n      metric.entries = inp.entries;\n      report();\n    }\n  };\n\n  const po = observe('event', handleEntries, {\n    // Event Timing entries have their durations rounded to the nearest 8ms,\n    // so a duration of 40ms would be any event that spans 2.5 or more frames\n    // at 60Hz. This threshold is chosen to strike a balance between usefulness\n    // and performance. Running this callback for any interaction that spans\n    // just one or two frames is likely not worth the insight that could be\n    // gained.\n    durationThreshold: opts.durationThreshold || 40,\n  } as PerformanceObserverInit);\n\n  report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  if (po) {\n    // Also observe entries of type `first-input`. This is useful in cases\n    // where the first interaction is less than the `durationThreshold`.\n    po.observe({ type: 'first-input', buffered: true });\n\n    onHidden(() => {\n      handleEntries(po.takeRecords() as INPMetric['entries']);\n\n      // If the interaction count shows that there were interactions but\n      // none were captured by the PerformanceObserver, report a latency of 0.\n      if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n        metric.value = 0;\n        metric.entries = [];\n      }\n\n      report(true);\n    });\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getNavigationEntry } from './lib/getNavigationEntry';\nimport { initMetric } from './lib/initMetric';\nimport type { ReportCallback, ReportOpts } from './types';\nimport type { TTFBMetric } from './types/ttfb';\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback: () => void): void => {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  if (WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => whenReady(callback), true);\n  } else if (WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/time-to-first-byte/) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nexport const onTTFB = (onReport: ReportCallback, opts?: ReportOpts): void => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/ttfb/#what-is-a-good-ttfb-score\n  // const thresholds = [800, 1800];\n\n  const metric = initMetric('TTFB');\n  const report = bindReporter(onReport, metric, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = getNavigationEntry() as TTFBMetric['entries'][number];\n\n    if (navEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navEntry.responseStart - getActivationStart(), 0);\n\n      // In some cases the value reported is negative or is larger\n      // than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      if (metric.value < 0 || metric.value > performance.now()) return;\n\n      metric.entries = [navEntry];\n\n      report(true);\n    }\n  });\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { CLSMetric, ReportCallback, StopListening } from './types';\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nexport const onCLS = (\n  onReport: ReportCallback,\n  options: { reportAllChanges?: boolean } = {},\n): StopListening | undefined => {\n  const metric = initMetric('CLS', 0);\n  let report: ReturnType<typeof bindReporter>;\n\n  let sessionValue = 0;\n  let sessionEntries: PerformanceEntry[] = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries: LayoutShift[]): void => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = observe('layout-shift', handleEntries);\n  if (po) {\n    report = bindReporter(onReport, metric, options.reportAllChanges);\n\n    const stopListening = (): void => {\n      handleEntries(po.takeRecords() as CLSMetric['entries']);\n      report(true);\n    };\n\n    onHidden(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bindReporter } from './lib/bindReporter';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { FIDMetric, PerformanceEventTiming, ReportCallback } from './types';\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nexport const onFID = (onReport: ReportCallback): void => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('FID');\n  // eslint-disable-next-line prefer-const\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntry = (entry: PerformanceEventTiming): void => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries: FIDMetric['entries']): void => {\n    (entries as PerformanceEventTiming[]).forEach(handleEntry);\n  };\n\n  const po = observe('first-input', handleEntries);\n  report = bindReporter(onReport, metric);\n\n  if (po) {\n    onHidden(() => {\n      handleEntries(po.takeRecords() as FIDMetric['entries']);\n      po.disconnect();\n    }, true);\n  }\n};\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { DsnComponents, SpanEnvelope, SpanItem } from '@sentry/types';\nimport type { Span } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Create envelope from Span item.\n */\nexport function createSpanEnvelope(spans: Span[], dsn?: DsnComponents): SpanEnvelope {\n  const headers: SpanEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const items = spans.map(createSpanItem);\n  return createEnvelope<SpanEnvelope>(headers, items);\n}\n\nfunction createSpanItem(span: Span): SpanItem {\n  const spanHeaders: SpanItem[0] = {\n    type: 'span',\n  };\n  return [spanHeaders, span];\n}\n","import type { Transaction } from '@sentry/core';\nimport type { Span, SpanContext } from '@sentry/types';\n\n/**\n * Checks if a given value is a valid measurement value.\n */\nexport function isMeasurementValue(value: unknown): value is number {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nexport function _startChild(transaction: Transaction, { startTimestamp, ...ctx }: SpanContext): Span {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","/* eslint-disable max-lines */\nimport type { IdleTransaction, Transaction } from '@sentry/core';\nimport {\n  Span,\n  getActiveTransaction,\n  getClient,\n  hasTracingEnabled,\n  isValidSampleRate,\n  setMeasurement,\n} from '@sentry/core';\nimport type { ClientOptions, Measurements, SpanContext, TransactionContext } from '@sentry/types';\nimport { browserPerformanceTimeOrigin, getComponentName, htmlTreeAsString, logger, parseUrl } from '@sentry/utils';\n\nimport { spanToJSON } from '@sentry/core';\nimport { DEBUG_BUILD } from '../../common/debug-build';\nimport {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n  addTtfbInstrumentationHandler,\n} from '../instrument';\nimport { WINDOW } from '../types';\nimport { getVisibilityWatcher } from '../web-vitals/lib/getVisibilityWatcher';\nimport type {\n  InteractionRouteNameMapping,\n  NavigatorDeviceMemory,\n  NavigatorNetworkInformation,\n} from '../web-vitals/types';\nimport { _startChild, isMeasurementValue } from './utils';\n\nimport { createSpanEnvelope } from '@sentry/core';\nimport { getNavigationEntry } from '../web-vitals/lib/getNavigationEntry';\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time: number): number {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI(): Performance | undefined {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return WINDOW && WINDOW.addEventListener && WINDOW.performance;\n}\n\nlet _performanceCursor: number = 0;\n\nlet _measurements: Measurements = {};\nlet _lcpEntry: LargestContentfulPaint | undefined;\nlet _clsEntry: LayoutShift | undefined;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nexport function startTrackingWebVitals(): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return (): void => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nexport function startTrackingLongTasks(): void {\n  addPerformanceInstrumentationHandler('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nexport function startTrackingInteractions(): void {\n  addPerformanceInstrumentationHandler('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = getActiveTransaction() as IdleTransaction | undefined;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span: SpanContext = {\n          description: htmlTreeAsString(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = getComponentName(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nexport function startTrackingINP(\n  interactionIdtoRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping, interactionsSampleRate);\n\n    return (): void => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS(): () => void {\n  return addClsInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry as LayoutShift;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP(): () => void {\n  return addLcpInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry as LargestContentfulPaint;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID(): () => void {\n  return addFidInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(browserPerformanceTimeOrigin as number);\n    const startTime = msToSec(entry.startTime);\n    DEBUG_BUILD && logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb(): () => void {\n  return addTtfbInstrumentationHandler(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\nconst INP_ENTRY_MAP: Record<string, 'click' | 'hover' | 'drag' | 'press'> = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(\n  interactionIdToRouteNameMapping: InteractionRouteNameMapping,\n  interactionsSampleRate: number,\n): () => void {\n  return addInpInstrumentationHandler(({ metric }) => {\n    if (metric.value === undefined) {\n      return;\n    }\n    const entry = metric.entries.find(\n      entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name] !== undefined,\n    );\n    const client = getClient();\n    if (!entry || !client) {\n      return;\n    }\n    const interactionType = INP_ENTRY_MAP[entry.name];\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((browserPerformanceTimeOrigin as number) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const interaction =\n      entry.interactionId !== undefined ? interactionIdToRouteNameMapping[entry.interactionId] : undefined;\n    if (interaction === undefined) {\n      return;\n    }\n    const { routeName, parentContext, activeTransaction, user, replayId } = interaction;\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: `ui.interaction.${interactionType}`,\n      name: htmlTreeAsString(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options, interactionsSampleRate);\n\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate as number | boolean)) {\n      const envelope = span ? createSpanEnvelope([span], client.getDsn()) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          DEBUG_BUILD && logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nexport function addPerformanceEntries(transaction: Transaction): void {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !WINDOW.performance.getEntries || !browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  DEBUG_BUILD && logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = spanToJSON(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry: Record<string, any>) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = getVisibilityWatcher();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          DEBUG_BUILD && logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name as string, startTime, duration, timeOrigin);\n        break;\n      }\n      default:\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      DEBUG_BUILD && logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      _startChild(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      setMeasurement(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nexport function _addMeasureSpans(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): number {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  _startChild(transaction, {\n    description: entry.name as string,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType as string,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction: Transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry: Record<string, any>,\n  event: string,\n  timeOrigin: number,\n  description?: string,\n  eventEnd?: string,\n): void {\n  const end = eventEnd ? (entry[eventEnd] as number | undefined) : (entry[`${event}End`] as number | undefined);\n  const start = entry[`${event}Start`] as number | undefined;\n  if (!start || !end) {\n    return;\n  }\n  _startChild(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction: Transaction, entry: Record<string, any>, timeOrigin: number): void {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n\n    _startChild(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart as number),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd as number),\n    });\n  }\n}\n\nexport interface ResourceEntry extends Record<string, unknown> {\n  initiatorType?: string;\n  transferSize?: number;\n  encodedBodySize?: number;\n  decodedBodySize?: number;\n  renderBlockingStatus?: string;\n}\n\n/** Create resource-related spans */\nexport function _addResourceSpans(\n  transaction: Transaction,\n  entry: ResourceEntry,\n  resourceUrl: string,\n  startTime: number,\n  duration: number,\n  timeOrigin: number,\n): void {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = parseUrl(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data: Record<string, any> = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  _startChild(transaction, {\n    description: resourceUrl.replace(WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction: Transaction): void {\n  const navigator = WINDOW.navigator as null | (Navigator & NavigatorNetworkInformation & NavigatorDeviceMemory);\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if (isMeasurementValue(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if (isMeasurementValue(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if (isMeasurementValue(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction: Transaction): void {\n  if (_lcpEntry) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', htmlTreeAsString(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, htmlTreeAsString(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data: Record<string, unknown>,\n  entry: ResourceEntry,\n  key: keyof Pick<ResourceEntry, 'transferSize' | 'encodedBodySize' | 'decodedBodySize'>,\n  dataKey: 'http.response_transfer_size' | 'http.response_content_length' | 'http.decoded_response_content_length',\n): void {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements: Measurements): void {\n  const navEntry = getNavigationEntry();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    DEBUG_BUILD && logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(\n  transactionContext: TransactionContext | undefined,\n  options: ClientOptions,\n  interactionsSampleRate: number,\n): number | boolean {\n  if (!hasTracingEnabled(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!isValidSampleRate(sampleRate)) {\n    DEBUG_BUILD && logger.warn('[Tracing] Discarding interaction span because of invalid sample rate.');\n    return false;\n  }\n  if (sampleRate === true) {\n    return interactionsSampleRate;\n  } else if (sampleRate === false) {\n    return 0;\n  }\n  return sampleRate * interactionsSampleRate;\n}\n","/* eslint-disable max-lines */\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToJSON,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, Span } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  SENTRY_XHR_DATA_KEY,\n  addFetchInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  browserPerformanceTimeOrigin,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  parseUrl,\n  stringMatchesSomePattern,\n} from '@sentry/utils';\n\nimport { instrumentFetchRequest } from '../common/fetch';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport { WINDOW } from './types';\n\nexport const DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\nexport interface RequestInstrumentationOptions {\n  /**\n   * @deprecated Will be removed in v8.\n   * Use `shouldCreateSpanForRequest` to control span creation and `tracePropagationTargets` to control\n   * trace header attachment.\n   */\n  tracingOrigins: Array<string | RegExp>;\n\n  /**\n   * List of strings and/or regexes used to determine which outgoing requests will have `sentry-trace` and `baggage`\n   * headers attached.\n   *\n   * @deprecated Use the top-level `tracePropagationTargets` option in `Sentry.init` instead.\n   * This option will be removed in v8.\n   *\n   * Default: ['localhost', /^\\//] @see {DEFAULT_TRACE_PROPAGATION_TARGETS}\n   */\n  tracePropagationTargets: Array<string | RegExp>;\n\n  /**\n   * Flag to disable patching all together for fetch requests.\n   *\n   * Default: true\n   */\n  traceFetch: boolean;\n\n  /**\n   * Flag to disable patching all together for xhr requests.\n   *\n   * Default: true\n   */\n  traceXHR: boolean;\n\n  /**\n   * If true, Sentry will capture http timings and add them to the corresponding http spans.\n   *\n   * Default: true\n   */\n  enableHTTPTimings: boolean;\n\n  /**\n   * This function will be called before creating a span for a request with the given url.\n   * Return false if you don't want a span for the given url.\n   *\n   * Default: (url: string) => true\n   */\n  shouldCreateSpanForRequest?(this: void, url: string): boolean;\n}\n\nexport const defaultRequestInstrumentationOptions: RequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nexport function instrumentOutgoingRequests(_options?: Partial<RequestInstrumentationOptions>): void {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_: string) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url: string): boolean =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans: Record<string, Span> = {};\n\n  if (traceFetch) {\n    addFetchInstrumentationHandler(handlerData => {\n      const createdSpan = instrumentFetchRequest(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    addXhrInstrumentationHandler(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry: PerformanceEntry): entry is PerformanceResourceTiming {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry as PerformanceResourceTiming).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span: Span): void {\n  const { url } = spanToJSON(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = addPerformanceInstrumentationHandler('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nexport function extractNetworkProtocol(nextHopProtocol: string): { name: string; version: string } {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time: number = 0): number {\n  return ((browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming: PerformanceResourceTiming): [string, string | number][] {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData: [string, string | number][] = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nexport function shouldAttachHeaders(url: string, tracePropagationTargets: (string | RegExp)[] | undefined): boolean {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nexport function xhrCallback(\n  handlerData: HandlerDataXhr,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n): Span | undefined {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!hasTracingEnabled() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      setHttpStatus(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const isolationScope = getIsolationScope();\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          'http.url': fullUrl,\n          url: sentryXhrData.url,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = getClient();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n      dsc ||\n        (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr: SentryWrappedXMLHttpRequest,\n  sentryTraceHeader: string,\n  sentryBaggageHeader: string | undefined,\n): void {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader!('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader!(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, WINDOW.location.origin);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n","import {\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  getClient,\n  getCurrentScope,\n  getDynamicSamplingContextFromClient,\n  getDynamicSamplingContextFromSpan,\n  getIsolationScope,\n  hasTracingEnabled,\n  setHttpStatus,\n  spanToTraceHeader,\n  startInactiveSpan,\n} from '@sentry/core';\nimport type { Client, HandlerDataFetch, Scope, Span, SpanOrigin } from '@sentry/types';\nimport {\n  BAGGAGE_HEADER_NAME,\n  dynamicSamplingContextToSentryBaggageHeader,\n  generateSentryTraceHeader,\n  isInstanceOf,\n  parseUrl,\n} from '@sentry/utils';\n\ntype PolymorphicRequestHeaders =\n  | Record<string, string | undefined>\n  | Array<[string, string]>\n  // the below is not preicsely the Header type used in Request, but it'll pass duck-typing\n  | {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [key: string]: any;\n      append: (key: string, value: string) => void;\n      get: (key: string) => string | null | undefined;\n    };\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nexport function instrumentFetchRequest(\n  handlerData: HandlerDataFetch,\n  shouldCreateSpan: (url: string) => boolean,\n  shouldAttachHeaders: (url: string) => boolean,\n  spans: Record<string, Span>,\n  spanOrigin: SpanOrigin = 'auto.http.browser',\n): Span | undefined {\n  if (!hasTracingEnabled() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? parseUrl(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? startInactiveSpan({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          'http.url': fullUrl,\n          'server.address': host,\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request: string | Request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options: { [key: string]: any } = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nexport function addTracingHeadersToFetchRequest(\n  request: string | unknown, // unknown is actually type Request but we can't export DOM types from this package,\n  client: Client,\n  scope: Scope,\n  options: {\n    headers?:\n      | {\n          [key: string]: string[] | string | undefined;\n        }\n      | PolymorphicRequestHeaders;\n  },\n  requestSpan?: Span,\n): PolymorphicRequestHeaders | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = getIsolationScope();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? spanToTraceHeader(span) : generateSentryTraceHeader(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(\n    dsc ||\n      (span ? getDynamicSamplingContextFromSpan(span) : getDynamicSamplingContextFromClient(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request as Request).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers as Headers);\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders as PolymorphicRequestHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders: string[] = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers as Exclude<typeof headers, Headers>),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url: string): string | undefined {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch {\n    return undefined;\n  }\n}\n\nfunction endSpan(span: Span, handlerData: HandlerDataFetch): void {\n  if (handlerData.response) {\n    setHttpStatus(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus('internal_error');\n  }\n  span.end();\n}\n","/* eslint-disable max-lines */\nimport type { Hub, IdleTransaction } from '@sentry/core';\nimport { getClient, getCurrentScope } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  TRACING_DEFAULTS,\n  addTracingExtensions,\n  getActiveTransaction,\n  startIdleTransaction,\n} from '@sentry/core';\nimport type { EventProcessor, Integration, Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getDomElement, logger, propagationContextFromHeaders } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { registerBackgroundTabDetection } from './backgroundtab';\nimport { addPerformanceInstrumentationHandler } from './instrument';\nimport {\n  addPerformanceEntries,\n  startTrackingINP,\n  startTrackingInteractions,\n  startTrackingLongTasks,\n  startTrackingWebVitals,\n} from './metrics';\nimport type { RequestInstrumentationOptions } from './request';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request';\nimport { instrumentRoutingWithDefaults } from './router';\nimport { WINDOW } from './types';\nimport type { InteractionRouteNameMapping } from './web-vitals/types';\n\nexport const BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\nexport interface BrowserTracingOptions extends RequestInstrumentationOptions {\n  /**\n   * The time to wait in ms until the transaction will be finished during an idle state. An idle state is defined\n   * by a moment where there are no in-progress spans.\n   *\n   * The transaction will use the end timestamp of the last finished span as the endtime for the transaction.\n   * If there are still active spans when this the `idleTimeout` is set, the `idleTimeout` will get reset.\n   * Time is in ms.\n   *\n   * Default: 1000\n   */\n  idleTimeout: number;\n\n  /**\n   * The max duration for a transaction. If a transaction duration hits the `finalTimeout` value, it\n   * will be finished.\n   * Time is in ms.\n   *\n   * Default: 30000\n   */\n  finalTimeout: number;\n\n  /**\n   * The heartbeat interval. If no new spans are started or open spans are finished within 3 heartbeats,\n   * the transaction will be finished.\n   * Time is in ms.\n   *\n   * Default: 5000\n   */\n  heartbeatInterval: number;\n\n  /**\n   * Flag to enable/disable creation of `navigation` transaction on history changes.\n   *\n   * Default: true\n   */\n  startTransactionOnLocationChange: boolean;\n\n  /**\n   * Flag to enable/disable creation of `pageload` transaction on first pageload.\n   *\n   * Default: true\n   */\n  startTransactionOnPageLoad: boolean;\n\n  /**\n   * Flag Transactions where tabs moved to background with \"cancelled\". Browser background tab timing is\n   * not suited towards doing precise measurements of operations. By default, we recommend that this option\n   * be enabled as background transactions can mess up your statistics in nondeterministic ways.\n   *\n   * Default: true\n   */\n  markBackgroundTransactions: boolean;\n\n  /**\n   * If true, Sentry will capture long tasks and add them to the corresponding transaction.\n   *\n   * Default: true\n   */\n  enableLongTask: boolean;\n\n  /**\n   * If true, Sentry will capture INP web vitals as standalone spans .\n   *\n   * Default: false\n   */\n  enableInp: boolean;\n\n  /**\n   * Sample rate to determine interaction span sampling.\n   * interactionsSampleRate is applied on top of the global tracesSampleRate.\n   * ie a tracesSampleRate of 0.1 and interactionsSampleRate of 0.5 will result in a 0.05 sample rate for interactions.\n   *\n   * Default: 1\n   */\n  interactionsSampleRate: number;\n\n  /**\n   * _metricOptions allows the user to send options to change how metrics are collected.\n   *\n   * _metricOptions is currently experimental.\n   *\n   * Default: undefined\n   */\n  _metricOptions?: Partial<{\n    /**\n     * @deprecated This property no longer has any effect and will be removed in v8.\n     */\n    _reportAllChanges: boolean;\n  }>;\n\n  /**\n   * _experiments allows the user to send options to define how this integration works.\n   * Note that the `enableLongTask` options is deprecated in favor of the option at the top level, and will be removed in v8.\n   *\n   * TODO (v8): Remove enableLongTask\n   *\n   * Default: undefined\n   */\n  _experiments: Partial<{\n    enableLongTask: boolean;\n    enableInteractions: boolean;\n    // eslint-disable-next-line deprecation/deprecation\n    onStartRouteTransaction: (t: Transaction | undefined, ctx: TransactionContext, getCurrentHub: () => Hub) => void;\n  }>;\n\n  /**\n   * beforeNavigate is called before a pageload/navigation transaction is created and allows users to modify transaction\n   * context data, or drop the transaction entirely (by setting `sampled = false` in the context).\n   *\n   * Note: For legacy reasons, transactions can also be dropped by returning `undefined`.\n   *\n   * @param context: The context data which will be passed to `startTransaction` by default\n   *\n   * @returns A (potentially) modified context object, with `sampled = false` if the transaction should be dropped.\n   */\n  beforeNavigate?(this: void, context: TransactionContext): TransactionContext | undefined;\n\n  /**\n   * Instrumentation that creates routing change transactions. By default creates\n   * pageload and navigation transactions.\n   */\n  routingInstrumentation<T extends Transaction>(\n    this: void,\n    customStartTransaction: (context: TransactionContext) => T | undefined,\n    startTransactionOnPageLoad?: boolean,\n    startTransactionOnLocationChange?: boolean,\n  ): void;\n}\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS: BrowserTracingOptions = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nexport class BrowserTracing implements Integration {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n  public options: BrowserTracingOptions;\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  // eslint-disable-next-line deprecation/deprecation\n  private _getCurrentHub?: () => Hub;\n\n  private _collectWebVitals: () => void;\n\n  private _hasSetTracePropagationTargets: boolean;\n  private _interactionIdToRouteNameMapping: InteractionRouteNameMapping;\n  private _latestRoute: {\n    name: string | undefined;\n    context: TransactionContext | undefined;\n  };\n\n  public constructor(_options?: Partial<BrowserTracingOptions>) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    addTracingExtensions();\n\n    if (DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n    this._interactionIdToRouteNameMapping = {};\n\n    if (this.options.enableInp) {\n      startTrackingINP(this._interactionIdToRouteNameMapping, this.options.interactionsSampleRate);\n    }\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n\n    this._latestRoute = {\n      name: undefined,\n      context: undefined,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public setupOnce(_: (callback: EventProcessor) => void, getCurrentHub: () => Hub): void {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context: TransactionContext) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    if (this.options.enableInp) {\n      this._registerInpInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n  private _createRouteTransaction(context: TransactionContext): Transaction | undefined {\n    if (!this._getCurrentHub) {\n      DEBUG_BUILD &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext: TransactionContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = propagationContextFromHeaders(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRoute.name = finalContext.name;\n    this._latestRoute.context = finalContext;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      DEBUG_BUILD && logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    DEBUG_BUILD && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      if (WINDOW.document) {\n        WINDOW.document.addEventListener('readystatechange', () => {\n          if (['interactive', 'complete'].includes(WINDOW.document!.readyState)) {\n            idleTransaction.sendAutoFinishSignal();\n          }\n        });\n\n        if (['interactive', 'complete'].includes(WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction as Transaction;\n  }\n\n  /** Start listener for interaction transactions */\n  private _registerInteractionListener(): void {\n    let inflightInteractionTransaction: IdleTransaction | undefined;\n    const registerInteractionTransaction = (): void => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = getActiveTransaction();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        DEBUG_BUILD &&\n          logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRoute.name) {\n        DEBUG_BUILD && logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context: TransactionContext = {\n        name: this._latestRoute.name,\n        op,\n        trimEnd: true,\n        data: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRoute.context\n            ? getSource(this._latestRoute.context)\n            : undefined || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n      }\n    });\n  }\n\n  /** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\n  private _registerInpInteractionListener(): void {\n    const handleEntries = ({ entries }: { entries: PerformanceEntry[] }): void => {\n      const client = getClient();\n      // We need to get the replay, user, and activeTransaction from the current scope\n      // so that we can associate replay id, profile id, and a user display to the span\n      const replay =\n        client !== undefined && client.getIntegrationByName !== undefined\n          ? (client.getIntegrationByName('Replay') as Integration & { getReplayId: () => string })\n          : undefined;\n      const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction();\n      const currentScope = getCurrentScope();\n      const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n      entries.forEach(entry => {\n        if (isPerformanceEventTiming(entry)) {\n          const interactionId = entry.interactionId;\n          if (interactionId === undefined) {\n            return;\n          }\n          const existingInteraction = this._interactionIdToRouteNameMapping[interactionId];\n          const duration = entry.duration;\n          const startTime = entry.startTime;\n          const keys = Object.keys(this._interactionIdToRouteNameMapping);\n          const minInteractionId =\n            keys.length > 0\n              ? keys.reduce((a, b) => {\n                  return this._interactionIdToRouteNameMapping[a].duration <\n                    this._interactionIdToRouteNameMapping[b].duration\n                    ? a\n                    : b;\n                })\n              : undefined;\n          // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n          // This is also checked in the web-vitals library.\n          if (entry.entryType === 'first-input') {\n            const matchingEntry = keys\n              .map(key => this._interactionIdToRouteNameMapping[key])\n              .some(interaction => {\n                return interaction.duration === duration && interaction.startTime === startTime;\n              });\n            if (matchingEntry) {\n              return;\n            }\n          }\n          // Interactions with an id of 0 and are not first-input are not valid.\n          if (!interactionId) {\n            return;\n          }\n          // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n          if (existingInteraction) {\n            existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n          } else if (\n            keys.length < MAX_INTERACTIONS ||\n            minInteractionId === undefined ||\n            duration > this._interactionIdToRouteNameMapping[minInteractionId].duration\n          ) {\n            // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n            const routeName = this._latestRoute.name;\n            const parentContext = this._latestRoute.context;\n            if (routeName && parentContext) {\n              if (minInteractionId && Object.keys(this._interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._interactionIdToRouteNameMapping[minInteractionId];\n              }\n              this._interactionIdToRouteNameMapping[interactionId] = {\n                routeName,\n                duration,\n                parentContext,\n                user,\n                activeTransaction,\n                replayId,\n                startTime,\n              };\n            }\n          }\n        }\n      });\n    };\n    addPerformanceInstrumentationHandler('event', handleEntries);\n    addPerformanceInstrumentationHandler('first-input', handleEntries);\n  }\n}\n\n/** Returns the value of a meta tag */\nexport function getMetaContent(metaName: string): string | undefined {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context: TransactionContext): TransactionSource | undefined {\n  const sourceFromAttributes = context.attributes && context.attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nfunction isPerformanceEventTiming(entry: PerformanceEntry): entry is PerformanceEventTiming {\n  return 'duration' in entry;\n}\n","import type { Transaction, TransactionContext } from '@sentry/types';\nimport { addHistoryInstrumentationHandler, browserPerformanceTimeOrigin, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nexport function instrumentRoutingWithDefaults<T extends Transaction>(\n  customStartTransaction: (context: TransactionContext) => T | undefined,\n  startTransactionOnPageLoad: boolean = true,\n  startTransactionOnLocationChange: boolean = true,\n): void {\n  if (!WINDOW || !WINDOW.location) {\n    DEBUG_BUILD && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl: string | undefined = WINDOW.location.href;\n\n  let activeTransaction: T | undefined;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: browserPerformanceTimeOrigin ? browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addHistoryInstrumentationHandler(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          DEBUG_BUILD && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n","import type { IdleTransaction, SpanStatusType } from '@sentry/core';\nimport { getActiveTransaction, spanToJSON } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { WINDOW } from './types';\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nexport function registerBackgroundTabDetection(): void {\n  if (WINDOW.document) {\n    WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = getActiveTransaction() as IdleTransaction;\n      if (WINDOW.document!.hidden && activeTransaction) {\n        const statusType: SpanStatusType = 'cancelled';\n\n        const { op, status } = spanToJSON(activeTransaction);\n\n        DEBUG_BUILD &&\n          logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    DEBUG_BUILD && logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n","import type { MeasurementUnit } from '@sentry/types';\n\nimport { getActiveTransaction } from './utils';\n\n/**\n * Adds a measurement to the current active transaction.\n */\nexport function setMeasurement(name: string, value: number, unit: MeasurementUnit): void {\n  // eslint-disable-next-line deprecation/deprecation\n  const transaction = getActiveTransaction();\n  if (transaction) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setMeasurement(name, value, unit);\n  }\n}\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    // Add environment and release from config\n    environment: config.environment,\n    release: config.release,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      // Apply tags if provided\n      if (config.tags) {\n        if (!event.tags) event.tags = {};\n        Object.assign(event.tags, config.tags);\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["_typeof","require","_regeneratorRuntime","module","exports","r","__esModule","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","this","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","isNodeEnv","isBrowserBundle","toString","process","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__SENTRY_BROWSER_BUNDLE__","getSDKSource","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","getter","definition","key","get","window","hmd","children","set","obj","prop","flarum","core","compat","isGlobalObj","Math","GLOBAL_OBJ","self","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_extends","assign","bind","arguments","apply","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","reverse","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","getComponentName","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","getFirstException","event","exception","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","err","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","reject","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","result","_executeHandlers","val","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","state","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","updateSession","session","context","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","fn","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","BAGGAGE_HEADER_NAME","SENTRY_BAGGAGE_KEY_PREFIX_REGEX","dynamicSamplingContextToSentryBaggageHeader","dynamicSamplingContext","entries","reduce","baggageHeader","_ref4","currentIndex","objectKey","objectValue","baggageEntry","encodeURIComponent","newBaggageHeader","objectToBaggageHeader","acc","_ref2","dscKey","dscValue","baggageHeaderToObject","keyOrValue","decodeURIComponent","trim","_ref3","TRACEPARENT_REGEXP","RegExp","propagationContextFromHeaders","sentryTrace","baggage","traceparentData","traceparent","parentSampled","matches","match","traceId","parentSpanId","extractTraceparentData","baggageObject","curr","currBaggageObject","_ref","SENTRY_BAGGAGE_KEY_PREFIX","baggageHeaderToDynamicSamplingContext","substring","spanId","sampled","dsc","generateSentryTraceHeader","sampledString","spanToTraceContext","span","_span$spanContext","spanContext","span_id","trace_id","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","spanToTraceHeader","_span$spanContext2","spanIsSampled","spanTimeInputToSeconds","ensureTimestampInSeconds","getTime","getSpanJSON","spanIsSpanClass","traceFlags","prepareEvent","scope","client","isolationScope","_options$normalizeDep","normalizeDepth","_options$normalizeMax","normalizeMaxBreadth","prepared","integrations","dist","_options$maxValueLeng","maxValueLength","request","url","applyClientOptions","integrationNames","sdk","concat","applyIntegrationsMetadata","stackParser","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","debugIdStackParserCache","filenameDebugIdMap","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","filename","stacktrace","frames","frame","debug_id","applyDebugIds","finalScope","captureContext","clone","Scope","update","getFinalScope","clientEventProcessors","getEventProcessors","globalScope","getScopeData","mergeScopeData","attachments","applyScopeDataToEvent","eventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","breadcrumbs","b","contexts","extra","trace","spans","normalizeEvent","WeakMap","captureContextKeys","captureException","getCurrentHub","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","captureEvent","addBreadcrumb","breadcrumb","getClient","getCurrentScope","getScope","getRootSpan","transaction","getDynamicSamplingContextFromClient","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","emit","getDynamicSamplingContextFromSpan","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","fingerprint","sdkProcessingMetadata","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","rootSpan","applySpanToEvent","maybeArray","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeData","propagationContext","mergeAndOverwriteScopeData","mergeVal","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","scopeToMerge","scopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","warn","syntheticException","originalException","captureMessage","SDK_VERSION","API_VERSION","parseFloat","Hub","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","_len","args","_key","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","addGlobalErrorInstrumentationHandler","instrumentError","onerror","msg","line","column","error","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","addGlobalUnhandledRejectionInstrumentationHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","addFetchInstrumentationHandler","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","addHistoryInstrumentationHandler","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","referrer","headers","Referer","HttpContext","_setPrototypeOf","_inheritsLoose","toPropertyKey","toPrimitive","_defineProperties","_createClass","SpanStatus","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","setHttpStatus","httpStatus","setData","spanStatus","getSpanStatusFromHttpCode","setStatus","SpanRecorder","maxlen","_maxlen","spanRecorder","Span","_traceId","_spanId","_startTime","instrumenter","_attributes","setAttributes","attributes","_name","_parentSpanId","_sampled","_status","_endTime","exclusiveTime","_exclusiveTime","_measurements","measurements","_proto2","startChild","childSpan","_extends4","setAttribute","setName","updateName","isSuccess","end","toTraceparent","toContext","_getData","updateWithContext","getTraceContext","start_timestamp","_metrics_summary","getMetricSummaryJsonForSpan","profile_id","exclusive_time","isRecording","hasData","hasAttributes","string","startTime","endTime","hasTracingEnabled","maybeOptions","enableTracing","startInactiveSpan","ctx","normalizeContext","parentSpan","onlyIfParent","temporaryScope","forceTransaction","_parentSpan$spanConte","_isolationScope$getPr","ISOLATION_SCOPE_ON_START_SPAN_FIELD","SCOPE_ON_START_SPAN_FIELD","setCapturedScopesOnSpan","createChildSpanOrTransaction","Transaction","_Span","transactionContext","_hub","_metadata","_trimEnd","trimEnd","incomingDynamicSamplingContext","initSpanRecorder","setMeasurement","unit","setMetadata","newMetadata","timestampInS","_finishTransaction","getDynamicSamplingContext","setHub","getProfileId","finishedSpans","endTimes","current","_getCapturedScopesOnS","capturedSpanScope","capturedSpanIsolationScope","transaction_info","recordDroppedEvent","newName","spanMetadata","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","IDLE_TRANSACTION_FINISH_REASONS","IdleTransactionSpanRecorder","_SpanRecorder","_pushActivity","_popActivity","transactionSpanId","originalEnd","IdleTransaction","_Transaction","_idleHub","_idleTimeout","_finalTimeout","_heartbeatInterval","_onScope","delayAutoFinishUntilSignal","activities","_heartbeatCounter","_finished","_idleTimeoutCanceledPermanently","_beforeFinishCallbacks","_finishReason","_autoFinishAllowed","_restartIdleTimeout","endTimestampInS","spanStartedBeforeTransactionFinish","timeoutWithMarginOfError","registerBeforeFinishCallback","_pingHeartbeat","cancelIdleTimeout","_temp","restartOnChildSpanChange","_idleTimeoutID","setFinishReason","sendAutoFinishSignal","_beat","heartbeatString","_prevHeartbeatString","_this7","getActiveTransaction","maybeHub","errorsInstrumented","errorCallback","activeTransaction","sampleTransaction","samplingContext","Number","tracesSampler","tracesSampleRate","isValidSampleRate","rate","_startTransaction","_experiments","maxSpans","startIdleTransaction","onScope","tag","po","bindReporter","metric","reportAllChanges","prevValue","delta","forceReport","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","initMetric","navigationType","prerendering","rating","floor","observe","opts","PerformanceObserver","supportedEntryTypes","list","getEntries","buffered","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","getVisibilityWatcher","Infinity","timeStamp","interactionCountEstimate","minKnownInteractionId","maxKnownInteractionId","updateEstimate","interactionId","min","initInteractionCountPolyfill","durationThreshold","getInteractionCountForNavigation","interactionCount","longestInteractionList","longestInteractionMap","processEntry","entry","minLongestInteraction","existingInteraction","latency","interaction","reportedMetricIDs","whenReady","_previousCls","_previousFid","_previousLcp","_previousTtfb","_previousInp","addLcpInstrumentationHandler","stopOnCallback","addMetricObserver","instrumentLcp","addPerformanceInstrumentationHandler","instrumentPerformanceObserver","getCleanupCallback","instrumentCls","onReport","report","sessionValue","sessionEntries","handleEntries","hadRecentInput","firstSessionEntry","lastSessionEntry","stopListening","takeRecords","onCLS","instrumentFid","visibilityWatcher","handleEntry","processingStart","disconnect","onFID","lastEntry","capture","onLCP","instrumentTtfb","responseStart","onTTFB","instrumentInp","prevEntry","candidateInteractionIndex","inp","onINP","previousValue","DSN_REGEX","dsnToString","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","makeDsn","exec","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","_step2","_iterator2","itemHeaders","payload","stringifiedPayload","buffers","_step3","totalLength","buf","merged","offset","_iterator3","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","_metadataOrEvent$sdk","createEventEnvelopeHeaders","sdkInfo","tunnel","sent_at","createSpanItem","isMeasurementValue","isFinite","_startChild","_objectWithoutPropertiesLoose","_excluded","msToSec","time","getBrowserPerformanceAPI","_lcpEntry","_clsEntry","_performanceCursor","startTrackingWebVitals","fidCallback","_ref5","clsCallback","lcpCallback","ttfbCallback","_ref6","INP_ENTRY_MAP","click","pointerdown","pointerup","mousedown","mouseup","touchstart","touchend","mouseover","mouseout","mouseenter","mouseleave","pointerover","pointerout","pointerenter","pointerleave","dragstart","dragend","drag","dragenter","dragleave","dragover","drop","keydown","keyup","keypress","_addPerformanceNavigationTiming","eventEnd","start","setResourceEntrySizeData","dataKey","entryVal","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","enableHTTPTimings","tracingOrigins","tracePropagationTargets","instrumentOutgoingRequests","_traceFetch$traceXHR$","shouldCreateSpanForRequest","shouldCreateSpan","shouldAttachHeadersWithTargets","shouldAttachHeaders","createdSpan","spanOrigin","shouldCreateSpanResult","_handlerData$fetchDat","fullUrl","URL","getFullURL","__span","requestSpan","sentryTraceHeader","sentryBaggageHeader","newHeaders","existingBaggageHeader","newBaggageHeaders","addTracingHeadersToFetchRequest","contentLength","contentLengthNum","endSpan","instrumentFetchRequest","addHTTPTimings","__sentry_xhr_span_id__","setRequestHeader","setHeaderOnXhr","xhrCallback","cleanup","nextHopProtocol","initiatorType","isPerformanceResourceTiming","endsWith","resourceTiming","_extractNetworkProtoc","char","_nextHopProtocol$spli","extractNetworkProtocol","timingSpanData","getAbsoluteTime","redirectStart","fetchStart","domainLookupStart","domainLookupEnd","connectStart","secureConnectionStart","connectEnd","requestStart","responseEnd","resourceTimingEntryToSpanData","DEFAULT_BROWSER_TRACING_OPTIONS","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","enableLongTask","enableInp","interactionsSampleRate","BrowserTracing","_hasSetTracePropagationTargets","_collectWebVitals","_interactionIdToRouteNameMapping","interactionIdtoRouteNameMapping","inpCallback","interactionIdToRouteNameMapping","_ref7","find","interactionType","routeName","parentContext","replayId","userDisplay","profileId","replay_id","getSampleRate","transport","getTransport","send","_trackINP","startTrackingINP","enableInteractions","_latestRoute","_getCurrentHub","_this$options","instrumentRouting","_createRouteTransaction","onStartRouteTransaction","_registerInteractionListener","_registerInpInteractionListener","expandedContext","_this$options2","beforeNavigate","isPageloadTransaction","_propagationContextFr","getMetaContent","modifiedContext","finalContext","idleTransaction","performanceEntries","transactionStartTime","_addRequest","_addNavigationSpans","measureStartTimestamp","measureEndTimestamp","_addMeasureSpans","firstHidden","shouldRecord","resourceUrl","parsedUrl","renderBlockingStatus","_addResourceSpans","connection","effectiveType","rtt","deviceMemory","hardwareConcurrency","_trackNavigator","_addTtfbRequestTimeToMeasurements","oldValue","measurementTimestamp","normalizedValue","fidMark","cls","measurementName","size","sources","node","_tagMetricInfo","addPerformanceEntries","inflightInteractionTransaction","registerInteractionTransaction","_data","_this3$options","currentTransaction","getSource","replay","getIntegrationByName","getReplayId","currentScope","isPerformanceEventTiming","minInteractionId","metaName","selector","metaTag","querySelector","sourceFromAttributes","sourceFromData","sourceFromMetadata","asyncGeneratorStep","_asyncToGenerator","_next","_throw","_getPrototypeOf","_isNativeReflectConstruct","valueOf","Reflect","construct","_wrapNativeSuper","isNativeFunction","Wrapper","isNativeReflectConstruct","_optionalChain","ops","lastAccessLHS","removeTrailingSlash","SentryError","_Error","logLevel","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","maybeTags","metricType","serializeMetricBuckets","createMetricEnvelopeItem","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_dsn","_transport","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","sendSession","getSdkMetadata","flush","timeout","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","eventProcessor","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","sendResponse","createSessionEnvelope","eventOrCount","sendClientReports","count","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","ticked","interval","clearInterval","_prepareEvent","_processEvent","finalEvent","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","_this8","_clearOutcomes","outcomes","_key$split","quantity","isRateLimited","limits","all","disabledUntil","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parse","parseRetryAfterHeader","isBrowser","NodeType$1","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","stylesheet","styleSheets","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","getContext","width","getImageData","originalGetImageData","Uint32Array","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","Proxy","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","StyleSheetMirror","styleIDMap","idStyleMap","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","attributeName","isInputMasked","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref0","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","lastInputValue","currentWindow","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref13","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref16","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref1","_ref10","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref11","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref12","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref14","_ref15","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref17","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","initSelectionObserver","customElementObserver","_ref18","customElementCb","define","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this0","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this1","child","_this10","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this11","iframeElement","manager","option","CanvasManagerNoop","_proto0","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto1","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto10","_this12","onRequestAnimationFrame","thisBuffer","destroy","record","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","_step7","_iterator7","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","timestampToMs","timestampToS","addBreadcrumbEvent","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto11","addListeners","_this13","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this14","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this15","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","decodedBodySize","encodedBodySize","responseStatus","transferSize","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","EventBufferSizeExceededError","EventBufferArray","events","_totalSize","hasCheckout","_proto12","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this16","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto13","ensureReady","_this17","_ensureReadyPromise","_ref21","success","terminate","_this18","_getAndIncrementId","_ref22","EventBufferCompressionWorker","_earliestTimestamp","_proto14","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto15","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref24","sessionSampleRate","allowBuffering","_ref24$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref26","maxReplayDuration","sessionIdleExpire","_ref26$targetTime","shouldRefreshSession","_ref27","loadOrCreateSession","_ref28","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee1","replayOptions","eventAfterPossibleCallback","_context10","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","isCustomEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","__sentry__baseTransport__","isBaseTransportSend","replayContext","traceIds","handleTransactionEvent","errorIds","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref29","addNetworkBreadcrumb","hubOrClient","isHub","checkDsn","checkTunnel","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","info","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","baseURI","fixedUrl","getFullUrl","_captureFetchBreadcrumbToReplay","_callee10","_context11","_prepareFetchData","_x8","_x9","_x0","_prepareFetchData2","_callee11","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context12","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref30","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x1","_x10","_x11","_x12","_getResponseInfo2","_callee12","_ref31","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context13","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref32","_x13","_parseFetchResponseBody2","_callee13","_context14","_tryCloneResponse","_tryGetResponseText","allHeaders","_x14","_getResponseText2","_getResponseText","txt","_callee14","_context15","_captureXhrBreadcrumbToReplay","_callee15","_context16","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref33","requestBody","requestWarning","_ref34","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x15","_x16","_x17","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x18","_addMemoryEntry","_callee16","_context17","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","prepareRecordingData","_ref35","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x19","_prepareReplayEvent","_callee17","_ref36","eventHint","preparedEvent","_ref46","_context18","platform","sendReplayRequest","_x20","_sendReplayRequest","_callee18","_ref37","segment_id","eventContext","preparedRecordingData","baseEvent","rateLimits","_context19","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","RateLimitError","_Error2","_Error3","_this19","sendReplay","_x21","_x22","_sendReplay","_callee20","replayData","retryConfig","_context21","_retryCount","_callee19","_context20","THROTTLED","ReplayContainer","_ref38","_this20","recordingOptions","__init5","__init6","replayPerformanceEntries","_lastActivity","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","_flush","debounced","cancel","debounce","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto16","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref39","_ref39$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x23","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref40$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x24","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","_clearContext","_this21","_ref23","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x25","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","addPerformanceEntry","onEntries","_ref19","clearCallbacks","_ref20","getLargestContentfulPaint","clearCallback","setupPerformanceObserver","_this22","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this23","_this24","_this25","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this26","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context0","_this27","_ref41","_callee0","_temp4","_ref42$force","tooShort","tooLong","_context1","minReplayDuration","_flushLock","_x26","_this28","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref45","_ref45$flushMinDelay","_ref45$flushMaxDelay","_ref45$minReplayDurat","_ref45$maxReplayDurat","_ref45$stickySession","_ref45$useCompression","_ref45$_experiments","_ref45$maskAllText","_ref45$maskAllInputs","_ref45$blockAllMedia","_ref45$mutationBreadc","_ref45$mutationLimit","_ref45$slowClickTimeo","_ref45$slowClickIgnor","_ref45$networkDetailA","_ref45$networkDetailD","_ref45$networkCapture","_ref45$networkRequest","_ref45$networkRespons","_ref45$mask","mask","_ref45$maskAttributes","maskAttributes","_ref45$unmask","unmask","_ref45$block","block","_ref45$unblock","unblock","_ref45$ignore","ignore","maskFn","privacyOptions","_ref43","getPrivacyOptions","password","_ref44","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto17","_this29","_setup","_initialize","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","getEventForEnvelopeItem","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","filteredEnvelope","recordEnvelopeLoss","createTransport","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","makeLogger","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}