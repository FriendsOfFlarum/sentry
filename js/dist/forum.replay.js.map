{"version":3,"file":"forum.replay.js","mappings":"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","sources":["webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://@fof/sentry/../../src/node.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/regenerator/index.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/typeof.js","webpack://@fof/sentry/../../src/env.ts","webpack://@fof/sentry/webpack/bootstrap","webpack://@fof/sentry/webpack/runtime/compat get default export","webpack://@fof/sentry/webpack/runtime/define property getters","webpack://@fof/sentry/webpack/runtime/global","webpack://@fof/sentry/webpack/runtime/harmony module decorator","webpack://@fof/sentry/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/sentry/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/sentry/../../src/worldwide.ts","webpack://@fof/sentry/../../src/logger.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/sentry/../../src/is.ts","webpack://@fof/sentry/../../src/browser.ts","webpack://@fof/sentry/../../src/string.ts","webpack://@fof/sentry/../../src/object.ts","webpack://@fof/sentry/../../src/misc.ts","webpack://@fof/sentry/../../src/debug-build.ts","webpack://@fof/sentry/../../src/syncpromise.ts","webpack://@fof/sentry/../../src/eventProcessors.ts","webpack://@fof/sentry/../../src/time.ts","webpack://@fof/sentry/../../src/constants.ts","webpack://@fof/sentry/../../src/session.ts","webpack://@fof/sentry/../../src/stacktrace.ts","webpack://@fof/sentry/../../src/normalize.ts","webpack://@fof/sentry/../../src/memo.ts","webpack://@fof/sentry/../../../src/utils/spanUtils.ts","webpack://@fof/sentry/../../../src/utils/prepareEvent.ts","webpack://@fof/sentry/../../src/scope.ts","webpack://@fof/sentry/../../src/exports.ts","webpack://@fof/sentry/../../../src/utils/getRootSpan.ts","webpack://@fof/sentry/../../../src/tracing/dynamicSamplingContext.ts","webpack://@fof/sentry/../../../src/utils/applyScopeDataToEvent.ts","webpack://@fof/sentry/../../src/version.ts","webpack://@fof/sentry/../../src/hub.ts","webpack://@fof/sentry/../../src/integration.ts","webpack://@fof/sentry/../../../src/integrations/inboundfilters.ts","webpack://@fof/sentry/../../../src/integrations/functiontostring.ts","webpack://@fof/sentry/../../../src/helpers.ts","webpack://@fof/sentry/../../../../src/integrations/trycatch.ts","webpack://@fof/sentry/../../../src/instrument/_handlers.ts","webpack://@fof/sentry/../../../src/instrument/globalError.ts","webpack://@fof/sentry/../../../src/instrument/globalUnhandledRejection.ts","webpack://@fof/sentry/../../../src/eventbuilder.ts","webpack://@fof/sentry/../../../../src/integrations/globalhandlers.ts","webpack://@fof/sentry/../../../src/instrument/console.ts","webpack://@fof/sentry/../../../src/instrument/dom.ts","webpack://@fof/sentry/../../../src/instrument/xhr.ts","webpack://@fof/sentry/../../src/supports.ts","webpack://@fof/sentry/../../../src/instrument/fetch.ts","webpack://@fof/sentry/../../../src/vendor/supportsHistory.ts","webpack://@fof/sentry/../../../src/instrument/history.ts","webpack://@fof/sentry/../../src/severity.ts","webpack://@fof/sentry/../../src/url.ts","webpack://@fof/sentry/../../../../src/integrations/breadcrumbs.ts","webpack://@fof/sentry/../../src/aggregate-errors.ts","webpack://@fof/sentry/../../../../src/integrations/linkederrors.ts","webpack://@fof/sentry/../../../../src/integrations/httpcontext.ts","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","webpack://@fof/sentry/./node_modules/@babel/runtime/helpers/esm/construct.js","webpack://@fof/sentry/../../../src/buildPolyfills/_optionalChain.ts","webpack://@fof/sentry/../../../src/utils/isSentryRequestUrl.ts","webpack://@fof/sentry/../../src/dsn.ts","webpack://@fof/sentry/../../src/envelope.ts","webpack://@fof/sentry/../../src/error.ts","webpack://@fof/sentry/../../src/api.ts","webpack://@fof/sentry/../../../src/metrics/envelope.ts","webpack://@fof/sentry/../../../src/metrics/utils.ts","webpack://@fof/sentry/../../src/baseclient.ts","webpack://@fof/sentry/../../src/ratelimit.ts","webpack://@fof/sentry/../../src/isBrowser.ts","webpack://@fof/sentry/../../../src/common/debug-build.ts","webpack://@fof/sentry/../../../src/browser/types.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getNavigationEntry.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getActivationStart.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/onHidden.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/getVisibilityWatcher.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/observe.ts","webpack://@fof/sentry/../../../../src/browser/web-vitals/getLCP.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/initMetric.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/generateUniqueID.ts","webpack://@fof/sentry/../../../../../src/browser/web-vitals/lib/bindReporter.ts","webpack://@fof/sentry/../../../src/browser/instrument.ts","webpack://@fof/sentry/../../../src/constants.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","webpack://@fof/sentry/../../../src/buildPolyfills/_nullishCoalesce.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","webpack://@fof/sentry/../../../src/coreHandlers/util/onWindowOpen.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","webpack://@fof/sentry/../../../src/util/timestamp.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addBreadcrumbEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/domUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleClick.ts","webpack://@fof/sentry/../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","webpack://@fof/sentry/../../../src/util/createBreadcrumb.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/getAttributesToRecord.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleDom.ts","webpack://@fof/sentry/../../../src/util/createPerformanceEntries.ts","webpack://@fof/sentry/../../../src/coreHandlers/performanceObserver.ts","webpack://@fof/sentry/../../../src/debug-build.ts","webpack://@fof/sentry/../../../src/eventBuffer/error.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferArray.ts","webpack://@fof/sentry/../../../src/eventBuffer/WorkerHandler.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferCompressionWorker.ts","webpack://@fof/sentry/../../../src/eventBuffer/EventBufferProxy.ts","webpack://@fof/sentry/../../../src/util/hasSessionStorage.ts","webpack://@fof/sentry/../../../src/util/isSampled.ts","webpack://@fof/sentry/../../../src/session/Session.ts","webpack://@fof/sentry/../../../src/session/saveSession.ts","webpack://@fof/sentry/../../../src/session/createSession.ts","webpack://@fof/sentry/../../../src/util/isExpired.ts","webpack://@fof/sentry/../../../src/util/isSessionExpired.ts","webpack://@fof/sentry/../../../src/session/shouldRefreshSession.ts","webpack://@fof/sentry/../../../src/session/loadOrCreateSession.ts","webpack://@fof/sentry/../../../src/session/fetchSession.ts","webpack://@fof/sentry/../../../src/util/addEvent.ts","webpack://@fof/sentry/../../../src/util/eventUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleAfterSendEvent.ts","webpack://@fof/sentry/../../../src/util/createPerformanceSpans.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/shouldFilterRequest.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/networkUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/fetchUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/xhrUtils.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleFetch.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleXhr.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleScope.ts","webpack://@fof/sentry/../../../src/util/addGlobalListeners.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleHistory.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleGlobalEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","webpack://@fof/sentry/../../../src/util/isRrwebError.ts","webpack://@fof/sentry/../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleBeforeSendEvent.ts","webpack://@fof/sentry/../../../src/util/addMemoryEntry.ts","webpack://@fof/sentry/../../../src/util/handleRecordingEmit.ts","webpack://@fof/sentry/../../../src/types/rrweb.ts","webpack://@fof/sentry/../../../src/util/createReplayEnvelope.ts","webpack://@fof/sentry/../../../src/util/prepareRecordingData.ts","webpack://@fof/sentry/../../../src/util/prepareReplayEvent.ts","webpack://@fof/sentry/../../../src/util/sendReplayRequest.ts","webpack://@fof/sentry/../../../src/util/sendReplay.ts","webpack://@fof/sentry/../../../src/util/throttle.ts","webpack://@fof/sentry/../../../src/replay.ts","webpack://@fof/sentry/../../../src/util/debounce.ts","webpack://@fof/sentry/../../../src/session/clearSession.ts","webpack://@fof/sentry/../../src/semanticAttributes.ts","webpack://@fof/sentry/../../../src/eventBuffer/index.ts","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/index.js","webpack://@fof/sentry/../../../../replay-worker/build/npm/esm/worker.ts","webpack://@fof/sentry/../../../src/coreHandlers/handleKeyboardEvent.ts","webpack://@fof/sentry/../../../src/util/getPrivacyOptions.ts","webpack://@fof/sentry/../../../src/integration.ts","webpack://@fof/sentry/../../../src/util/maskAttribute.ts","webpack://@fof/sentry/../../../src/client.ts","webpack://@fof/sentry/../../../src/utils/sdkMetadata.ts","webpack://@fof/sentry/../../../src/userfeedback.ts","webpack://@fof/sentry/../../src/clientreport.ts","webpack://@fof/sentry/../../../src/transports/base.ts","webpack://@fof/sentry/../../../../src/transports/utils.ts","webpack://@fof/sentry/../../../../src/transports/fetch.ts","webpack://@fof/sentry/../../src/promisebuffer.ts","webpack://@fof/sentry/../../../src/stack-parsers.ts","webpack://@fof/sentry/../../../../src/integrations/dedupe.ts","webpack://@fof/sentry/../../../src/sdk.ts","webpack://@fof/sentry/../../../src/captureconsole.ts","webpack://@fof/sentry/./src/forum/index.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return r;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    r = {},\n    e = Object.prototype,\n    n = e.hasOwnProperty,\n    o = \"function\" == typeof Symbol ? Symbol : {},\n    i = o.iterator || \"@@iterator\",\n    a = o.asyncIterator || \"@@asyncIterator\",\n    u = o.toStringTag || \"@@toStringTag\";\n  function c(t, r, e, n) {\n    return Object.defineProperty(t, r, {\n      value: e,\n      enumerable: !n,\n      configurable: !n,\n      writable: !n\n    });\n  }\n  try {\n    c({}, \"\");\n  } catch (t) {\n    c = function c(t, r, e) {\n      return t[r] = e;\n    };\n  }\n  function h(r, e, n, o) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype);\n    return c(a, \"_invoke\", function (r, e, n) {\n      var o = 1;\n      return function (i, a) {\n        if (3 === o) throw Error(\"Generator is already running\");\n        if (4 === o) {\n          if (\"throw\" === i) throw a;\n          return {\n            value: t,\n            done: !0\n          };\n        }\n        for (n.method = i, n.arg = a;;) {\n          var u = n.delegate;\n          if (u) {\n            var c = d(u, n);\n            if (c) {\n              if (c === f) continue;\n              return c;\n            }\n          }\n          if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n            if (1 === o) throw o = 4, n.arg;\n            n.dispatchException(n.arg);\n          } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n          o = 3;\n          var h = s(r, e, n);\n          if (\"normal\" === h.type) {\n            if (o = n.done ? 4 : 2, h.arg === f) continue;\n            return {\n              value: h.arg,\n              done: n.done\n            };\n          }\n          \"throw\" === h.type && (o = 4, n.method = \"throw\", n.arg = h.arg);\n        }\n      };\n    }(r, n, new Context(o || [])), !0), a;\n  }\n  function s(t, r, e) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(r, e)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  r.wrap = h;\n  var f = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var l = {};\n  c(l, i, function () {\n    return this;\n  });\n  var p = Object.getPrototypeOf,\n    y = p && p(p(x([])));\n  y && y !== e && n.call(y, i) && (l = y);\n  var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l);\n  function g(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (r) {\n      c(t, r, function (t) {\n        return this._invoke(r, t);\n      });\n    });\n  }\n  function AsyncIterator(t, r) {\n    function e(o, i, a, u) {\n      var c = s(t[o], t, i);\n      if (\"throw\" !== c.type) {\n        var h = c.arg,\n          f = h.value;\n        return f && \"object\" == _typeof(f) && n.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) {\n          e(\"next\", t, a, u);\n        }, function (t) {\n          e(\"throw\", t, a, u);\n        }) : r.resolve(f).then(function (t) {\n          h.value = t, a(h);\n        }, function (t) {\n          return e(\"throw\", t, a, u);\n        });\n      }\n      u(c.arg);\n    }\n    var o;\n    c(this, \"_invoke\", function (t, n) {\n      function i() {\n        return new r(function (r, o) {\n          e(t, n, r, o);\n        });\n      }\n      return o = o ? o.then(i, i) : i();\n    }, !0);\n  }\n  function d(r, e) {\n    var n = e.method,\n      o = r.i[n];\n    if (o === t) return e.delegate = null, \"throw\" === n && r.i[\"return\"] && (e.method = \"return\", e.arg = t, d(r, e), \"throw\" === e.method) || \"return\" !== n && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), f;\n    var i = s(o, r.i, e.arg);\n    if (\"throw\" === i.type) return e.method = \"throw\", e.arg = i.arg, e.delegate = null, f;\n    var a = i.arg;\n    return a ? a.done ? (e[r.r] = a.value, e.next = r.n, \"return\" !== e.method && (e.method = \"next\", e.arg = t), e.delegate = null, f) : a : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f);\n  }\n  function w(t) {\n    this.tryEntries.push(t);\n  }\n  function m(r) {\n    var e = r[4] || {};\n    e.type = \"normal\", e.arg = t, r[4] = e;\n  }\n  function Context(t) {\n    this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0);\n  }\n  function x(r) {\n    if (null != r) {\n      var e = r[i];\n      if (e) return e.call(r);\n      if (\"function\" == typeof r.next) return r;\n      if (!isNaN(r.length)) {\n        var o = -1,\n          a = function e() {\n            for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e;\n            return e.value = t, e.done = !0, e;\n          };\n        return a.next = a;\n      }\n    }\n    throw new TypeError(_typeof(r) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, \"constructor\", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), r.isGeneratorFunction = function (t) {\n    var r = \"function\" == typeof t && t.constructor;\n    return !!r && (r === GeneratorFunction || \"GeneratorFunction\" === (r.displayName || r.name));\n  }, r.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, \"GeneratorFunction\")), t.prototype = Object.create(v), t;\n  }, r.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () {\n    return this;\n  }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(h(t, e, n, o), i);\n    return r.isGeneratorFunction(e) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, g(v), c(v, u, \"Generator\"), c(v, i, function () {\n    return this;\n  }), c(v, \"toString\", function () {\n    return \"[object Generator]\";\n  }), r.keys = function (t) {\n    var r = Object(t),\n      e = [];\n    for (var n in r) e.unshift(n);\n    return function t() {\n      for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t;\n      return t.done = !0, t;\n    };\n  }, r.values = x, Context.prototype = {\n    constructor: Context,\n    reset: function reset(r) {\n      if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0][4];\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(r) {\n      if (this.done) throw r;\n      var e = this;\n      function n(t) {\n        a.type = \"throw\", a.arg = r, e.next = t;\n      }\n      for (var o = e.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i[4],\n          u = this.prev,\n          c = i[1],\n          h = i[2];\n        if (-1 === i[0]) return n(\"end\"), !1;\n        if (!c && !h) throw Error(\"try statement without catch or finally\");\n        if (null != i[0] && i[0] <= u) {\n          if (u < c) return this.method = \"next\", this.arg = t, n(c), !0;\n          if (u < h) return n(h), !1;\n        }\n      }\n    },\n    abrupt: function abrupt(t, r) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var n = this.tryEntries[e];\n        if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) {\n          var o = n;\n          break;\n        }\n      }\n      o && (\"break\" === t || \"continue\" === t) && o[0] <= r && r <= o[2] && (o = null);\n      var i = o ? o[4] : {};\n      return i.type = t, i.arg = r, o ? (this.method = \"next\", this.next = o[2], f) : this.complete(i);\n    },\n    complete: function complete(t, r) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && r && (this.next = r), f;\n    },\n    finish: function finish(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[2] === t) return this.complete(e[4], e[3]), m(e), f;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var e = this.tryEntries[r];\n        if (e[0] === t) {\n          var n = e[4];\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            m(e);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(r, e, n) {\n      return this.delegate = {\n        i: x(r),\n        r: e,\n        n: n\n      }, \"next\" === this.method && (this.arg = t), f;\n    }\n  }, r;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\nimport { isBrowserBundle } from './env';\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nexport function loadModule<T>(moduleName: string): T | undefined {\n  let mod: T | undefined;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) as T;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\ndeclare const __SENTRY_BROWSER_BUNDLE__: boolean | undefined;\n\nexport type SdkSource = 'npm' | 'cdn' | 'loader';\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nexport function isBrowserBundle(): boolean {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nexport function getSDKSource(): SdkSource {\n  // @ts-expect-error __SENTRY_SDK_SOURCE__ is injected by rollup during build process\n  return __SENTRY_SDK_SOURCE__;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n *\n * Note: This file was originally called `global.ts`, but was changed to unblock users which might be doing\n * string replaces with bundlers like Vite for `global` (would break imports that rely on importing from utils/src/global).\n *\n * Why worldwide?\n *\n * Why not?\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { Integration } from '@sentry/types';\n\nimport type { SdkSource } from './env';\n\n/** Internal global with common properties and Sentry extensions  */\nexport interface InternalGlobal {\n  navigator?: { userAgent?: string };\n  console: Console;\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  onerror?: {\n    (event: object | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  onunhandledrejection?: {\n    (event: unknown): boolean;\n    __SENTRY_INSTRUMENTED__?: true;\n    __SENTRY_LOADER__?: true;\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  SENTRY_SDK_SOURCE?: SdkSource;\n  /**\n   * Debug IDs are indirectly injected by Sentry CLI or bundler plugins to directly reference a particular source map\n   * for resolving of a source file. The injected code will place an entry into the record for each loaded bundle/JS\n   * file.\n   */\n  _sentryDebugIds?: Record<string, string>;\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n  /**\n   * Raw module metadata that is injected by bundler plugins.\n   *\n   * Keys are `error.stack` strings, values are the metadata.\n   */\n  _sentryModuleMetadata?: Record<string, any>;\n}\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj: { Math?: Math }): any | undefined {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nexport const GLOBAL_OBJ: InternalGlobal =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function (this: any) {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nexport function getGlobalObject<T>(): T & InternalGlobal {\n  return GLOBAL_OBJ as T & InternalGlobal;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nexport function getGlobalSingleton<T>(name: keyof InternalGlobal['__SENTRY__'], creator: () => T, obj?: unknown): T {\n  const gbl = (obj || GLOBAL_OBJ) as InternalGlobal;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nexport const CONSOLE_LEVELS: readonly ConsoleLevel[] = [\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'log',\n  'assert',\n  'trace',\n] as const;\n\ntype LoggerMethod = (...args: unknown[]) => void;\ntype LoggerConsoleMethods = Record<ConsoleLevel, LoggerMethod>;\n\n/** This may be mutated by the console instrumentation. */\nexport const originalConsoleMethods: {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key in ConsoleLevel]?: (...args: any[]) => void;\n} = {};\n\n/** JSDoc */\ninterface Logger extends LoggerConsoleMethods {\n  disable(): void;\n  enable(): void;\n  isEnabled(): boolean;\n}\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nexport function consoleSandbox<T>(callback: () => T): T {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const console = GLOBAL_OBJ.console as Console;\n  const wrappedFuncs: Partial<LoggerConsoleMethods> = {};\n\n  const wrappedLevels = Object.keys(originalConsoleMethods) as ConsoleLevel[];\n\n  // Restore all wrapped console methods\n  wrappedLevels.forEach(level => {\n    const originalConsoleMethod = originalConsoleMethods[level] as LoggerMethod;\n    wrappedFuncs[level] = console[level] as LoggerMethod | undefined;\n    console[level] = originalConsoleMethod;\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    wrappedLevels.forEach(level => {\n      console[level] = wrappedFuncs[level] as LoggerMethod;\n    });\n  }\n}\n\nfunction makeLogger(): Logger {\n  let enabled = false;\n  const logger: Partial<Logger> = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n    isEnabled: () => enabled,\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args: any[]) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger as Logger;\n}\n\nexport const logger = makeLogger();\n","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport type { ParameterizedString, PolymorphicEvent, Primitive } from '@sentry/types';\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: unknown): wat is Error {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat: unknown, className: string): boolean {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: unknown): boolean {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: unknown): boolean {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: unknown): wat is string {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given string is parameterized\n * {@link isParameterizedString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isParameterizedString(wat: unknown): wat is ParameterizedString {\n  return (\n    typeof wat === 'object' &&\n    wat !== null &&\n    '__sentry_template_string__' in wat &&\n    '__sentry_template_values__' in wat\n  );\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: unknown): wat is Primitive {\n  return wat === null || isParameterizedString(wat) || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal, or a class instance.\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: unknown): wat is Record<string, unknown> {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: unknown): wat is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: unknown): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: unknown): wat is RegExp {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): wat is PromiseLike<any> {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: unknown): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isNaN(wat: unknown): boolean {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\ninterface VueViewModel {\n  // Vue3\n  __isVue?: boolean;\n  // Vue2\n  _isVue?: boolean;\n}\n/**\n * Checks whether given value's type is a Vue ViewModel.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isVueViewModel(wat: unknown): boolean {\n  // Not using Object.prototype.toString because in Vue 3 it would read the instance's Symbol(Symbol.toStringTag) property.\n  return !!(typeof wat === 'object' && wat !== null && ((wat as VueViewModel).__isVue || (wat as VueViewModel)._isVue));\n}\n","import { isString } from './is';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\ntype SimpleNode = {\n  parentNode: SimpleNode;\n} | null;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nexport function htmlTreeAsString(\n  elem: unknown,\n  options: string[] | { keyAttrs?: string[]; maxStringLength?: number } = {},\n): string {\n  if (!elem) {\n    return '<unknown>';\n  }\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem as SimpleNode;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el: unknown, keyAttrs?: string[]): string {\n  const elem = el as {\n    tagName?: string;\n    id?: string;\n    className?: string;\n    getAttribute(key: string): string;\n  };\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  // @ts-expect-error WINDOW has HTMLElement\n  if (WINDOW.HTMLElement) {\n    // If using the component name annotation plugin, this value may be available on the DOM node\n    if (elem instanceof HTMLElement && elem.dataset && elem.dataset['sentryComponent']) {\n      return elem.dataset['sentryComponent'];\n    }\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && isString(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDomElement<E = any>(selector: string): E | null {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) as unknown as E;\n  }\n  return null;\n}\n\n/**\n * Given a DOM element, traverses up the tree until it finds the first ancestor node\n * that has the `data-sentry-component` attribute. This attribute is added at build-time\n * by projects that have the component name annotation plugin installed.\n *\n * @returns a string representation of the component for the provided DOM element, or `null` if not found\n */\nexport function getComponentName(elem: unknown): string | null {\n  // @ts-expect-error WINDOW has HTMLElement\n  if (!WINDOW.HTMLElement) {\n    return null;\n  }\n\n  let currentElem = elem as SimpleNode;\n  const MAX_TRAVERSE_HEIGHT = 5;\n  for (let i = 0; i < MAX_TRAVERSE_HEIGHT; i++) {\n    if (!currentElem) {\n      return null;\n    }\n\n    if (currentElem instanceof HTMLElement && currentElem.dataset['sentryComponent']) {\n      return currentElem.dataset['sentryComponent'];\n    }\n\n    currentElem = currentElem.parentNode;\n  }\n\n  return null;\n}\n","import { isRegExp, isString, isVueViewModel } from './is';\n\nexport { escapeStringForRegex } from './vendor/escapeStringForRegex';\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nexport function truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line: string, colno: number): string {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function safeJoin(input: any[], delimiter?: string): string {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n      // console warnings. This happens when a Vue template is rendered with\n      // an undeclared variable, which we try to stringify, ultimately causing\n      // Vue to issue another warning which repeats indefinitely.\n      // see: https://github.com/getsentry/sentry-javascript/pull/8981\n      if (isVueViewModel(value)) {\n        output.push('[VueViewModel]');\n      } else {\n        output.push(String(value));\n      }\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nexport function isMatchingPattern(\n  value: string,\n  pattern: RegExp | string,\n  requireExactStringMatch: boolean = false,\n): boolean {\n  if (!isString(value)) {\n    return false;\n  }\n\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n  if (isString(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nexport function stringMatchesSomePattern(\n  testString: string,\n  patterns: Array<string | RegExp> = [],\n  requireExactStringMatch: boolean = false,\n): boolean {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n","/* eslint-disable max-lines */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { DEBUG_BUILD } from './debug-build';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive } from './is';\nimport { logger } from './logger';\nimport { truncate } from './string';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    markFunctionWrapped(wrapped, original);\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nexport function addNonEnumerableProperty(obj: object, name: string, value: unknown): void {\n  try {\n    Object.defineProperty(obj, name, {\n      // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n      value: value,\n      writable: true,\n      configurable: true,\n    });\n  } catch (o_O) {\n    DEBUG_BUILD && logger.log(`Failed to add non-enumerable property \"${name}\" to object`, obj);\n  }\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nexport function markFunctionWrapped(wrapped: WrappedFunction, original: WrappedFunction): void {\n  try {\n    const proto = original.prototype || {};\n    wrapped.prototype = original.prototype = proto;\n    addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n  } catch (o_O) {} // eslint-disable-line no-empty\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nexport function getOriginalFunction(func: WrappedFunction): WrappedFunction | undefined {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nexport function convertToPlainObject<V>(\n  value: V,\n):\n  | {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    }\n  | {\n      [ownProps: string]: unknown;\n      message: string;\n      name: string;\n      stack?: string;\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown;\n      type: string;\n      target: string;\n      currentTarget: string;\n      detail?: unknown;\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nexport function extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nexport function dropUndefinedKeys<T>(inputValue: T): T {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map<unknown, unknown>();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys<T>(inputValue: T, memoizationMap: Map<unknown, unknown>): T {\n  if (isPojo(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: { [key: string]: any } = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue as T;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal as T;\n    }\n\n    const returnValue: unknown[] = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item: unknown) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue as unknown as T;\n  }\n\n  return inputValue;\n}\n\nfunction isPojo(input: unknown): input is Record<string, unknown> {\n  if (!isPlainObject(input)) {\n    return false;\n  }\n\n  try {\n    const name = (Object.getPrototypeOf(input) as { constructor: { name: string } }).constructor.name;\n    return !name || name === 'Object';\n  } catch {\n    return true;\n  }\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nexport function objectify(wat: unknown): typeof Object {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat as any).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Event, Exception, Mechanism, StackFrame } from '@sentry/types';\n\nimport { addNonEnumerableProperty } from './object';\nimport { snipLine } from './string';\nimport { GLOBAL_OBJ } from './worldwide';\n\ninterface CryptoInternal {\n  getRandomValues(array: Uint8Array): Uint8Array;\n  randomUUID?(): string;\n}\n\n/** An interface for common properties on global */\ninterface CryptoGlobal {\n  msCrypto?: CryptoInternal;\n  crypto?: CryptoInternal;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const gbl = GLOBAL_OBJ as typeof GLOBAL_OBJ & CryptoGlobal;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  let getRandomByte = (): number => Math.random() * 16;\n  try {\n    if (crypto && crypto.randomUUID) {\n      return crypto.randomUUID().replace(/-/g, '');\n    }\n    if (crypto && crypto.getRandomValues) {\n      getRandomByte = () => {\n        // crypto.getRandomValues might return undefined instead of the typed array\n        // in old Chromium versions (e.g. 23.0.1235.0 (151422))\n        // However, `typedArray` is still filled in-place.\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#typedarray\n        const typedArray = new Uint8Array(1);\n        crypto.getRandomValues(typedArray);\n        return typedArray[0];\n      };\n    }\n  } catch (_) {\n    // some runtimes can crash invoking crypto\n    // https://github.com/getsentry/sentry-javascript/issues/8935\n  }\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] as unknown as string) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c as unknown as number) ^ ((getRandomByte() & 15) >> ((c as unknown as number) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event: Event): Exception | undefined {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nexport function addExceptionMechanism(event: Event, newMechanism?: Partial<Mechanism>): void {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines - 1, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nexport function checkOrSetAlreadyCaught(exception: unknown): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception as any).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception as { [key: string]: unknown }, '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nexport function arrayify<T = unknown>(maybeArray: T | T[]): T[] {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]>;\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    this._state = States.PENDING;\n    this._handlers = [];\n\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import type { Event, EventHint, EventProcessor } from '@sentry/types';\nimport { SyncPromise, getGlobalSingleton, isThenable, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\n\n/**\n * Returns the global event processors.\n * @deprecated Global event processors will be removed in v8.\n */\nexport function getGlobalEventProcessors(): EventProcessor[] {\n  return getGlobalSingleton<EventProcessor[]>('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @deprecated Use `addEventProcessor` instead. Global event processors will be removed in v8.\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  // eslint-disable-next-line deprecation/deprecation\n  getGlobalEventProcessors().push(callback);\n}\n\n/**\n * Process an array of event processors, returning the processed event (or `null` if the event was dropped).\n */\nexport function notifyEventProcessors(\n  processors: EventProcessor[],\n  event: Event | null,\n  hint: EventHint,\n  index: number = 0,\n): PromiseLike<Event | null> {\n  return new SyncPromise<Event | null>((resolve, reject) => {\n    const processor = processors[index];\n    if (event === null || typeof processor !== 'function') {\n      resolve(event);\n    } else {\n      const result = processor({ ...event }, hint) as Event | null;\n\n      DEBUG_BUILD && processor.id && result === null && logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n      if (isThenable(result)) {\n        void result\n          .then(final => notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n          .then(null, reject);\n      } else {\n        void notifyEventProcessors(processors, result, hint, index + 1)\n          .then(resolve)\n          .then(null, reject);\n      }\n    }\n  });\n}\n","import { GLOBAL_OBJ } from './worldwide';\n\nconst ONE_SECOND_IN_MS = 1000;\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n *\n * TODO(v8): Return type should be rounded.\n */\nexport function dateTimestampInSeconds(): number {\n  return Date.now() / ONE_SECOND_IN_MS;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction createUnixTimestampInSecondsFunc(): () => number {\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & { performance?: Performance };\n  if (!performance || !performance.now) {\n    return dateTimestampInSeconds;\n  }\n\n  // Some browser and environments don't have a timeOrigin, so we fallback to\n  // using Date.now() to compute the starting time.\n  const approxStartingTimeOrigin = Date.now() - performance.now();\n  const timeOrigin = performance.timeOrigin == undefined ? approxStartingTimeOrigin : performance.timeOrigin;\n\n  // performance.now() is a monotonic clock, which means it starts at 0 when the process begins. To get the current\n  // wall clock time (actual UNIX timestamp), we need to add the starting time origin and the current time elapsed.\n  //\n  // TODO: This does not account for the case where the monotonic clock that powers performance.now() drifts from the\n  // wall clock time, which causes the returned timestamp to be inaccurate. We should investigate how to detect and\n  // correct for this.\n  // See: https://github.com/getsentry/sentry-javascript/issues/2590\n  // See: https://github.com/mdn/content/issues/4713\n  // See: https://dev.to/noamr/when-a-millisecond-is-not-a-millisecond-3h6\n  return () => {\n    return (timeOrigin + performance.now()) / ONE_SECOND_IN_MS;\n  };\n}\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = createUnixTimestampInSecondsFunc();\n\n/**\n * Re-exported with an old name for backwards-compatibility.\n * TODO (v8): Remove this\n *\n * @deprecated Use `timestampInSeconds` instead.\n */\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nexport let _browserPerformanceTimeOriginMode: string;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n","export const DEFAULT_ENVIRONMENT = 'production';\n","import type { SerializedSession, Session, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, timestampInSeconds, uuid4 } from '@sentry/utils';\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nexport function makeSession(context?: Omit<SessionContext, 'started' | 'status'>): Session {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session: Session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nexport function updateSession(session: Session, context: SessionContext = {}): void {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.abnormal_mechanism) {\n    session.abnormal_mechanism = context.abnormal_mechanism;\n  }\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nexport function closeSession(session: Session, status?: Exclude<SessionStatus, 'ok'>): void {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session: Session): SerializedSession {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    abnormal_mechanism: session.abnormal_mechanism,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n","import type { StackFrame, StackLineParser, StackParser } from '@sentry/types';\n\nimport type { GetModuleFn } from './node-stack-trace';\nimport { filenameIsInApp, node } from './node-stack-trace';\n\nexport { filenameIsInApp };\n\nconst STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\nconst STRIP_FRAME_REGEXP = /captureMessage|captureException/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack: string, skipFirst: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue;\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nexport function stackParserFromStackParserOptions(stackParser: StackParser | StackLineParser[]): StackParser {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nexport function stripSentryFramesAndReverse(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = Array.from(stack);\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (/sentryWrapped/.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n    localStack.pop();\n\n    // When using synthetic events, we will have a 2 levels deep stack, as `new Error('Sentry syntheticException')`\n    // is produced within the hub itself, making it:\n    //\n    //   Sentry.captureException()\n    //   getCurrentHub().captureException()\n    //\n    // instead of just the top `Sentry` call itself.\n    // This forces us to possibly strip an additional frame in the exact same was as above.\n    if (STRIP_FRAME_REGEXP.test(localStack[localStack.length - 1].function || '')) {\n      localStack.pop();\n    }\n  }\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nexport function getFunctionName(fn: unknown): string {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)];\n}\n","import type { Primitive } from '@sentry/types';\n\nimport { isNaN, isSyntheticEvent, isVueViewModel } from './is';\nimport type { MemoFunc } from './memo';\nimport { memoBuilder } from './memo';\nimport { convertToPlainObject } from './object';\nimport { getFunctionName } from './stacktrace';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n// This is a hack to placate TS, relying on the fact that technically, arrays are objects with integer keys. Normally we\n// think of those keys as actual numbers, but `arr['0']` turns out to work just as well as `arr[0]`, and doing it this\n// way lets us use a single type in the places where behave as if we are only dealing with objects, even if some of them\n// might be arrays.\ntype ObjOrArray<T> = { [key: string]: T };\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function normalize(input: unknown, depth: number = 100, maxProperties: number = +Infinity): any {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized as T;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key: string,\n  value: unknown,\n  depth: number = +Infinity,\n  maxProperties: number = +Infinity,\n  memo: MemoFunc = memoBuilder(),\n): Primitive | ObjOrArray<unknown> {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (\n    value == null || // this matches null and undefined -> eqeq not eqeqeq\n    (['number', 'boolean', 'string'].includes(typeof value) && !isNaN(value))\n  ) {\n    return value as Primitive;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value as ObjOrArray<unknown>)['__sentry_skip_normalization__']) {\n    return value as ObjOrArray<unknown>;\n  }\n\n  // We can set `__sentry_override_normalization_depth__` on an object to ensure that from there\n  // We keep a certain amount of depth.\n  // This should be used sparingly, e.g. we use it for the redux integration to ensure we get a certain amount of state.\n  const remainingDepth =\n    typeof (value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] === 'number'\n      ? ((value as ObjOrArray<unknown>)['__sentry_override_normalization_depth__'] as number)\n      : depth;\n\n  // We're also done if we've reached the max depth\n  if (remainingDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value as unknown & { toJSON?: () => unknown };\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, remainingDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) as ObjOrArray<unknown>;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = convertToPlainObject(value as ObjOrArray<unknown>);\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, remainingDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * @deprecated This export will be removed in v8.\n */\nexport { visit as walk };\n\n/* eslint-disable complexity */\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key: unknown,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value: Exclude<unknown, string | number | boolean | null>,\n): string {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value as { _events: unknown })._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof global !== 'undefined' && value === global) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    if (isVueViewModel(value)) {\n      return '[VueViewModel]';\n    }\n\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${getFunctionName(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    const objName = getConstructorName(value);\n\n    // Handle HTML Elements\n    if (/^HTML(\\w*)Element$/.test(objName)) {\n      return `[HTMLElement: ${objName}]`;\n    }\n\n    return `[object ${objName}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n/* eslint-enable complexity */\n\nfunction getConstructorName(value: unknown): string {\n  const prototype: Prototype | null = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/**\n * Normalizes URLs in exceptions and stacktraces to a base path so Sentry can fingerprint\n * across platforms and working directory.\n *\n * @param url The URL to be normalized.\n * @param basePath The application base path.\n * @returns The normalized URL.\n */\nexport function normalizeUrlToBase(url: string, basePath: string): string {\n  const escapedBase = basePath\n    // Backslash to forward\n    .replace(/\\\\/g, '/')\n    // Escape RegExp special characters\n    .replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n\n  let newUrl = url;\n  try {\n    newUrl = decodeURI(url);\n  } catch (_Oo) {\n    // Sometime this breaks\n  }\n  return (\n    newUrl\n      .replace(/\\\\/g, '/')\n      .replace(/webpack:\\/?/g, '') // Remove intermediate base path\n      // eslint-disable-next-line @sentry-internal/sdk/no-regexp-constructor\n      .replace(new RegExp(`(file://)?/*${escapedBase}/*`, 'ig'), 'app:///')\n  );\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type MemoFunc = [\n  // memoize\n  (obj: any) => boolean,\n  // unmemoize\n  (obj: any) => void,\n];\n\n/**\n * Helper to decycle json objects\n */\nexport function memoBuilder(): MemoFunc {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner: any = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj: any): boolean {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj: any): void {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n","import type { Span, SpanJSON, SpanTimeInput, TraceContext } from '@sentry/types';\nimport { dropUndefinedKeys, generateSentryTraceHeader, timestampInSeconds } from '@sentry/utils';\nimport type { Span as SpanClass } from '../tracing/span';\n\n// These are aligned with OpenTelemetry trace flags\nexport const TRACE_FLAG_NONE = 0x0;\nexport const TRACE_FLAG_SAMPLED = 0x1;\n\n/**\n * Convert a span to a trace context, which can be sent as the `trace` context in an event.\n */\nexport function spanToTraceContext(span: Span): TraceContext {\n  const { spanId: span_id, traceId: trace_id } = span.spanContext();\n  const { data, op, parent_span_id, status, tags, origin } = spanToJSON(span);\n\n  return dropUndefinedKeys({\n    data,\n    op,\n    parent_span_id,\n    span_id,\n    status,\n    tags,\n    trace_id,\n    origin,\n  });\n}\n\n/**\n * Convert a Span to a Sentry trace header.\n */\nexport function spanToTraceHeader(span: Span): string {\n  const { traceId, spanId } = span.spanContext();\n  const sampled = spanIsSampled(span);\n  return generateSentryTraceHeader(traceId, spanId, sampled);\n}\n\n/**\n * Convert a span time input intp a timestamp in seconds.\n */\nexport function spanTimeInputToSeconds(input: SpanTimeInput | undefined): number {\n  if (typeof input === 'number') {\n    return ensureTimestampInSeconds(input);\n  }\n\n  if (Array.isArray(input)) {\n    // See {@link HrTime} for the array-based time format\n    return input[0] + input[1] / 1e9;\n  }\n\n  if (input instanceof Date) {\n    return ensureTimestampInSeconds(input.getTime());\n  }\n\n  return timestampInSeconds();\n}\n\n/**\n * Converts a timestamp to second, if it was in milliseconds, or keeps it as second.\n */\nfunction ensureTimestampInSeconds(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n\n/**\n * Convert a span to a JSON representation.\n * Note that all fields returned here are optional and need to be guarded against.\n *\n * Note: Because of this, we currently have a circular type dependency (which we opted out of in package.json).\n * This is not avoidable as we need `spanToJSON` in `spanUtils.ts`, which in turn is needed by `span.ts` for backwards compatibility.\n * And `spanToJSON` needs the Span class from `span.ts` to check here.\n * TODO v8: When we remove the deprecated stuff from `span.ts`, we can remove the circular dependency again.\n */\nexport function spanToJSON(span: Span): Partial<SpanJSON> {\n  if (spanIsSpanClass(span)) {\n    return span.getSpanJSON();\n  }\n\n  // Fallback: We also check for `.toJSON()` here...\n  // eslint-disable-next-line deprecation/deprecation\n  if (typeof span.toJSON === 'function') {\n    // eslint-disable-next-line deprecation/deprecation\n    return span.toJSON();\n  }\n\n  return {};\n}\n\n/**\n * Sadly, due to circular dependency checks we cannot actually import the Span class here and check for instanceof.\n * :( So instead we approximate this by checking if it has the `getSpanJSON` method.\n */\nfunction spanIsSpanClass(span: Span): span is SpanClass {\n  return typeof (span as SpanClass).getSpanJSON === 'function';\n}\n\n/**\n * Returns true if a span is sampled.\n * In most cases, you should just use `span.isRecording()` instead.\n * However, this has a slightly different semantic, as it also returns false if the span is finished.\n * So in the case where this distinction is important, use this method.\n */\nexport function spanIsSampled(span: Span): boolean {\n  // We align our trace flags with the ones OpenTelemetry use\n  // So we also check for sampled the same way they do.\n  const { traceFlags } = span.spanContext();\n  // eslint-disable-next-line no-bitwise\n  return Boolean(traceFlags & TRACE_FLAG_SAMPLED);\n}\n","import type {\n  CaptureContext,\n  Client,\n  ClientOptions,\n  Event,\n  EventHint,\n  Scope as ScopeInterface,\n  ScopeContext,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, addExceptionMechanism, dateTimestampInSeconds, normalize, truncate, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getGlobalEventProcessors, notifyEventProcessors } from '../eventProcessors';\nimport { Scope, getGlobalScope } from '../scope';\nimport { applyScopeDataToEvent, mergeScopeData } from './applyScopeDataToEvent';\nimport { spanToJSON } from './spanUtils';\n\n/**\n * This type makes sure that we get either a CaptureContext, OR an EventHint.\n * It does not allow mixing them, which could lead to unexpected outcomes, e.g. this is disallowed:\n * { user: { id: '123' }, mechanism: { handled: false } }\n */\nexport type ExclusiveEventHintOrCaptureContext =\n  | (CaptureContext & Partial<{ [key in keyof EventHint]: never }>)\n  | (EventHint & Partial<{ [key in keyof ScopeContext]: never }>);\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nexport function prepareEvent(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n  scope?: Scope,\n  client?: Client,\n  isolationScope?: Scope,\n): PromiseLike<Event | null> {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1_000 } = options;\n  const prepared: Event = {\n    ...event,\n    event_id: event.event_id || hint.event_id || uuid4(),\n    timestamp: event.timestamp || dateTimestampInSeconds(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n\n  // Only put debug IDs onto frames for error events.\n  if (event.type === undefined) {\n    applyDebugIds(prepared, options.stackParser);\n  }\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  const finalScope = getFinalScope(scope, hint.captureContext);\n\n  if (hint.mechanism) {\n    addExceptionMechanism(prepared, hint.mechanism);\n  }\n\n  const clientEventProcessors = client && client.getEventProcessors ? client.getEventProcessors() : [];\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  // Merge scope data together\n  const data = getGlobalScope().getScopeData();\n\n  if (isolationScope) {\n    const isolationData = isolationScope.getScopeData();\n    mergeScopeData(data, isolationData);\n  }\n\n  if (finalScope) {\n    const finalScopeData = finalScope.getScopeData();\n    mergeScopeData(data, finalScopeData);\n  }\n\n  const attachments = [...(hint.attachments || []), ...data.attachments];\n  if (attachments.length) {\n    hint.attachments = attachments;\n  }\n\n  applyScopeDataToEvent(prepared, data);\n\n  // TODO (v8): Update this order to be: Global > Client > Scope\n  const eventProcessors = [\n    ...clientEventProcessors,\n    // eslint-disable-next-line deprecation/deprecation\n    ...getGlobalEventProcessors(),\n    // Run scope event processors _after_ all other processors\n    ...data.eventProcessors,\n  ];\n\n  const result = notifyEventProcessors(eventProcessors, prepared, hint);\n\n  return result.then(evt => {\n    if (evt) {\n      // We apply the debug_meta field only after all event processors have ran, so that if any event processors modified\n      // file names (e.g.the RewriteFrames integration) the filename -> debug ID relationship isn't destroyed.\n      // This should not cause any PII issues, since we're only moving data that is already on the event and not adding\n      // any new data\n      applyDebugMeta(evt);\n    }\n\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event: Event, options: ClientOptions): void {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = truncate(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = truncate(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = truncate(request.url, maxValueLength);\n  }\n}\n\nconst debugIdStackParserCache = new WeakMap<StackParser, Map<string, StackFrame[]>>();\n\n/**\n * Puts debug IDs into the stack frames of an error event.\n */\nexport function applyDebugIds(event: Event, stackParser: StackParser): void {\n  const debugIdMap = GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  let debugIdStackFramesCache: Map<string, StackFrame[]>;\n  const cachedDebugIdStackFrameCache = debugIdStackParserCache.get(stackParser);\n  if (cachedDebugIdStackFrameCache) {\n    debugIdStackFramesCache = cachedDebugIdStackFrameCache;\n  } else {\n    debugIdStackFramesCache = new Map<string, StackFrame[]>();\n    debugIdStackParserCache.set(stackParser, debugIdStackFramesCache);\n  }\n\n  // Build a map of filename -> debug_id\n  const filenameDebugIdMap = Object.keys(debugIdMap).reduce<Record<string, string>>((acc, debugIdStackTrace) => {\n    let parsedStack: StackFrame[];\n    const cachedParsedStack = debugIdStackFramesCache.get(debugIdStackTrace);\n    if (cachedParsedStack) {\n      parsedStack = cachedParsedStack;\n    } else {\n      parsedStack = stackParser(debugIdStackTrace);\n      debugIdStackFramesCache.set(debugIdStackTrace, parsedStack);\n    }\n\n    for (let i = parsedStack.length - 1; i >= 0; i--) {\n      const stackFrame = parsedStack[i];\n      if (stackFrame.filename) {\n        acc[stackFrame.filename] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event!.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.filename) {\n          frame.debug_id = filenameDebugIdMap[frame.filename];\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n}\n\n/**\n * Moves debug IDs from the stack frames of an error event into the debug_meta field.\n */\nexport function applyDebugMeta(event: Event): void {\n  // Extract debug IDs and filenames from the stack frames on the event.\n  const filenameDebugIdMap: Record<string, string> = {};\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values!.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace!.frames!.forEach(frame => {\n        if (frame.debug_id) {\n          if (frame.abs_path) {\n            filenameDebugIdMap[frame.abs_path] = frame.debug_id;\n          } else if (frame.filename) {\n            filenameDebugIdMap[frame.filename] = frame.debug_id;\n          }\n          delete frame.debug_id;\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  if (Object.keys(filenameDebugIdMap).length === 0) {\n    return;\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  Object.keys(filenameDebugIdMap).forEach(filename => {\n    images.push({\n      type: 'sourcemap',\n      code_file: filename,\n      debug_id: filenameDebugIdMap[filename],\n    });\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event: Event, integrationNames: string[]): void {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event: Event | null, depth: number, maxBreadth: number): Event | null {\n  if (!event) {\n    return null;\n  }\n\n  const normalized: Event = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: normalize(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: normalize(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: normalize(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: normalize(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = normalize(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      const data = spanToJSON(span).data;\n\n      if (data) {\n        // This is a bit weird, as we generally have `Span` instances here, but to be safe we do not assume so\n        // eslint-disable-next-line deprecation/deprecation\n        span.data = normalize(data, depth, maxBreadth);\n      }\n\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\nfunction getFinalScope(scope: Scope | undefined, captureContext: CaptureContext | undefined): Scope | undefined {\n  if (!captureContext) {\n    return scope;\n  }\n\n  const finalScope = scope ? scope.clone() : new Scope();\n  finalScope.update(captureContext);\n  return finalScope;\n}\n\n/**\n * Parse either an `EventHint` directly, or convert a `CaptureContext` to an `EventHint`.\n * This is used to allow to update method signatures that used to accept a `CaptureContext` but should now accept an `EventHint`.\n */\nexport function parseEventHintOrCaptureContext(\n  hint: ExclusiveEventHintOrCaptureContext | undefined,\n): EventHint | undefined {\n  if (!hint) {\n    return undefined;\n  }\n\n  // If you pass a Scope or `() => Scope` as CaptureContext, we just return this as captureContext\n  if (hintIsScopeOrFunction(hint)) {\n    return { captureContext: hint };\n  }\n\n  if (hintIsScopeContext(hint)) {\n    return {\n      captureContext: hint,\n    };\n  }\n\n  return hint;\n}\n\nfunction hintIsScopeOrFunction(\n  hint: CaptureContext | EventHint,\n): hint is ScopeInterface | ((scope: ScopeInterface) => ScopeInterface) {\n  return hint instanceof Scope || typeof hint === 'function';\n}\n\ntype ScopeContextProperty = keyof ScopeContext;\nconst captureContextKeys: readonly ScopeContextProperty[] = [\n  'user',\n  'level',\n  'extra',\n  'contexts',\n  'tags',\n  'fingerprint',\n  'requestSession',\n  'propagationContext',\n] as const;\n\nfunction hintIsScopeContext(hint: Partial<ScopeContext> | EventHint): hint is Partial<ScopeContext> {\n  return Object.keys(hint).some(key => captureContextKeys.includes(key as ScopeContextProperty));\n}\n","/* eslint-disable max-lines */\nimport type {\n  Attachment,\n  Breadcrumb,\n  CaptureContext,\n  Client,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  PropagationContext,\n  RequestSession,\n  Scope as ScopeInterface,\n  ScopeContext,\n  ScopeData,\n  Session,\n  Severity,\n  SeverityLevel,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, isPlainObject, logger, uuid4 } from '@sentry/utils';\n\nimport { getGlobalEventProcessors, notifyEventProcessors } from './eventProcessors';\nimport { updateSession } from './session';\nimport { applyScopeDataToEvent } from './utils/applyScopeDataToEvent';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * The global scope is kept in this module.\n * When accessing this via `getGlobalScope()` we'll make sure to set one if none is currently present.\n */\nlet globalScope: ScopeInterface | undefined;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifying is happening. */\n  protected _notifyingListeners: boolean;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void>;\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[];\n\n  /** User */\n  protected _user: User;\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive };\n\n  /** Extra */\n  protected _extra: Extras;\n\n  /** Contexts */\n  protected _contexts: Contexts;\n\n  /** Attachments */\n  protected _attachments: Attachment[];\n\n  /** Propagation Context for distributed tracing */\n  protected _propagationContext: PropagationContext;\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n  protected _sdkProcessingMetadata: { [key: string]: unknown };\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n  protected _level?: Severity | SeverityLevel;\n\n  /**\n   * Transaction Name\n   */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /** Request Mode Session Status */\n  protected _requestSession?: RequestSession;\n\n  /** The client on this scope */\n  protected _client?: Client;\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n  public constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n    this._propagationContext = generatePropagationContext();\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @deprecated Use `scope.clone()` and `new Scope()` instead.\n   */\n  public static clone(scope?: Scope): Scope {\n    return scope ? scope.clone() : new Scope();\n  }\n\n  /**\n   * Clone this scope instance.\n   */\n  public clone(): Scope {\n    const newScope = new Scope();\n    newScope._breadcrumbs = [...this._breadcrumbs];\n    newScope._tags = { ...this._tags };\n    newScope._extra = { ...this._extra };\n    newScope._contexts = { ...this._contexts };\n    newScope._user = this._user;\n    newScope._level = this._level;\n    newScope._span = this._span;\n    newScope._session = this._session;\n    newScope._transactionName = this._transactionName;\n    newScope._fingerprint = this._fingerprint;\n    newScope._eventProcessors = [...this._eventProcessors];\n    newScope._requestSession = this._requestSession;\n    newScope._attachments = [...this._attachments];\n    newScope._sdkProcessingMetadata = { ...this._sdkProcessingMetadata };\n    newScope._propagationContext = { ...this._propagationContext };\n    newScope._client = this._client;\n\n    return newScope;\n  }\n\n  /** Update the client on the scope. */\n  public setClient(client: Client | undefined): void {\n    this._client = client;\n  }\n\n  /**\n   * Get the client assigned to this scope.\n   *\n   * It is generally recommended to use the global function `Sentry.getClient()` instead, unless you know what you are doing.\n   */\n  public getClient(): Client | undefined {\n    return this._client;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    // If null is passed we want to unset everything, but still define keys,\n    // so that later down in the pipeline any existing values are cleared.\n    this._user = user || {\n      email: undefined,\n      id: undefined,\n      ip_address: undefined,\n      segment: undefined,\n      username: undefined,\n    };\n\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getRequestSession(): RequestSession | undefined {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setRequestSession(requestSession?: RequestSession): this {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel,\n  ): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the transaction name on the scope for future events.\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Sets the Span on the scope.\n   * @param span Span\n   * @deprecated Instead of setting a span on a scope, use `startSpan()`/`startSpanManual()` instead.\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Returns the `Span` if there is one.\n   * @deprecated Use `getActiveSpan()` instead.\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * Returns the `Transaction` attached to the scope (if there is one).\n   * @deprecated You should not rely on the transaction, but just use `startSpan()` APIs instead.\n   */\n  public getTransaction(): Transaction | undefined {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this._span;\n    // Cannot replace with getRootSpan because getRootSpan returns a span, not a transaction\n    // Also, this method will be removed anyway.\n    // eslint-disable-next-line deprecation/deprecation\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    const scopeToMerge = typeof captureContext === 'function' ? captureContext(this) : captureContext;\n\n    if (scopeToMerge instanceof Scope) {\n      const scopeData = scopeToMerge.getScopeData();\n\n      this._tags = { ...this._tags, ...scopeData.tags };\n      this._extra = { ...this._extra, ...scopeData.extra };\n      this._contexts = { ...this._contexts, ...scopeData.contexts };\n      if (scopeData.user && Object.keys(scopeData.user).length) {\n        this._user = scopeData.user;\n      }\n      if (scopeData.level) {\n        this._level = scopeData.level;\n      }\n      if (scopeData.fingerprint.length) {\n        this._fingerprint = scopeData.fingerprint;\n      }\n      if (scopeToMerge.getRequestSession()) {\n        this._requestSession = scopeToMerge.getRequestSession();\n      }\n      if (scopeData.propagationContext) {\n        this._propagationContext = scopeData.propagationContext;\n      }\n    } else if (isPlainObject(scopeToMerge)) {\n      const scopeContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...scopeContext.tags };\n      this._extra = { ...this._extra, ...scopeContext.extra };\n      this._contexts = { ...this._contexts, ...scopeContext.contexts };\n      if (scopeContext.user) {\n        this._user = scopeContext.user;\n      }\n      if (scopeContext.level) {\n        this._level = scopeContext.level;\n      }\n      if (scopeContext.fingerprint) {\n        this._fingerprint = scopeContext.fingerprint;\n      }\n      if (scopeContext.requestSession) {\n        this._requestSession = scopeContext.requestSession;\n      }\n      if (scopeContext.propagationContext) {\n        this._propagationContext = scopeContext.propagationContext;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    this._propagationContext = generatePropagationContext();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    const breadcrumbs = this._breadcrumbs;\n    breadcrumbs.push(mergedBreadcrumb);\n    this._breadcrumbs = breadcrumbs.length > maxCrumbs ? breadcrumbs.slice(-maxCrumbs) : breadcrumbs;\n\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getLastBreadcrumb(): Breadcrumb | undefined {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addAttachment(attachment: Attachment): this {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `getScopeData()` instead.\n   */\n  public getAttachments(): Attachment[] {\n    const data = this.getScopeData();\n\n    return data.attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearAttachments(): this {\n    this._attachments = [];\n    return this;\n  }\n\n  /** @inheritDoc */\n  public getScopeData(): ScopeData {\n    const {\n      _breadcrumbs,\n      _attachments,\n      _contexts,\n      _tags,\n      _extra,\n      _user,\n      _level,\n      _fingerprint,\n      _eventProcessors,\n      _propagationContext,\n      _sdkProcessingMetadata,\n      _transactionName,\n      _span,\n    } = this;\n\n    return {\n      breadcrumbs: _breadcrumbs,\n      attachments: _attachments,\n      contexts: _contexts,\n      tags: _tags,\n      extra: _extra,\n      user: _user,\n      level: _level,\n      fingerprint: _fingerprint || [],\n      eventProcessors: _eventProcessors,\n      propagationContext: _propagationContext,\n      sdkProcessingMetadata: _sdkProcessingMetadata,\n      transactionName: _transactionName,\n      span: _span,\n    };\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   * @deprecated Use `applyScopeDataToEvent()` directly\n   */\n  public applyToEvent(\n    event: Event,\n    hint: EventHint = {},\n    additionalEventProcessors: EventProcessor[] = [],\n  ): PromiseLike<Event | null> {\n    applyScopeDataToEvent(event, this.getScopeData());\n\n    // TODO (v8): Update this order to be: Global > Client > Scope\n    const eventProcessors: EventProcessor[] = [\n      ...additionalEventProcessors,\n      // eslint-disable-next-line deprecation/deprecation\n      ...getGlobalEventProcessors(),\n      ...this._eventProcessors,\n    ];\n\n    return notifyEventProcessors(eventProcessors, event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n  public setSDKProcessingMetadata(newData: { [key: string]: unknown }): this {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setPropagationContext(context: PropagationContext): this {\n    this._propagationContext = context;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getPropagationContext(): PropagationContext {\n    return this._propagationContext;\n  }\n\n  /**\n   * Capture an exception for this scope.\n   *\n   * @param exception The exception to capture.\n   * @param hint Optinal additional data to attach to the Sentry event.\n   * @returns the id of the captured Sentry event.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture exception!');\n      return eventId;\n    }\n\n    const syntheticException = new Error('Sentry syntheticException');\n\n    this._client.captureException(\n      exception,\n      {\n        originalException: exception,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Capture a message for this scope.\n   *\n   * @param message The message to capture.\n   * @param level An optional severity level to report the message with.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured message.\n   */\n  public captureMessage(message: string, level?: SeverityLevel, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture message!');\n      return eventId;\n    }\n\n    const syntheticException = new Error(message);\n\n    this._client.captureMessage(\n      message,\n      level,\n      {\n        originalException: message,\n        syntheticException,\n        ...hint,\n        event_id: eventId,\n      },\n      this,\n    );\n\n    return eventId;\n  }\n\n  /**\n   * Captures a manually created event for this scope and sends it to Sentry.\n   *\n   * @param exception The event to capture.\n   * @param hint Optional additional data to attach to the Sentry event.\n   * @returns the id of the captured event.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n\n    if (!this._client) {\n      logger.warn('No client configured on scope - will not capture event!');\n      return eventId;\n    }\n\n    this._client.captureEvent(event, { ...hint, event_id: eventId }, this);\n\n    return eventId;\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n}\n\n/**\n * Get the global scope.\n * This scope is applied to _all_ events.\n */\nexport function getGlobalScope(): ScopeInterface {\n  if (!globalScope) {\n    globalScope = new Scope();\n  }\n\n  return globalScope;\n}\n\n/**\n * This is mainly needed for tests.\n * DO NOT USE this, as this is an internal API and subject to change.\n * @hidden\n */\nexport function setGlobalScope(scope: ScopeInterface | undefined): void {\n  globalScope = scope;\n}\n\nfunction generatePropagationContext(): PropagationContext {\n  return {\n    traceId: uuid4(),\n    spanId: uuid4().substring(16),\n  };\n}\n","import type {\n  Breadcrumb,\n  BreadcrumbHint,\n  CaptureContext,\n  CheckIn,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  FinishedCheckIn,\n  MonitorConfig,\n  Primitive,\n  Scope as ScopeInterface,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Span,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { GLOBAL_OBJ, isThenable, logger, timestampInSeconds, uuid4 } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { Hub } from './hub';\nimport { runWithAsyncContext } from './hub';\nimport { getCurrentHub, getIsolationScope } from './hub';\nimport type { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport type { ExclusiveEventHintOrCaptureContext } from './utils/prepareEvent';\nimport { parseEventHintOrCaptureContext } from './utils/prepareEvent';\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exception: any,\n  hint?: ExclusiveEventHintOrCaptureContext,\n): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureException(exception, parseEventHintOrCaptureContext(hint));\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param exception The exception to capture.\n * @param captureContext Define the level of the message or pass in additional data to attach to the message.\n * @returns the id of the captured message.\n */\nexport function captureMessage(\n  message: string,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext?: CaptureContext | Severity | SeverityLevel,\n): string {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param exception The event to send to Sentry.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured event.\n */\nexport function captureEvent(event: Event, hint?: EventHint): string {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n *\n * @deprecated Use getCurrentScope() directly.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function configureScope(callback: (scope: Scope) => void): ReturnType<Hub['configureScope']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): ReturnType<Hub['addBreadcrumb']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().addBreadcrumb(breadcrumb, hint);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, deprecation/deprecation\nexport function setContext(name: string, context: { [key: string]: any } | null): ReturnType<Hub['setContext']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtras(extras: Extras): ReturnType<Hub['setExtras']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setExtra(key: string, extra: Extra): ReturnType<Hub['setExtra']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTags(tags: { [key: string]: Primitive }): ReturnType<Hub['setTags']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setTag(key: string, value: Primitive): ReturnType<Hub['setTag']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setUser(user: User | null): ReturnType<Hub['setUser']> {\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n */\nexport function withScope<T>(callback: (scope: Scope) => T): T;\n/**\n * Set the given scope as the active scope in the callback.\n */\nexport function withScope<T>(scope: ScopeInterface | undefined, callback: (scope: Scope) => T): T;\n/**\n * Either creates a new active scope, or sets the given scope as active scope in the given callback.\n */\nexport function withScope<T>(\n  ...rest: [callback: (scope: Scope) => T] | [scope: ScopeInterface | undefined, callback: (scope: Scope) => T]\n): T {\n  // eslint-disable-next-line deprecation/deprecation\n  const hub = getCurrentHub();\n\n  // If a scope is defined, we want to make this the active scope instead of the default one\n  if (rest.length === 2) {\n    const [scope, callback] = rest;\n    if (!scope) {\n      // eslint-disable-next-line deprecation/deprecation\n      return hub.withScope(callback);\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    return hub.withScope(() => {\n      // eslint-disable-next-line deprecation/deprecation\n      hub.getStackTop().scope = scope as Scope;\n      return callback(scope as Scope);\n    });\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return hub.withScope(rest[0]);\n}\n\n/**\n * Attempts to fork the current isolation scope and the current scope based on the current async context strategy. If no\n * async context strategy is set, the isolation scope and the current scope will not be forked (this is currently the\n * case, for example, in the browser).\n *\n * Usage of this function in environments without async context strategy is discouraged and may lead to unexpected behaviour.\n *\n * This function is intended for Sentry SDK and SDK integration development. It is not recommended to be used in \"normal\"\n * applications directly because it comes with pitfalls. Use at your own risk!\n *\n * @param callback The callback in which the passed isolation scope is active. (Note: In environments without async\n * context strategy, the currently active isolation scope may change within execution of the callback.)\n * @returns The same value that `callback` returns.\n */\nexport function withIsolationScope<T>(callback: (isolationScope: Scope) => T): T {\n  return runWithAsyncContext(() => {\n    return callback(getIsolationScope());\n  });\n}\n\n/**\n * Forks the current scope and sets the provided span as active span in the context of the provided callback.\n *\n * @param span Spans started in the context of the provided callback will be children of this span.\n * @param callback Execution context in which the provided span will be active. Is passed the newly forked scope.\n * @returns the value returned from the provided callback function.\n */\nexport function withActiveSpan<T>(span: Span, callback: (scope: Scope) => T): T {\n  return withScope(scope => {\n    // eslint-disable-next-line deprecation/deprecation\n    scope.setSpan(span);\n    return callback(scope);\n  });\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n *\n * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n  // eslint-disable-next-line deprecation/deprecation\n): ReturnType<Hub['startTransaction']> {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().startTransaction({ ...context }, customSamplingContext);\n}\n\n/**\n * Create a cron monitor check in and send it to Sentry.\n *\n * @param checkIn An object that describes a check in.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function captureCheckIn(checkIn: CheckIn, upsertMonitorConfig?: MonitorConfig): string {\n  const scope = getCurrentScope();\n  const client = getClient();\n  if (!client) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. No client defined.');\n  } else if (!client.captureCheckIn) {\n    DEBUG_BUILD && logger.warn('Cannot capture check-in. Client does not support sending check-ins.');\n  } else {\n    return client.captureCheckIn(checkIn, upsertMonitorConfig, scope);\n  }\n\n  return uuid4();\n}\n\n/**\n * Wraps a callback with a cron monitor check in. The check in will be sent to Sentry when the callback finishes.\n *\n * @param monitorSlug The distinct slug of the monitor.\n * @param upsertMonitorConfig An optional object that describes a monitor config. Use this if you want\n * to create a monitor automatically when sending a check in.\n */\nexport function withMonitor<T>(\n  monitorSlug: CheckIn['monitorSlug'],\n  callback: () => T,\n  upsertMonitorConfig?: MonitorConfig,\n): T {\n  const checkInId = captureCheckIn({ monitorSlug, status: 'in_progress' }, upsertMonitorConfig);\n  const now = timestampInSeconds();\n\n  function finishCheckIn(status: FinishedCheckIn['status']): void {\n    captureCheckIn({ monitorSlug, status, checkInId, duration: timestampInSeconds() - now });\n  }\n\n  let maybePromiseResult: T;\n  try {\n    maybePromiseResult = callback();\n  } catch (e) {\n    finishCheckIn('error');\n    throw e;\n  }\n\n  if (isThenable(maybePromiseResult)) {\n    Promise.resolve(maybePromiseResult).then(\n      () => {\n        finishCheckIn('ok');\n      },\n      () => {\n        finishCheckIn('error');\n      },\n    );\n  } else {\n    finishCheckIn('ok');\n  }\n\n  return maybePromiseResult;\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function flush(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nexport async function close(timeout?: number): Promise<boolean> {\n  const client = getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  DEBUG_BUILD && logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return Promise.resolve(false);\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId(): string | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().lastEventId();\n}\n\n/**\n * Get the currently active client.\n */\nexport function getClient<C extends Client>(): C | undefined {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getClient<C>();\n}\n\n/**\n * Returns true if Sentry has been properly initialized.\n */\nexport function isInitialized(): boolean {\n  return !!getClient();\n}\n\n/**\n * Get the currently active scope.\n */\nexport function getCurrentScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getScope();\n}\n\n/**\n * Start a session on the current isolation scope.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns the new active session\n */\nexport function startSession(context?: SessionContext): Session {\n  const client = getClient();\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n  // Will fetch userAgent if called from browser sdk\n  const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n  const session = makeSession({\n    release,\n    environment,\n    user: currentScope.getUser() || isolationScope.getUser(),\n    ...(userAgent && { userAgent }),\n    ...context,\n  });\n\n  // End existing session if there's one\n  const currentSession = isolationScope.getSession();\n  if (currentSession && currentSession.status === 'ok') {\n    updateSession(currentSession, { status: 'exited' });\n  }\n\n  endSession();\n\n  // Afterwards we set the new session on the scope\n  isolationScope.setSession(session);\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession(session);\n\n  return session;\n}\n\n/**\n * End the session on the current isolation scope.\n */\nexport function endSession(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session) {\n    closeSession(session);\n  }\n  _sendSessionUpdate();\n\n  // the session is over; take it off of the scope\n  isolationScope.setSession();\n\n  // TODO (v8): Remove this and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  currentScope.setSession();\n}\n\n/**\n * Sends the current Session on the scope\n */\nfunction _sendSessionUpdate(): void {\n  const isolationScope = getIsolationScope();\n  const currentScope = getCurrentScope();\n  const client = getClient();\n  // TODO (v8): Remove currentScope and only use the isolation scope(?).\n  // For v7 though, we can't \"soft-break\" people using getCurrentHub().getScope().setSession()\n  const session = currentScope.getSession() || isolationScope.getSession();\n  if (session && client && client.captureSession) {\n    client.captureSession(session);\n  }\n}\n\n/**\n * Sends the current session on the scope to Sentry\n *\n * @param end If set the session will be marked as exited and removed from the scope.\n *            Defaults to `false`.\n */\nexport function captureSession(end: boolean = false): void {\n  // both send the update and pull the session from the scope\n  if (end) {\n    endSession();\n    return;\n  }\n\n  // only send the update\n  _sendSessionUpdate();\n}\n","import type { Span } from '@sentry/types';\n\n/**\n * Returns the root span of a given span.\n *\n * As long as we use `Transaction`s internally, the returned root span\n * will be a `Transaction` but be aware that this might change in the future.\n *\n * If the given span has no root span or transaction, `undefined` is returned.\n */\nexport function getRootSpan(span: Span): Span | undefined {\n  // TODO (v8): Remove this check and just return span\n  // eslint-disable-next-line deprecation/deprecation\n  return span.transaction;\n}\n","import type { Client, DynamicSamplingContext, Scope, Span, Transaction } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from '../constants';\nimport { getClient, getCurrentScope } from '../exports';\nimport { getRootSpan } from '../utils/getRootSpan';\nimport { spanIsSampled, spanToJSON } from '../utils/spanUtils';\n\n/**\n * Creates a dynamic sampling context from a client.\n *\n * Dispatches the `createDsc` lifecycle hook as a side effect.\n */\nexport function getDynamicSamplingContextFromClient(\n  trace_id: string,\n  client: Client,\n  scope?: Scope,\n): DynamicSamplingContext {\n  const options = client.getOptions();\n\n  const { publicKey: public_key } = client.getDsn() || {};\n  // TODO(v8): Remove segment from User\n  // eslint-disable-next-line deprecation/deprecation\n  const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n  const dsc = dropUndefinedKeys({\n    environment: options.environment || DEFAULT_ENVIRONMENT,\n    release: options.release,\n    user_segment,\n    public_key,\n    trace_id,\n  }) as DynamicSamplingContext;\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n\n/**\n * A Span with a frozen dynamic sampling context.\n */\ntype TransactionWithV7FrozenDsc = Transaction & { _frozenDynamicSamplingContext?: DynamicSamplingContext };\n\n/**\n * Creates a dynamic sampling context from a span (and client and scope)\n *\n * @param span the span from which a few values like the root span name and sample rate are extracted.\n *\n * @returns a dynamic sampling context\n */\nexport function getDynamicSamplingContextFromSpan(span: Span): Readonly<Partial<DynamicSamplingContext>> {\n  const client = getClient();\n  if (!client) {\n    return {};\n  }\n\n  // passing emit=false here to only emit later once the DSC is actually populated\n  const dsc = getDynamicSamplingContextFromClient(spanToJSON(span).trace_id || '', client, getCurrentScope());\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  const txn = getRootSpan(span) as TransactionWithV7FrozenDsc | undefined;\n  if (!txn) {\n    return dsc;\n  }\n\n  // TODO (v8): Remove v7FrozenDsc as a Transaction will no longer have _frozenDynamicSamplingContext\n  // For now we need to avoid breaking users who directly created a txn with a DSC, where this field is still set.\n  // @see Transaction class constructor\n  const v7FrozenDsc = txn && txn._frozenDynamicSamplingContext;\n  if (v7FrozenDsc) {\n    return v7FrozenDsc;\n  }\n\n  // TODO (v8): Replace txn.metadata with txn.attributes[]\n  // We can't do this yet because attributes aren't always set yet.\n  // eslint-disable-next-line deprecation/deprecation\n  const { sampleRate: maybeSampleRate, source } = txn.metadata;\n  if (maybeSampleRate != null) {\n    dsc.sample_rate = `${maybeSampleRate}`;\n  }\n\n  // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n  const jsonSpan = spanToJSON(txn);\n\n  // after JSON conversion, txn.name becomes jsonSpan.description\n  if (source && source !== 'url') {\n    dsc.transaction = jsonSpan.description;\n  }\n\n  dsc.sampled = String(spanIsSampled(txn));\n\n  client.emit && client.emit('createDsc', dsc);\n\n  return dsc;\n}\n","import type { Breadcrumb, Event, ScopeData, Span } from '@sentry/types';\nimport { arrayify, dropUndefinedKeys } from '@sentry/utils';\nimport { getDynamicSamplingContextFromSpan } from '../tracing/dynamicSamplingContext';\nimport { getRootSpan } from './getRootSpan';\nimport { spanToJSON, spanToTraceContext } from './spanUtils';\n\n/**\n * Applies data from the scope to the event and runs all event processors on it.\n */\nexport function applyScopeDataToEvent(event: Event, data: ScopeData): void {\n  const { fingerprint, span, breadcrumbs, sdkProcessingMetadata } = data;\n\n  // Apply general data\n  applyDataToEvent(event, data);\n\n  // We want to set the trace context for normal events only if there isn't already\n  // a trace context on the event. There is a product feature in place where we link\n  // errors with transaction and it relies on that.\n  if (span) {\n    applySpanToEvent(event, span);\n  }\n\n  applyFingerprintToEvent(event, fingerprint);\n  applyBreadcrumbsToEvent(event, breadcrumbs);\n  applySdkMetadataToEvent(event, sdkProcessingMetadata);\n}\n\n/** Merge data of two scopes together. */\nexport function mergeScopeData(data: ScopeData, mergeData: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    sdkProcessingMetadata,\n    breadcrumbs,\n    fingerprint,\n    eventProcessors,\n    attachments,\n    propagationContext,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n    span,\n  } = mergeData;\n\n  mergeAndOverwriteScopeData(data, 'extra', extra);\n  mergeAndOverwriteScopeData(data, 'tags', tags);\n  mergeAndOverwriteScopeData(data, 'user', user);\n  mergeAndOverwriteScopeData(data, 'contexts', contexts);\n  mergeAndOverwriteScopeData(data, 'sdkProcessingMetadata', sdkProcessingMetadata);\n\n  if (level) {\n    data.level = level;\n  }\n\n  if (transactionName) {\n    // eslint-disable-next-line deprecation/deprecation\n    data.transactionName = transactionName;\n  }\n\n  if (span) {\n    data.span = span;\n  }\n\n  if (breadcrumbs.length) {\n    data.breadcrumbs = [...data.breadcrumbs, ...breadcrumbs];\n  }\n\n  if (fingerprint.length) {\n    data.fingerprint = [...data.fingerprint, ...fingerprint];\n  }\n\n  if (eventProcessors.length) {\n    data.eventProcessors = [...data.eventProcessors, ...eventProcessors];\n  }\n\n  if (attachments.length) {\n    data.attachments = [...data.attachments, ...attachments];\n  }\n\n  data.propagationContext = { ...data.propagationContext, ...propagationContext };\n}\n\n/**\n * Merges certain scope data. Undefined values will overwrite any existing values.\n * Exported only for tests.\n */\nexport function mergeAndOverwriteScopeData<\n  Prop extends 'extra' | 'tags' | 'user' | 'contexts' | 'sdkProcessingMetadata',\n  Data extends ScopeData,\n>(data: Data, prop: Prop, mergeVal: Data[Prop]): void {\n  if (mergeVal && Object.keys(mergeVal).length) {\n    // Clone object\n    data[prop] = { ...data[prop] };\n    for (const key in mergeVal) {\n      if (Object.prototype.hasOwnProperty.call(mergeVal, key)) {\n        data[prop][key] = mergeVal[key];\n      }\n    }\n  }\n}\n\n/** Exported only for tests */\nexport function mergeArray<Prop extends 'breadcrumbs' | 'fingerprint'>(\n  event: Event,\n  prop: Prop,\n  mergeVal: ScopeData[Prop],\n): void {\n  const prevVal = event[prop];\n  // If we are not merging any new values,\n  // we only need to proceed if there was an empty array before (as we want to replace it with undefined)\n  if (!mergeVal.length && (!prevVal || prevVal.length)) {\n    return;\n  }\n\n  const merged = [...(prevVal || []), ...mergeVal] as ScopeData[Prop];\n  event[prop] = merged.length ? merged : undefined;\n}\n\nfunction applyDataToEvent(event: Event, data: ScopeData): void {\n  const {\n    extra,\n    tags,\n    user,\n    contexts,\n    level,\n    // eslint-disable-next-line deprecation/deprecation\n    transactionName,\n  } = data;\n\n  const cleanedExtra = dropUndefinedKeys(extra);\n  if (cleanedExtra && Object.keys(cleanedExtra).length) {\n    event.extra = { ...cleanedExtra, ...event.extra };\n  }\n\n  const cleanedTags = dropUndefinedKeys(tags);\n  if (cleanedTags && Object.keys(cleanedTags).length) {\n    event.tags = { ...cleanedTags, ...event.tags };\n  }\n\n  const cleanedUser = dropUndefinedKeys(user);\n  if (cleanedUser && Object.keys(cleanedUser).length) {\n    event.user = { ...cleanedUser, ...event.user };\n  }\n\n  const cleanedContexts = dropUndefinedKeys(contexts);\n  if (cleanedContexts && Object.keys(cleanedContexts).length) {\n    event.contexts = { ...cleanedContexts, ...event.contexts };\n  }\n\n  if (level) {\n    event.level = level;\n  }\n\n  if (transactionName) {\n    event.transaction = transactionName;\n  }\n}\n\nfunction applyBreadcrumbsToEvent(event: Event, breadcrumbs: Breadcrumb[]): void {\n  const mergedBreadcrumbs = [...(event.breadcrumbs || []), ...breadcrumbs];\n  event.breadcrumbs = mergedBreadcrumbs.length ? mergedBreadcrumbs : undefined;\n}\n\nfunction applySdkMetadataToEvent(event: Event, sdkProcessingMetadata: ScopeData['sdkProcessingMetadata']): void {\n  event.sdkProcessingMetadata = {\n    ...event.sdkProcessingMetadata,\n    ...sdkProcessingMetadata,\n  };\n}\n\nfunction applySpanToEvent(event: Event, span: Span): void {\n  event.contexts = { trace: spanToTraceContext(span), ...event.contexts };\n  const rootSpan = getRootSpan(span);\n  if (rootSpan) {\n    event.sdkProcessingMetadata = {\n      dynamicSamplingContext: getDynamicSamplingContextFromSpan(span),\n      ...event.sdkProcessingMetadata,\n    };\n    const transactionName = spanToJSON(rootSpan).description;\n    if (transactionName) {\n      event.tags = { transaction: transactionName, ...event.tags };\n    }\n  }\n}\n\n/**\n * Applies fingerprint from the scope to the event if there's one,\n * uses message if there's one instead or get rid of empty fingerprint\n */\nfunction applyFingerprintToEvent(event: Event, fingerprint: ScopeData['fingerprint'] | undefined): void {\n  // Make sure it's an array first and we actually have something in place\n  event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n  // If we have something on the scope, then merge it with event\n  if (fingerprint) {\n    event.fingerprint = event.fingerprint.concat(fingerprint);\n  }\n\n  // If we have no data at all, remove empty array default\n  if (event.fingerprint && !event.fingerprint.length) {\n    delete event.fingerprint;\n  }\n}\n","export const SDK_VERSION = '7.120.3';\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  Session,\n  SessionContext,\n  Severity,\n  SeverityLevel,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  consoleSandbox,\n  dateTimestampInSeconds,\n  getGlobalSingleton,\n  isThenable,\n  logger,\n  uuid4,\n} from '@sentry/utils';\n\nimport { DEFAULT_ENVIRONMENT } from './constants';\nimport { DEBUG_BUILD } from './debug-build';\nimport { Scope } from './scope';\nimport { closeSession, makeSession, updateSession } from './session';\nimport { SDK_VERSION } from './version';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = parseFloat(SDK_VERSION);\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\nexport interface RunWithAsyncContextOptions {\n  /** Whether to reuse an existing async context if one exists. Defaults to false. */\n  reuseExisting?: boolean;\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Strategy used to track async context.\n */\nexport interface AsyncContextStrategy {\n  /**\n   * Gets the current async context. Returns undefined if there is no current async context.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  getCurrentHub: () => Hub | undefined;\n  /**\n   * Runs the supplied callback in its own async context.\n   */\n  runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions): T;\n}\n\n/**\n * A layer in the process stack.\n * @hidden\n */\nexport interface Layer {\n  client?: Client;\n  scope: Scope;\n}\n\n/**\n * An object that contains a hub and maintains a scope stack.\n * @hidden\n */\nexport interface Carrier {\n  __SENTRY__?: {\n    // eslint-disable-next-line deprecation/deprecation\n    hub?: Hub;\n    acs?: AsyncContextStrategy;\n    /**\n     * Extra Hub properties injected by various SDKs\n     */\n    integrations?: Integration[];\n    extensions?: {\n      /** Extension methods for the hub, which are bound to the current Hub instance */\n      // eslint-disable-next-line @typescript-eslint/ban-types\n      [key: string]: Function;\n    };\n  };\n}\n\n/**\n * @deprecated The `Hub` class will be removed in version 8 of the SDK in favour of `Scope` and `Client` objects.\n *\n * If you previously used the `Hub` class directly, replace it with `Scope` and `Client` objects. More information:\n * - [Multiple Sentry Instances](https://docs.sentry.io/platforms/javascript/best-practices/multiple-sentry-instances/)\n * - [Browser Extensions](https://docs.sentry.io/platforms/javascript/best-practices/browser-extensions/)\n *\n * Some of our APIs are typed with the Hub class instead of the interface (e.g. `getCurrentHub`). Most of them are deprecated\n * themselves and will also be removed in version 8. More information:\n * - [Migration Guide](https://github.com/getsentry/sentry-javascript/blob/develop/MIGRATION.md#deprecate-hub)\n */\n// eslint-disable-next-line deprecation/deprecation\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  private _isolationScope: Scope;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   *\n   * @deprecated Instantiation of Hub objects is deprecated and the constructor will be removed in version 8 of the SDK.\n   *\n   * If you are currently using the Hub for multi-client use like so:\n   *\n   * ```\n   * // OLD\n   * const hub = new Hub();\n   * hub.bindClient(client);\n   * makeMain(hub)\n   * ```\n   *\n   * instead initialize the client as follows:\n   *\n   * ```\n   * // NEW\n   * Sentry.withIsolationScope(() => {\n   *    Sentry.setCurrentClient(client);\n   *    client.init();\n   * });\n   * ```\n   *\n   * If you are using the Hub to capture events like so:\n   *\n   * ```\n   * // OLD\n   * const client = new Client();\n   * const hub = new Hub(client);\n   * hub.captureException()\n   * ```\n   *\n   * instead capture isolated events as follows:\n   *\n   * ```\n   * // NEW\n   * const client = new Client();\n   * const scope = new Scope();\n   * scope.setClient(client);\n   * scope.captureException();\n   * ```\n   */\n  public constructor(\n    client?: Client,\n    scope?: Scope,\n    isolationScope?: Scope,\n    private readonly _version: number = API_VERSION,\n  ) {\n    let assignedScope;\n    if (!scope) {\n      assignedScope = new Scope();\n      assignedScope.setClient(client);\n    } else {\n      assignedScope = scope;\n    }\n\n    let assignedIsolationScope;\n    if (!isolationScope) {\n      assignedIsolationScope = new Scope();\n      assignedIsolationScope.setClient(client);\n    } else {\n      assignedIsolationScope = isolationScope;\n    }\n\n    this._stack = [{ scope: assignedScope }];\n\n    if (client) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.bindClient(client);\n    }\n\n    this._isolationScope = assignedIsolationScope;\n  }\n\n  /**\n   * Checks if this hub's version is older than the given version.\n   *\n   * @param version A version number to compare to.\n   * @return True if the given version is newer; otherwise false.\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * This binds the given client to the current scope.\n   * @param client An SDK client (client) instance.\n   *\n   * @deprecated Use `initAndBind()` directly, or `setCurrentClient()` and/or `client.init()` instead.\n   */\n  public bindClient(client?: Client): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const top = this.getStackTop();\n    top.client = client;\n    top.scope.setClient(client);\n    // eslint-disable-next-line deprecation/deprecation\n    if (client && client.setupIntegrations) {\n      // eslint-disable-next-line deprecation/deprecation\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.getScope().clone();\n    // eslint-disable-next-line deprecation/deprecation\n    this.getStack().push({\n      // eslint-disable-next-line deprecation/deprecation\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `withScope` instead.\n   */\n  public popScope(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    if (this.getStack().length <= 1) return false;\n    // eslint-disable-next-line deprecation/deprecation\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.withScope()` instead.\n   */\n  public withScope<T>(callback: (scope: Scope) => T): T {\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = this.pushScope();\n\n    let maybePromiseResult: T;\n    try {\n      maybePromiseResult = callback(scope);\n    } catch (e) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.popScope();\n      throw e;\n    }\n\n    if (isThenable(maybePromiseResult)) {\n      // @ts-expect-error - isThenable returns the wrong type\n      return maybePromiseResult.then(\n        res => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          return res;\n        },\n        e => {\n          // eslint-disable-next-line deprecation/deprecation\n          this.popScope();\n          throw e;\n        },\n      );\n    }\n\n    // eslint-disable-next-line deprecation/deprecation\n    this.popScope();\n    return maybePromiseResult;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.getClient()` instead.\n   */\n  public getClient<C extends Client>(): C | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().client as C;\n  }\n\n  /**\n   * Returns the scope of the top stack.\n   *\n   * @deprecated Use `Sentry.getCurrentScope()` instead.\n   */\n  public getScope(): Scope {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.getStackTop().scope;\n  }\n\n  /**\n   * @deprecated Use `Sentry.getIsolationScope()` instead.\n   */\n  public getIsolationScope(): Scope {\n    return this._isolationScope;\n  }\n\n  /**\n   * Returns the scope stack for domains or the process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /**\n   * Returns the topmost scope layer in the order domain > local > process.\n   * @deprecated This will be removed in v8.\n   */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureException()` instead.\n   */\n  public captureException(exception: unknown, hint?: EventHint): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureException(exception, {\n      originalException: exception,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use  `Sentry.captureMessage()` instead.\n   */\n  public captureMessage(\n    message: string,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n  ): string {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureMessage(message, level, {\n      originalException: message,\n      syntheticException,\n      ...hint,\n      event_id: eventId,\n    });\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.captureEvent()` instead.\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().captureEvent(event, { ...hint, event_id: eventId });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated This will be removed in v8.\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `Sentry.addBreadcrumb()` instead.\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    // TODO(v8): I know this comment doesn't make much sense because the hub will be deprecated but I still wanted to\n    // write it down. In theory, we would have to add the breadcrumbs to the isolation scope here, however, that would\n    // duplicate all of the breadcrumbs. There was the possibility of adding breadcrumbs to both, the isolation scope\n    // and the normal scope, and deduplicating it down the line in the event processing pipeline. However, that would\n    // have been very fragile, because the breadcrumb objects would have needed to keep their identity all throughout\n    // the event processing pipeline.\n    // In the new implementation, the top level `Sentry.addBreadcrumb()` should ONLY write to the isolation scope.\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setUser()` instead.\n   */\n  public setUser(user: User | null): void {\n    // TODO(v8): The top level `Sentry.setUser()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setUser(user);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTags()` instead.\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    // TODO(v8): The top level `Sentry.setTags()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTags(tags);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtras()` instead.\n   */\n  public setExtras(extras: Extras): void {\n    // TODO(v8): The top level `Sentry.setExtras()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtras(extras);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setTag()` instead.\n   */\n  public setTag(key: string, value: Primitive): void {\n    // TODO(v8): The top level `Sentry.setTag()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setTag(key, value);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setExtra()` instead.\n   */\n  public setExtra(key: string, extra: Extra): void {\n    // TODO(v8): The top level `Sentry.setExtra()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setExtra(key, extra);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.setContext()` instead.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    // TODO(v8): The top level `Sentry.setContext()` function should write ONLY to the isolation scope.\n    // eslint-disable-next-line deprecation/deprecation\n    this.getScope().setContext(name, context);\n    // eslint-disable-next-line deprecation/deprecation\n    this.getIsolationScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use `getScope()` directly.\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  public run(callback: (hub: Hub) => void): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      // eslint-disable-next-line deprecation/deprecation\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `Sentry.getClient().getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      // eslint-disable-next-line deprecation/deprecation\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n   *\n   * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n   * new child span within the transaction or any span, call the respective `.startChild()` method.\n   *\n   * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n   *\n   * The transaction must be finished with a call to its `.end()` method, at which point the transaction with all its\n   * finished child spans will be sent to Sentry.\n   *\n   * @param context Properties of the new `Transaction`.\n   * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n   * default values). See {@link Options.tracesSampler}.\n   *\n   * @returns The transaction which was just started\n   *\n   * @deprecated Use `startSpan()`, `startSpanManual()` or `startInactiveSpan()` instead.\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    const result = this._callExtensionMethod<Transaction>('startTransaction', context, customSamplingContext);\n\n    if (DEBUG_BUILD && !result) {\n      // eslint-disable-next-line deprecation/deprecation\n      const client = this.getClient();\n      if (!client) {\n        logger.warn(\n          \"Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'\",\n        );\n      } else {\n        logger.warn(`Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':\nSentry.addTracingExtensions();\nSentry.init({...});\n`);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use `spanToTraceHeader()` instead.\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @deprecated Use top level `captureSession` instead.\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      // eslint-disable-next-line deprecation/deprecation\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `endSession` instead.\n   */\n  public endSession(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   * @deprecated Use top level `startSession` instead.\n   */\n  public startSession(context?: SessionContext): Session {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    // eslint-disable-next-line deprecation/deprecation\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   *\n   * @deprecated Use top-level `getClient().getOptions().sendDefaultPii` instead. This function\n   * only unnecessarily increased API surface but only wrapped accessing the option.\n   */\n  public shouldSendDefaultPii(): boolean {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { scope, client } = this.getStackTop();\n\n    const session = scope.getSession();\n    if (session && client && client.captureSession) {\n      client.captureSession(session);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-expect-error Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    DEBUG_BUILD && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nexport function getMainCarrier(): Carrier {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n *\n * @deprecated Use `setCurrentClient()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n *\n * @deprecated Use the respective replacement method directly instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    const hub = registry.__SENTRY__.acs.getCurrentHub();\n\n    if (hub) {\n      return hub;\n    }\n  }\n\n  // Return hub that lives on a global object\n  return getGlobalHub(registry);\n}\n\n/**\n * Get the currently active isolation scope.\n * The isolation scope is active for the current exection context,\n * meaning that it will remain stable for the same Hub.\n */\nexport function getIsolationScope(): Scope {\n  // eslint-disable-next-line deprecation/deprecation\n  return getCurrentHub().getIsolationScope();\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction getGlobalHub(registry: Carrier = getMainCarrier()): Hub {\n  // If there's no hub, or its an old API, assign a new one\n\n  if (\n    !hasHubOnCarrier(registry) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(registry).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * If the carrier does not contain a hub, a new hub is created with the global hub client and scope.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function ensureHubOnCarrier(carrier: Carrier, parent: Hub = getGlobalHub()): void {\n  // If there's no hub on current domain, or it's an old API, assign a new one\n  if (\n    !hasHubOnCarrier(carrier) ||\n    // eslint-disable-next-line deprecation/deprecation\n    getHubFromCarrier(carrier).isOlderThan(API_VERSION)\n  ) {\n    // eslint-disable-next-line deprecation/deprecation\n    const client = parent.getClient();\n    // eslint-disable-next-line deprecation/deprecation\n    const scope = parent.getScope();\n    // eslint-disable-next-line deprecation/deprecation\n    const isolationScope = parent.getIsolationScope();\n    // eslint-disable-next-line deprecation/deprecation\n    setHubOnCarrier(carrier, new Hub(client, scope.clone(), isolationScope.clone()));\n  }\n}\n\n/**\n * @private Private API with no semver guarantees!\n *\n * Sets the global async context strategy\n */\nexport function setAsyncContextStrategy(strategy: AsyncContextStrategy | undefined): void {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n  registry.__SENTRY__ = registry.__SENTRY__ || {};\n  registry.__SENTRY__.acs = strategy;\n}\n\n/**\n * Runs the supplied callback in its own async context. Async Context strategies are defined per SDK.\n *\n * @param callback The callback to run in its own async context\n * @param options Options to pass to the async context strategy\n * @returns The result of the callback\n */\nexport function runWithAsyncContext<T>(callback: () => T, options: RunWithAsyncContextOptions = {}): T {\n  const registry = getMainCarrier();\n\n  if (registry.__SENTRY__ && registry.__SENTRY__.acs) {\n    return registry.__SENTRY__.acs.runWithAsyncContext(callback, options);\n  }\n\n  // if there was no strategy, fallback to just calling the callback\n  return callback();\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return getGlobalSingleton<Hub>('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n","import type {\n  Client,\n  Event,\n  EventHint,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  IntegrationFnResult,\n  Options,\n} from '@sentry/types';\nimport { arrayify, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { addGlobalEventProcessor } from './eventProcessors';\nimport { getClient } from './exports';\nimport { getCurrentHub } from './hub';\n\ndeclare module '@sentry/types' {\n  interface Integration {\n    isDefaultInstance?: boolean;\n  }\n}\n\nexport const installedIntegrations: string[] = [];\n\n/** Map of integrations assigned to a client */\nexport type IntegrationIndex = {\n  [key: string]: Integration;\n};\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations: Integration[]): Integration[] {\n  const integrationsByName: { [key: string]: Integration } = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nexport function getIntegrationsToSetup(options: Pick<Options, 'defaultIntegrations' | 'integrations'>): Integration[] {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations: Integration[];\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = arrayify(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(client: Client, integrations: Integration[]): IntegrationIndex {\n  const integrationIndex: IntegrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(client, integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/**\n * Execute the `afterAllSetup` hooks of the given integrations.\n */\nexport function afterSetupIntegrations(client: Client, integrations: Integration[]): void {\n  for (const integration of integrations) {\n    // guard against empty provided integrations\n    if (integration && integration.afterAllSetup) {\n      integration.afterAllSetup(client);\n    }\n  }\n}\n\n/** Setup a single integration.  */\nexport function setupIntegration(client: Client, integration: Integration, integrationIndex: IntegrationIndex): void {\n  if (integrationIndex[integration.name]) {\n    DEBUG_BUILD && logger.log(`Integration skipped because it was already installed: ${integration.name}`);\n    return;\n  }\n  integrationIndex[integration.name] = integration;\n\n  // `setupOnce` is only called the first time\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    // eslint-disable-next-line deprecation/deprecation\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n  }\n\n  // `setup` is run for each client\n  if (integration.setup && typeof integration.setup === 'function') {\n    integration.setup(client);\n  }\n\n  if (client.on && typeof integration.preprocessEvent === 'function') {\n    const callback = integration.preprocessEvent.bind(integration) as typeof integration.preprocessEvent;\n    client.on('preprocessEvent', (event, hint) => callback(event, hint, client));\n  }\n\n  if (client.addEventProcessor && typeof integration.processEvent === 'function') {\n    const callback = integration.processEvent.bind(integration) as typeof integration.processEvent;\n\n    const processor = Object.assign((event: Event, hint: EventHint) => callback(event, hint, client), {\n      id: integration.name,\n    });\n\n    client.addEventProcessor(processor);\n  }\n\n  DEBUG_BUILD && logger.log(`Integration installed: ${integration.name}`);\n}\n\n/** Add an integration to the current hub's client. */\nexport function addIntegration(integration: Integration): void {\n  const client = getClient();\n\n  if (!client || !client.addIntegration) {\n    DEBUG_BUILD && logger.warn(`Cannot add integration \"${integration.name}\" because no SDK Client is available.`);\n    return;\n  }\n\n  client.addIntegration(integration);\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex<T>(arr: T[], callback: (item: T) => boolean): number {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n/**\n * Convert a new integration function to the legacy class syntax.\n * In v8, we can remove this and instead export the integration functions directly.\n *\n * @deprecated This will be removed in v8!\n */\nexport function convertIntegrationFnToClass<Fn extends IntegrationFn>(\n  name: string,\n  fn: Fn,\n): IntegrationClass<Integration> {\n  return Object.assign(\n    function ConvertedIntegration(...args: Parameters<Fn>): Integration {\n      return fn(...args);\n    },\n    { id: name },\n  ) as unknown as IntegrationClass<Integration>;\n}\n\n/**\n * Define an integration function that can be used to create an integration instance.\n * Note that this by design hides the implementation details of the integration, as they are considered internal.\n */\nexport function defineIntegration<Fn extends IntegrationFn>(fn: Fn): (...args: Parameters<Fn>) => IntegrationFnResult {\n  return fn;\n}\n","import type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { getEventDescription, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [\n  /^Script error\\.?$/,\n  /^Javascript error: Script error\\.? on line 0$/,\n  /^ResizeObserver loop completed with undelivered notifications.$/,\n  /^Cannot redefine property: googletag$/,\n];\n\nconst DEFAULT_IGNORE_TRANSACTIONS = [\n  /^.*\\/healthcheck$/,\n  /^.*\\/healthy$/,\n  /^.*\\/live$/,\n  /^.*\\/ready$/,\n  /^.*\\/heartbeat$/,\n  /^.*\\/health$/,\n  /^.*\\/healthz$/,\n];\n\n/** Options for the InboundFilters integration */\nexport interface InboundFiltersOptions {\n  allowUrls: Array<string | RegExp>;\n  denyUrls: Array<string | RegExp>;\n  ignoreErrors: Array<string | RegExp>;\n  ignoreTransactions: Array<string | RegExp>;\n  ignoreInternal: boolean;\n  disableErrorDefaults: boolean;\n  disableTransactionDefaults: boolean;\n}\n\nconst INTEGRATION_NAME = 'InboundFilters';\nconst _inboundFiltersIntegration = ((options: Partial<InboundFiltersOptions> = {}) => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(event, _hint, client) {\n      const clientOptions = client.getOptions();\n      const mergedOptions = _mergeOptions(options, clientOptions);\n      return _shouldDropEvent(event, mergedOptions) ? null : event;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const inboundFiltersIntegration = defineIntegration(_inboundFiltersIntegration);\n\n/**\n * Inbound filters configurable by the user.\n * @deprecated Use `inboundFiltersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const InboundFilters = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  inboundFiltersIntegration,\n) as IntegrationClass<Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }> & {\n  new (\n    options?: Partial<{\n      allowUrls: Array<string | RegExp>;\n      denyUrls: Array<string | RegExp>;\n      ignoreErrors: Array<string | RegExp>;\n      ignoreTransactions: Array<string | RegExp>;\n      ignoreInternal: boolean;\n      disableErrorDefaults: boolean;\n      disableTransactionDefaults: boolean;\n    }>,\n  ): Integration;\n};\n\nfunction _mergeOptions(\n  internalOptions: Partial<InboundFiltersOptions> = {},\n  clientOptions: Partial<InboundFiltersOptions> = {},\n): Partial<InboundFiltersOptions> {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...(internalOptions.disableErrorDefaults ? [] : DEFAULT_IGNORE_ERRORS),\n    ],\n    ignoreTransactions: [\n      ...(internalOptions.ignoreTransactions || []),\n      ...(clientOptions.ignoreTransactions || []),\n      ...(internalOptions.disableTransactionDefaults ? [] : DEFAULT_IGNORE_TRANSACTIONS),\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\nfunction _shouldDropEvent(event: Event, options: Partial<InboundFiltersOptions>): boolean {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    DEBUG_BUILD &&\n      logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${getEventDescription(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isIgnoredTransaction(event, options.ignoreTransactions)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`ignoreTransactions\\` option.\\nEvent: ${getEventDescription(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${getEventDescription(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event: Event, ignoreErrors?: Array<string | RegExp>): boolean {\n  // If event.type, this is not an error\n  if (event.type || !ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => stringMatchesSomePattern(message, ignoreErrors));\n}\n\nfunction _isIgnoredTransaction(event: Event, ignoreTransactions?: Array<string | RegExp>): boolean {\n  if (event.type !== 'transaction' || !ignoreTransactions || !ignoreTransactions.length) {\n    return false;\n  }\n\n  const name = event.transaction;\n  return name ? stringMatchesSomePattern(name, ignoreTransactions) : false;\n}\n\nfunction _isDeniedUrl(event: Event, denyUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : stringMatchesSomePattern(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event: Event, allowUrls?: Array<string | RegExp>): boolean {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : stringMatchesSomePattern(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event: Event): string[] {\n  const possibleMessages: string[] = [];\n\n  if (event.message) {\n    possibleMessages.push(event.message);\n  }\n\n  let lastException;\n  try {\n    // @ts-expect-error Try catching to save bundle size\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    lastException = event.exception.values[event.exception.values.length - 1];\n  } catch (e) {\n    // try catching to save bundle size checking existence of variables\n  }\n\n  if (lastException) {\n    if (lastException.value) {\n      possibleMessages.push(lastException.value);\n      if (lastException.type) {\n        possibleMessages.push(`${lastException.type}: ${lastException.value}`);\n      }\n    }\n  }\n\n  if (DEBUG_BUILD && possibleMessages.length === 0) {\n    logger.error(`Could not extract message for event ${getEventDescription(event)}`);\n  }\n\n  return possibleMessages;\n}\n\nfunction _isSentryError(event: Event): boolean {\n  try {\n    // @ts-expect-error can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames: StackFrame[] = []): string | null {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event: Event): string | null {\n  try {\n    let frames;\n    try {\n      // @ts-expect-error we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    DEBUG_BUILD && logger.error(`Cannot extract url for event ${getEventDescription(event)}`);\n    return null;\n  }\n}\n","import type { Client, Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { getOriginalFunction } from '@sentry/utils';\nimport { getClient } from '../exports';\nimport { convertIntegrationFnToClass, defineIntegration } from '../integration';\n\nlet originalFunctionToString: () => void;\n\nconst INTEGRATION_NAME = 'FunctionToString';\n\nconst SETUP_CLIENTS = new WeakMap<Client, boolean>();\n\nconst _functionToStringIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      originalFunctionToString = Function.prototype.toString;\n\n      // intrinsics (like Function.prototype) might be immutable in some environments\n      // e.g. Node with --frozen-intrinsics, XS (an embedded JavaScript engine) or SES (a JavaScript proposal)\n      try {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Function.prototype.toString = function (this: WrappedFunction, ...args: any[]): string {\n          const originalFunction = getOriginalFunction(this);\n          const context =\n            SETUP_CLIENTS.has(getClient() as Client) && originalFunction !== undefined ? originalFunction : this;\n          return originalFunctionToString.apply(context, args);\n        };\n      } catch {\n        // ignore errors here, just don't patch this\n      }\n    },\n    setup(client) {\n      SETUP_CLIENTS.set(client, true);\n    },\n  };\n}) satisfies IntegrationFn;\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * ```js\n * Sentry.init({\n *   integrations: [\n *     functionToStringIntegration(),\n *   ],\n * });\n * ```\n */\nexport const functionToStringIntegration = defineIntegration(_functionToStringIntegration);\n\n/**\n * Patch toString calls to return proper name for wrapped functions.\n *\n * @deprecated Use `functionToStringIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const FunctionToString = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  functionToStringIntegration,\n) as IntegrationClass<Integration & { setupOnce: () => void }>;\n\n// eslint-disable-next-line deprecation/deprecation\nexport type FunctionToString = typeof FunctionToString;\n","import type { browserTracingIntegration } from '@sentry-internal/tracing';\nimport { BrowserTracing } from '@sentry-internal/tracing';\nimport { captureException, withScope } from '@sentry/core';\nimport type { DsnLike, Integration, Mechanism, WrappedFunction } from '@sentry/types';\nimport {\n  GLOBAL_OBJ,\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  addNonEnumerableProperty,\n  getOriginalFunction,\n  markFunctionWrapped,\n} from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nlet ignoreOnError: number = 0;\n\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError(): boolean {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nexport function ignoreNextOnError(): void {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(\n  fn: WrappedFunction,\n  options: {\n    mechanism?: Mechanism;\n  } = {},\n  before?: WrappedFunction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): any {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      if (typeof wrapper === 'function') {\n        return wrapper;\n      } else {\n        // If we find that the `__sentry_wrapped__` function is not a function at the time of accessing it, it means\n        // that something messed with it. In that case we want to return the originally passed function.\n        return fn;\n      }\n    }\n\n    // We don't wanna wrap it twice\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped: WrappedFunction = function (this: unknown): void {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg: any) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      withScope(scope => {\n        scope.addEventProcessor(event => {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        captureException(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  markFunctionWrapped(sentryWrapped, fn);\n\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') as PropertyDescriptor;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get(): string {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n *\n * @deprecated This type will be removed in the next major version of the Sentry SDK. `showReportDialog` will still be around, however the `eventId` option will now be required.\n */\nexport interface ReportDialogOptions {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [key: string]: any;\n  eventId?: string;\n  dsn?: DsnLike;\n  user?: {\n    email?: string;\n    name?: string;\n  };\n  lang?: string;\n  title?: string;\n  subtitle?: string;\n  subtitle2?: string;\n  labelName?: string;\n  labelEmail?: string;\n  labelComments?: string;\n  labelClose?: string;\n  labelSubmit?: string;\n  errorGeneric?: string;\n  errorFormEntry?: string;\n  successMessage?: string;\n  /** Callback after reportDialog showed up */\n  onLoad?(this: void): void;\n  /** Callback after reportDialog closed */\n  onClose?(this: void): void;\n}\n\n/**\n * This is a slim shim of `browserTracingIntegration` for the CDN bundles.\n * Since the actual functional integration uses a different code from `BrowserTracing`,\n * we want to avoid shipping both of them in the CDN bundles, as that would blow up the size.\n * Instead, we provide a functional integration with the same API, but the old implementation.\n * This means that it's not possible to register custom routing instrumentation, but that's OK for now.\n * We also don't expose the utilities for this anyhow in the CDN bundles.\n * For users that need custom routing in CDN bundles, they have to continue using `new BrowserTracing()` until v8.\n */\nexport function bundleBrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] = {},\n): Integration {\n  // Migrate some options from the old integration to the new one\n  // eslint-disable-next-line deprecation/deprecation\n  const opts: ConstructorParameters<typeof BrowserTracing>[0] = options;\n\n  if (typeof options.markBackgroundSpan === 'boolean') {\n    opts.markBackgroundTransactions = options.markBackgroundSpan;\n  }\n\n  if (typeof options.instrumentPageLoad === 'boolean') {\n    opts.startTransactionOnPageLoad = options.instrumentPageLoad;\n  }\n\n  if (typeof options.instrumentNavigation === 'boolean') {\n    opts.startTransactionOnLocationChange = options.instrumentNavigation;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return new BrowserTracing(opts);\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Integration, IntegrationClass, IntegrationFn, WrappedFunction } from '@sentry/types';\nimport { fill, getFunctionName, getOriginalFunction } from '@sentry/utils';\n\nimport { WINDOW, wrap } from '../helpers';\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'BroadcastChannel',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'SharedWorker',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\nconst INTEGRATION_NAME = 'TryCatch';\n\ntype XMLHttpRequestProp = 'onload' | 'onerror' | 'onprogress' | 'onreadystatechange';\n\ninterface TryCatchOptions {\n  setTimeout: boolean;\n  setInterval: boolean;\n  requestAnimationFrame: boolean;\n  XMLHttpRequest: boolean;\n  eventTarget: boolean | string[];\n}\n\nconst _browserApiErrorsIntegration = ((options: Partial<TryCatchOptions> = {}) => {\n  const _options = {\n    XMLHttpRequest: true,\n    eventTarget: true,\n    requestAnimationFrame: true,\n    setInterval: true,\n    setTimeout: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO: This currently only works for the first client this is setup\n    // We may want to adjust this to check for client etc.\n    setupOnce() {\n      if (_options.setTimeout) {\n        fill(WINDOW, 'setTimeout', _wrapTimeFunction);\n      }\n\n      if (_options.setInterval) {\n        fill(WINDOW, 'setInterval', _wrapTimeFunction);\n      }\n\n      if (_options.requestAnimationFrame) {\n        fill(WINDOW, 'requestAnimationFrame', _wrapRAF);\n      }\n\n      if (_options.XMLHttpRequest && 'XMLHttpRequest' in WINDOW) {\n        fill(XMLHttpRequest.prototype, 'send', _wrapXHR);\n      }\n\n      const eventTargetOption = _options.eventTarget;\n      if (eventTargetOption) {\n        const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n        eventTarget.forEach(_wrapEventTarget);\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const browserApiErrorsIntegration = defineIntegration(_browserApiErrorsIntegration);\n\n/**\n * Wrap timer functions and event targets to catch errors and provide better meta data.\n * @deprecated Use `browserApiErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const TryCatch = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  browserApiErrorsIntegration,\n) as IntegrationClass<Integration> & {\n  new (options?: {\n    setTimeout: boolean;\n    setInterval: boolean;\n    requestAnimationFrame: boolean;\n    XMLHttpRequest: boolean;\n    eventTarget: boolean | string[];\n  }): Integration;\n};\n\nfunction _wrapTimeFunction(original: () => void): () => number {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, ...args: any[]): number {\n    const originalCallback = args[0];\n    args[0] = wrap(originalCallback, {\n      mechanism: {\n        data: { function: getFunctionName(original) },\n        handled: false,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original: any): (callback: () => void) => any {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: any, callback: () => void): () => void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      wrap(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: getFunctionName(original),\n          },\n          handled: false,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\nfunction _wrapXHR(originalSend: () => void): () => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (this: XMLHttpRequest, ...args: any[]): void {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps: XMLHttpRequestProp[] = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        fill(xhr, prop, function (original: WrappedFunction): () => any {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: getFunctionName(original),\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = getOriginalFunction(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = getFunctionName(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return wrap(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\nfunction _wrapEventTarget(target: string): void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = WINDOW as { [key: string]: any };\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  fill(proto, 'addEventListener', function (original: VoidFunction,): (\n    eventName: string,\n    fn: EventListenerObject,\n    options?: boolean | AddEventListenerOptions,\n  ) => void {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this: any,\n      eventName: string,\n      fn: EventListenerObject,\n      options?: boolean | AddEventListenerOptions,\n    ): (eventName: string, fn: EventListenerObject, capture?: boolean, secure?: boolean) => void {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = wrap(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: getFunctionName(fn),\n                target,\n              },\n              handled: false,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        wrap(fn as any as WrappedFunction, {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: getFunctionName(fn),\n              target,\n            },\n            handled: false,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  fill(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener: () => void,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): (this: any, eventName: string, fn: EventListenerObject, options?: boolean | EventListenerOptions) => () => void {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this: any,\n        eventName: string,\n        fn: EventListenerObject,\n        options?: boolean | EventListenerOptions,\n      ): () => void {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn as unknown as WrappedFunction;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport { logger } from '../logger';\nimport { getFunctionName } from '../stacktrace';\n\nexport type InstrumentHandlerType = 'console' | 'dom' | 'fetch' | 'history' | 'xhr' | 'error' | 'unhandledrejection';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type InstrumentHandlerCallback = (data: any) => void;\n\n// We keep the handlers globally\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\n/** Add a handler function. */\nexport function addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n/**\n * Reset all instrumentation handlers.\n * This can be used by tests to ensure we have a clean slate of instrumentation handlers.\n */\nexport function resetInstrumentationHandlers(): void {\n  Object.keys(handlers).forEach(key => {\n    handlers[key as InstrumentHandlerType] = undefined;\n  });\n}\n\n/** Maybe run an instrumentation function, unless it was already called. */\nexport function maybeInstrument(type: InstrumentHandlerType, instrumentFn: () => void): void {\n  if (!instrumented[type]) {\n    instrumentFn();\n    instrumented[type] = true;\n  }\n}\n\n/** Trigger handlers for a given instrumentation type. */\nexport function triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = type && handlers[type];\n  if (!typeHandlers) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n","import type { HandlerDataError } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnErrorHandler: (typeof GLOBAL_OBJ)['onerror'] | null = null;\n\n/**\n * Add an instrumentation handler for when an error is captured by the global error handler.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalErrorInstrumentationHandler(handler: (data: HandlerDataError) => void): void {\n  const type = 'error';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentError);\n}\n\nfunction instrumentError(): void {\n  _oldOnErrorHandler = GLOBAL_OBJ.onerror;\n\n  GLOBAL_OBJ.onerror = function (\n    msg: string | object,\n    url?: string,\n    line?: number,\n    column?: number,\n    error?: Error,\n  ): boolean {\n    const handlerData: HandlerDataError = {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    };\n    triggerHandlers('error', handlerData);\n\n    if (_oldOnErrorHandler && !_oldOnErrorHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n\n  GLOBAL_OBJ.onerror.__SENTRY_INSTRUMENTED__ = true;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { HandlerDataUnhandledRejection } from '@sentry/types';\n\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nlet _oldOnUnhandledRejectionHandler: (typeof GLOBAL_OBJ)['onunhandledrejection'] | null = null;\n\n/**\n * Add an instrumentation handler for when an unhandled promise rejection is captured.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addGlobalUnhandledRejectionInstrumentationHandler(\n  handler: (data: HandlerDataUnhandledRejection) => void,\n): void {\n  const type = 'unhandledrejection';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentUnhandledRejection);\n}\n\nfunction instrumentUnhandledRejection(): void {\n  _oldOnUnhandledRejectionHandler = GLOBAL_OBJ.onunhandledrejection;\n\n  GLOBAL_OBJ.onunhandledrejection = function (e: any): boolean {\n    const handlerData: HandlerDataUnhandledRejection = e;\n    triggerHandlers('unhandledrejection', handlerData);\n\n    if (_oldOnUnhandledRejectionHandler && !_oldOnUnhandledRejectionHandler.__SENTRY_LOADER__) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n\n  GLOBAL_OBJ.onunhandledrejection.__SENTRY_INSTRUMENTED__ = true;\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Event,\n  EventHint,\n  Exception,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  StackFrame,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addExceptionMechanism,\n  addExceptionTypeValue,\n  extractExceptionKeysForMessage,\n  isDOMError,\n  isDOMException,\n  isError,\n  isErrorEvent,\n  isEvent,\n  isParameterizedString,\n  isPlainObject,\n  normalizeToSize,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\ntype Prototype = { constructor: (...args: unknown[]) => unknown };\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nexport function exceptionFromError(stackParser: StackParser, ex: Error): Exception {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception: Exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nexport function eventFromPlainObject(\n  stackParser: StackParser,\n  exception: Record<string, unknown>,\n  syntheticException?: Error,\n  isUnhandledRejection?: boolean,\n): Event {\n  const client = getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event: Event = {\n    exception: {\n      values: [\n        {\n          type: isEvent(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: getNonErrorObjectExceptionValue(exception, { isUnhandledRejection }),\n        },\n      ],\n    },\n    extra: {\n      __serialized__: normalizeToSize(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception as { values: Exception[] }).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromError(stackParser: StackParser, ex: Error): Event {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nexport function parseStackFrames(\n  stackParser: StackParser,\n  ex: Error & { framesToPop?: number; stacktrace?: string },\n): StackFrame[] {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex: Error & { framesToPop?: number }): number {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex: Error & { message: { error?: Error } }): string {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nexport function eventFromException(\n  stackParser: StackParser,\n  exception: unknown,\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  addExceptionMechanism(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nexport function eventFromMessage(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  // eslint-disable-next-line deprecation/deprecation\n  level: Severity | SeverityLevel = 'info',\n  hint?: EventHint,\n  attachStacktrace?: boolean,\n): PromiseLike<Event> {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return resolvedSyncPromise(event);\n}\n\n/**\n * @hidden\n */\nexport function eventFromUnknownInput(\n  stackParser: StackParser,\n  exception: unknown,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n  isUnhandledRejection?: boolean,\n): Event {\n  let event: Event;\n\n  if (isErrorEvent(exception as ErrorEvent) && (exception as ErrorEvent).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception as ErrorEvent;\n    return eventFromError(stackParser, errorEvent.error as Error);\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if (isDOMError(exception) || isDOMException(exception as DOMException)) {\n    const domException = exception as DOMException;\n\n    if ('stack' in (exception as Error)) {\n      event = eventFromError(stackParser, exception as Error);\n    } else {\n      const name = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      addExceptionTypeValue(event, message);\n    }\n    if ('code' in domException) {\n      // eslint-disable-next-line deprecation/deprecation\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if (isError(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if (isPlainObject(exception) || isEvent(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception as Record<string, unknown>;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    addExceptionMechanism(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception as string, syntheticException, attachStacktrace);\n  addExceptionTypeValue(event, `${exception}`, undefined);\n  addExceptionMechanism(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nexport function eventFromString(\n  stackParser: StackParser,\n  message: ParameterizedString,\n  syntheticException?: Error,\n  attachStacktrace?: boolean,\n): Event {\n  const event: Event = {};\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: message, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  if (isParameterizedString(message)) {\n    const { __sentry_template_string__, __sentry_template_values__ } = message;\n\n    event.logentry = {\n      message: __sentry_template_string__,\n      params: __sentry_template_values__,\n    };\n    return event;\n  }\n\n  event.message = message;\n  return event;\n}\n\nfunction getNonErrorObjectExceptionValue(\n  exception: Record<string, unknown>,\n  { isUnhandledRejection }: { isUnhandledRejection?: boolean },\n): string {\n  const keys = extractExceptionKeysForMessage(exception);\n  const captureType = isUnhandledRejection ? 'promise rejection' : 'exception';\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as ${captureType} with message \\`${exception.message}\\``;\n  }\n\n  if (isEvent(exception)) {\n    const className = getObjectClassName(exception);\n    return `Event \\`${className}\\` (type=${exception.type}) captured as ${captureType}`;\n  }\n\n  return `Object captured as ${captureType} with keys: ${keys}`;\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: Prototype | null = Object.getPrototypeOf(obj);\n    return prototype ? prototype.constructor.name : undefined;\n  } catch (e) {\n    // ignore errors here\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { captureEvent, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n  Primitive,\n  StackParser,\n} from '@sentry/types';\nimport {\n  addGlobalErrorInstrumentationHandler,\n  addGlobalUnhandledRejectionInstrumentationHandler,\n  getLocationHref,\n  isErrorEvent,\n  isPrimitive,\n  isString,\n  logger,\n} from '@sentry/utils';\n\nimport type { BrowserClient } from '../client';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { eventFromUnknownInput } from '../eventbuilder';\nimport { shouldIgnoreOnError } from '../helpers';\n\ntype GlobalHandlersIntegrationsOptionKeys = 'onerror' | 'onunhandledrejection';\n\ntype GlobalHandlersIntegrations = Record<GlobalHandlersIntegrationsOptionKeys, boolean>;\n\nconst INTEGRATION_NAME = 'GlobalHandlers';\n\nconst _globalHandlersIntegration = ((options: Partial<GlobalHandlersIntegrations> = {}) => {\n  const _options = {\n    onerror: true,\n    onunhandledrejection: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    setupOnce() {\n      Error.stackTraceLimit = 50;\n    },\n    setup(client) {\n      if (_options.onerror) {\n        _installGlobalOnErrorHandler(client);\n        globalHandlerLog('onerror');\n      }\n      if (_options.onunhandledrejection) {\n        _installGlobalOnUnhandledRejectionHandler(client);\n        globalHandlerLog('onunhandledrejection');\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const globalHandlersIntegration = defineIntegration(_globalHandlersIntegration);\n\n/**\n * Global handlers.\n * @deprecated Use `globalHandlersIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const GlobalHandlers = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  globalHandlersIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: Partial<GlobalHandlersIntegrations>): Integration;\n};\n\nfunction _installGlobalOnErrorHandler(client: Client): void {\n  addGlobalErrorInstrumentationHandler(data => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const { msg, url, line, column, error } = data;\n\n    const event =\n      error === undefined && isString(msg)\n        ? _eventFromIncompleteOnError(msg, url, line, column)\n        : _enhanceEventWithInitialFrame(\n            eventFromUnknownInput(stackParser, error || msg, undefined, attachStacktrace, false),\n            url,\n            line,\n            column,\n          );\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onerror',\n      },\n    });\n  });\n}\n\nfunction _installGlobalOnUnhandledRejectionHandler(client: Client): void {\n  addGlobalUnhandledRejectionInstrumentationHandler(e => {\n    const { stackParser, attachStacktrace } = getOptions();\n\n    if (getClient() !== client || shouldIgnoreOnError()) {\n      return;\n    }\n\n    const error = _getUnhandledRejectionError(e as unknown);\n\n    const event = isPrimitive(error)\n      ? _eventFromRejectionWithPrimitive(error)\n      : eventFromUnknownInput(stackParser, error, undefined, attachStacktrace, true);\n\n    event.level = 'error';\n\n    captureEvent(event, {\n      originalException: error,\n      mechanism: {\n        handled: false,\n        type: 'onunhandledrejection',\n      },\n    });\n  });\n}\n\nfunction _getUnhandledRejectionError(error: unknown): unknown {\n  if (isPrimitive(error)) {\n    return error;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const e = error as any;\n\n  // dig the object of the rejection out of known event types\n  try {\n    // PromiseRejectionEvents store the object of the rejection under 'reason'\n    // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n    if ('reason' in e) {\n      return e.reason;\n    }\n\n    // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n    // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n    // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n    // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n    // https://github.com/getsentry/sentry-javascript/issues/2380\n    else if ('detail' in e && 'reason' in e.detail) {\n      return e.detail.reason;\n    }\n  } catch {} // eslint-disable-line no-empty\n\n  return error;\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason: Primitive): Event {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg: any, url: any, line: any, column: any): Event {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = isErrorEvent(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event: Event, url: any, line: any, column: any): Event {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = isString(url) && url.length > 0 ? url : getLocationHref();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type: string): void {\n  DEBUG_BUILD && logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction getOptions(): { stackParser: StackParser; attachStacktrace?: boolean } {\n  const client = getClient<BrowserClient>();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return options;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { ConsoleLevel, HandlerDataConsole } from '@sentry/types';\n\nimport { CONSOLE_LEVELS, originalConsoleMethods } from '../logger';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\n/**\n * Add an instrumentation handler for when a console.xxx method is called.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addConsoleInstrumentationHandler(handler: (data: HandlerDataConsole) => void): void {\n  const type = 'console';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentConsole);\n}\n\nfunction instrumentConsole(): void {\n  if (!('console' in GLOBAL_OBJ)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level: ConsoleLevel): void {\n    if (!(level in GLOBAL_OBJ.console)) {\n      return;\n    }\n\n    fill(GLOBAL_OBJ.console, level, function (originalConsoleMethod: () => any): Function {\n      originalConsoleMethods[level] = originalConsoleMethod;\n\n      return function (...args: any[]): void {\n        const handlerData: HandlerDataConsole = { args, level };\n        triggerHandlers('console', handlerData);\n\n        const log = originalConsoleMethods[level];\n        log && log.apply(GLOBAL_OBJ.console, args);\n      };\n    });\n  });\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataDom } from '@sentry/types';\n\nimport { uuid4 } from '../misc';\nimport { addNonEnumerableProperty, fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype SentryWrappedTarget = HTMLElement & { _sentryId?: string };\n\ntype AddEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | AddEventListenerOptions,\n) => void;\ntype RemoveEventListener = (\n  type: string,\n  listener: EventListenerOrEventListenerObject,\n  options?: boolean | EventListenerOptions,\n) => void;\n\ntype InstrumentedElement = Element & {\n  __sentry_instrumentation_handlers__?: {\n    [key in 'click' | 'keypress']?: {\n      handler?: Function;\n      /** The number of custom listeners attached to this element */\n      refCount: number;\n    };\n  };\n};\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\nconst DEBOUNCE_DURATION = 1000;\n\nlet debounceTimerID: number | undefined;\nlet lastCapturedEventType: string | undefined;\nlet lastCapturedEventTargetId: string | undefined;\n\n/**\n * Add an instrumentation handler for when a click or a keypress happens.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addClickKeypressInstrumentationHandler(handler: (data: HandlerDataDom) => void): void {\n  const type = 'dom';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentDOM);\n}\n\n/** Exported for tests only. */\nexport function instrumentDOM(): void {\n  if (!WINDOW.document) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target: string) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW as any)[target] && (WINDOW as any)[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener: AddEventListener): AddEventListener {\n      return function (\n        this: Element,\n        type: string,\n        listener: EventListenerOrEventListenerObject,\n        options?: boolean | AddEventListenerOptions,\n      ): AddEventListener {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this as InstrumentedElement;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener: RemoveEventListener): RemoveEventListener {\n        return function (\n          this: Element,\n          type: string,\n          listener: EventListenerOrEventListenerObject,\n          options?: boolean | EventListenerOptions,\n        ): () => void {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this as InstrumentedElement;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\n/**\n * Check whether the event is similar to the last captured one. For example, two click events on the same button.\n */\nfunction isSimilarToLastCapturedEvent(event: Event): boolean {\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (event.type !== lastCapturedEventType) {\n    return false;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (!event.target || (event.target as SentryWrappedTarget)._sentryId !== lastCapturedEventTargetId) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return true;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(eventType: string, target: SentryWrappedTarget | null): boolean {\n  // We are only interested in filtering `keypress` events for now.\n  if (eventType !== 'keypress') {\n    return false;\n  }\n\n  if (!target || !target.tagName) {\n    return true;\n  }\n\n  // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n  // e.g.tabbing through elements, hotkeys, etc.\n  if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n */\nfunction makeDOMEventHandler(\n  handler: (data: HandlerDataDom) => void,\n  globalListener: boolean = false,\n): (event: Event) => void {\n  return (event: Event & { _sentryCaptured?: true }): void => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || event['_sentryCaptured']) {\n      return;\n    }\n\n    const target = getEventTarget(event);\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event.type, target)) {\n      return;\n    }\n\n    // Mark event as \"seen\"\n    addNonEnumerableProperty(event, '_sentryCaptured', true);\n\n    if (target && !target._sentryId) {\n      // Add UUID to event target so we can identify if\n      addNonEnumerableProperty(target, '_sentryId', uuid4());\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no last captured event, it means that we can safely capture the new event and store it for future comparisons.\n    // If there is a last captured event, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    if (!isSimilarToLastCapturedEvent(event)) {\n      const handlerData: HandlerDataDom = { event, name, global: globalListener };\n      handler(handlerData);\n      lastCapturedEventType = event.type;\n      lastCapturedEventTargetId = target ? target._sentryId : undefined;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      lastCapturedEventTargetId = undefined;\n      lastCapturedEventType = undefined;\n    }, DEBOUNCE_DURATION);\n  };\n}\n\nfunction getEventTarget(event: Event): SentryWrappedTarget | null {\n  try {\n    return event.target as SentryWrappedTarget | null;\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n    return null;\n  }\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataXhr, SentryWrappedXMLHttpRequest, WrappedFunction } from '@sentry/types';\n\nimport { isString } from '../is';\nimport { fill } from '../object';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nexport const SENTRY_XHR_DATA_KEY = '__sentry_xhr_v3__';\n\n/**\n * Add an instrumentation handler for when an XHR request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addXhrInstrumentationHandler(handler: (data: HandlerDataXhr) => void): void {\n  const type = 'xhr';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentXHR);\n}\n\n/** Exported only for tests. */\nexport function instrumentXHR(): void {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (!(WINDOW as any).XMLHttpRequest) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const startTimestamp = Date.now();\n\n      // open() should always be called with two or more arguments\n      // But to be on the safe side, we actually validate this and bail out if we don't have a method & url\n      const method = isString(args[0]) ? args[0].toUpperCase() : undefined;\n      const url = parseUrl(args[1]);\n\n      if (!method || !url) {\n        return originalOpen.apply(this, args);\n      }\n\n      this[SENTRY_XHR_DATA_KEY] = {\n        method,\n        url,\n        request_headers: {},\n      };\n\n      // if Sentry key appears in URL, don't capture it as a request\n      if (method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler: () => void = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          const handlerData: HandlerDataXhr = {\n            args: [method, url],\n            endTimestamp: Date.now(),\n            startTimestamp,\n            xhr: this,\n          };\n          triggerHandlers('xhr', handlerData);\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original: WrappedFunction): Function {\n          return function (this: SentryWrappedXMLHttpRequest, ...readyStateArgs: any[]): void {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n      // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n      // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n      fill(this, 'setRequestHeader', function (original: WrappedFunction): Function {\n        return function (this: SentryWrappedXMLHttpRequest, ...setRequestHeaderArgs: unknown[]): void {\n          const [header, value] = setRequestHeaderArgs;\n\n          const xhrInfo = this[SENTRY_XHR_DATA_KEY];\n\n          if (xhrInfo && isString(header) && isString(value)) {\n            xhrInfo.request_headers[header.toLowerCase()] = value;\n          }\n\n          return original.apply(this, setRequestHeaderArgs);\n        };\n      });\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend: () => void): () => void {\n    return function (this: XMLHttpRequest & SentryWrappedXMLHttpRequest, ...args: any[]): void {\n      const sentryXhrData = this[SENTRY_XHR_DATA_KEY];\n\n      if (!sentryXhrData) {\n        return originalSend.apply(this, args);\n      }\n\n      if (args[0] !== undefined) {\n        sentryXhrData.body = args[0];\n      }\n\n      const handlerData: HandlerDataXhr = {\n        args: [sentryXhrData.method, sentryXhrData.url],\n        startTimestamp: Date.now(),\n        xhr: this,\n      };\n      triggerHandlers('xhr', handlerData);\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nfunction parseUrl(url: string | unknown): string | undefined {\n  if (isString(url)) {\n    return url;\n  }\n\n  try {\n    // url can be a string or URL\n    // but since URL is not available in IE11, we do not check for it,\n    // but simply assume it is an URL and return `toString()` from it (which returns the full URL)\n    // If that fails, we just return undefined\n    return (url as URL).toString();\n  } catch {} // eslint-disable-line no-empty\n\n  return undefined;\n}\n","import { DEBUG_BUILD } from './debug-build';\nimport { logger } from './logger';\nimport { getGlobalObject } from './worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\ndeclare const EdgeRuntime: string | undefined;\n\nexport { supportsHistory } from './vendor/supportsHistory';\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent(): boolean {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError(): boolean {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-expect-error It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException(): boolean {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch(): boolean {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isNativeFetch(func: Function): boolean {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nexport function supportsNativeFetch(): boolean {\n  if (typeof EdgeRuntime === 'string') {\n    return true;\n  }\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement as unknown) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      DEBUG_BUILD &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver(): boolean {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy(): boolean {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' as ReferrerPolicy,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataFetch } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsNativeFetch } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\ntype FetchResource = string | { toString(): string } | { url: string };\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addFetchInstrumentationHandler(handler: (data: HandlerDataFetch) => void): void {\n  const type = 'fetch';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentFetch);\n}\n\nfunction instrumentFetch(): void {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(GLOBAL_OBJ, 'fetch', function (originalFetch: () => void): () => void {\n    return function (...args: any[]): void {\n      const { method, url } = parseFetchArgs(args);\n\n      const handlerData: HandlerDataFetch = {\n        args,\n        fetchData: {\n          method,\n          url,\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(GLOBAL_OBJ, args).then(\n        (response: Response) => {\n          const finishedHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          };\n\n          triggerHandlers('fetch', finishedHandlerData);\n          return response;\n        },\n        (error: Error) => {\n          const erroredHandlerData: HandlerDataFetch = {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          };\n\n          triggerHandlers('fetch', erroredHandlerData);\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\nfunction hasProp<T extends string>(obj: unknown, prop: T): obj is Record<string, string> {\n  return !!obj && typeof obj === 'object' && !!(obj as Record<string, string>)[prop];\n}\n\nfunction getUrlFromResource(resource: FetchResource): string {\n  if (typeof resource === 'string') {\n    return resource;\n  }\n\n  if (!resource) {\n    return '';\n  }\n\n  if (hasProp(resource, 'url')) {\n    return resource.url;\n  }\n\n  if (resource.toString) {\n    return resource.toString();\n  }\n\n  return '';\n}\n\n/**\n * Parses the fetch arguments to find the used Http method and the url of the request.\n * Exported for tests only.\n */\nexport function parseFetchArgs(fetchArgs: unknown[]): { method: string; url: string } {\n  if (fetchArgs.length === 0) {\n    return { method: 'GET', url: '' };\n  }\n\n  if (fetchArgs.length === 2) {\n    const [url, options] = fetchArgs as [FetchResource, object];\n\n    return {\n      url: getUrlFromResource(url),\n      method: hasProp(options, 'method') ? String(options.method).toUpperCase() : 'GET',\n    };\n  }\n\n  const arg = fetchArgs[0];\n  return {\n    url: getUrlFromResource(arg as FetchResource),\n    method: hasProp(arg, 'method') ? String(arg.method).toUpperCase() : 'GET',\n  };\n}\n","// Based on https://github.com/angular/angular.js/pull/13945/files\n// The MIT License\n\n// Copyright (c) 2010-2016 Google, Inc. http://angularjs.org\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { getGlobalObject } from '../worldwide';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject<Window>();\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory(): boolean {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chromeVar = (WINDOW as any).chrome;\n  const isChromePackagedApp = chromeVar && chromeVar.app && chromeVar.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n","// TODO(v8): Move everything in this file into the browser package. Nothing here is generic and we run risk of leaking browser types into non-browser packages.\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/ban-types */\nimport type { HandlerDataHistory } from '@sentry/types';\n\nimport { fill } from '../object';\nimport { supportsHistory } from '../supports';\nimport { GLOBAL_OBJ } from '../worldwide';\nimport { addHandler, maybeInstrument, triggerHandlers } from './_handlers';\n\nconst WINDOW = GLOBAL_OBJ as unknown as Window;\n\nlet lastHref: string | undefined;\n\n/**\n * Add an instrumentation handler for when a fetch request happens.\n * The handler function is called once when the request starts and once when it ends,\n * which can be identified by checking if it has an `endTimestamp`.\n *\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nexport function addHistoryInstrumentationHandler(handler: (data: HandlerDataHistory) => void): void {\n  const type = 'history';\n  addHandler(type, handler);\n  maybeInstrument(type, instrumentHistory);\n}\n\nfunction instrumentHistory(): void {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function (this: WindowEventHandlers, ...args: any[]): any {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    const handlerData: HandlerDataHistory = { from, to };\n    triggerHandlers('history', handlerData);\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  function historyReplacementFunction(originalHistoryFunction: () => void): () => void {\n    return function (this: History, ...args: any[]): void {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        const handlerData: HandlerDataHistory = { from, to };\n        triggerHandlers('history', handlerData);\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n","/* eslint-disable deprecation/deprecation */\nimport type { Severity, SeverityLevel } from '@sentry/types';\n\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nexport const validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nexport function severityFromString(level: Severity | SeverityLevel | string): Severity {\n  return severityLevelFromString(level) as Severity;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nexport function severityLevelFromString(level: SeverityLevel | string): SeverityLevel {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') as SeverityLevel;\n}\n","type PartialURL = {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n  search?: string;\n  hash?: string;\n};\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url: string): PartialURL {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    search: query,\n    hash: fragment,\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n/**\n * Takes a URL object and returns a sanitized string which is safe to use as span description\n * see: https://develop.sentry.dev/sdk/data-handling/#structuring-data\n */\nexport function getSanitizedUrlString(url: PartialURL): string {\n  const { protocol, host, path } = url;\n\n  const filteredHost =\n    (host &&\n      host\n        // Always filter out authority\n        .replace(/^.*@/, '[filtered]:[filtered]@')\n        // Don't show standard :80 (http) and :443 (https) ports to reduce the noise\n        // TODO: Use new URL global if it exists\n        .replace(/(:80)$/, '')\n        .replace(/(:443)$/, '')) ||\n    '';\n\n  return `${protocol ? `${protocol}://` : ''}${filteredHost}${path}`;\n}\n","/* eslint-disable max-lines */\nimport { addBreadcrumb, convertIntegrationFnToClass, defineIntegration, getClient } from '@sentry/core';\nimport type {\n  Client,\n  Event as SentryEvent,\n  HandlerDataConsole,\n  HandlerDataDom,\n  HandlerDataFetch,\n  HandlerDataHistory,\n  HandlerDataXhr,\n  Integration,\n  IntegrationClass,\n  IntegrationFn,\n} from '@sentry/types';\nimport type {\n  Breadcrumb,\n  FetchBreadcrumbData,\n  FetchBreadcrumbHint,\n  XhrBreadcrumbData,\n  XhrBreadcrumbHint,\n} from '@sentry/types/build/types/breadcrumb';\nimport {\n  SENTRY_XHR_DATA_KEY,\n  addClickKeypressInstrumentationHandler,\n  addConsoleInstrumentationHandler,\n  addFetchInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n  addXhrInstrumentationHandler,\n  getComponentName,\n  getEventDescription,\n  htmlTreeAsString,\n  logger,\n  parseUrl,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\ninterface BreadcrumbsOptions {\n  console: boolean;\n  dom:\n    | boolean\n    | {\n        serializeAttribute?: string | string[];\n        maxStringLength?: number;\n      };\n  fetch: boolean;\n  history: boolean;\n  sentry: boolean;\n  xhr: boolean;\n}\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst INTEGRATION_NAME = 'Breadcrumbs';\n\nconst _breadcrumbsIntegration = ((options: Partial<BreadcrumbsOptions> = {}) => {\n  const _options = {\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n    ...options,\n  };\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (_options.console) {\n        addConsoleInstrumentationHandler(_getConsoleBreadcrumbHandler(client));\n      }\n      if (_options.dom) {\n        addClickKeypressInstrumentationHandler(_getDomBreadcrumbHandler(client, _options.dom));\n      }\n      if (_options.xhr) {\n        addXhrInstrumentationHandler(_getXhrBreadcrumbHandler(client));\n      }\n      if (_options.fetch) {\n        addFetchInstrumentationHandler(_getFetchBreadcrumbHandler(client));\n      }\n      if (_options.history) {\n        addHistoryInstrumentationHandler(_getHistoryBreadcrumbHandler(client));\n      }\n      if (_options.sentry && client.on) {\n        client.on('beforeSendEvent', _getSentryBreadcrumbHandler(client));\n      }\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const breadcrumbsIntegration = defineIntegration(_breadcrumbsIntegration);\n\n/**\n * Default Breadcrumbs instrumentations\n *\n * @deprecated Use `breadcrumbsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Breadcrumbs = convertIntegrationFnToClass(INTEGRATION_NAME, breadcrumbsIntegration) as IntegrationClass<\n  Integration & { setup: (client: Client) => void }\n> & {\n  new (\n    options?: Partial<{\n      console: boolean;\n      dom:\n        | boolean\n        | {\n            serializeAttribute?: string | string[];\n            maxStringLength?: number;\n          };\n      fetch: boolean;\n      history: boolean;\n      sentry: boolean;\n      xhr: boolean;\n    }>,\n  ): Integration;\n};\n\n/**\n * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n */\nfunction _getSentryBreadcrumbHandler(client: Client): (event: SentryEvent) => void {\n  return function addSentryBreadcrumb(event: SentryEvent): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    addBreadcrumb(\n      {\n        category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n        event_id: event.event_id,\n        level: event.level,\n        message: getEventDescription(event),\n      },\n      {\n        event,\n      },\n    );\n  };\n}\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _getDomBreadcrumbHandler(\n  client: Client,\n  dom: BreadcrumbsOptions['dom'],\n): (handlerData: HandlerDataDom) => void {\n  return function _innerDomBreadcrumb(handlerData: HandlerDataDom): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let target;\n    let componentName;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      DEBUG_BUILD &&\n        logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event as Event | Node;\n      const element = _isEvent(event) ? event.target : event;\n\n      target = htmlTreeAsString(element, { keyAttrs, maxStringLength });\n      componentName = getComponentName(element);\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    const breadcrumb: Breadcrumb = {\n      category: `ui.${handlerData.name}`,\n      message: target,\n    };\n\n    if (componentName) {\n      breadcrumb.data = { 'ui.component_name': componentName };\n    }\n\n    addBreadcrumb(breadcrumb, {\n      event: handlerData.event,\n      name: handlerData.name,\n      global: handlerData.global,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _getConsoleBreadcrumbHandler(client: Client): (handlerData: HandlerDataConsole) => void {\n  return function _consoleBreadcrumb(handlerData: HandlerDataConsole): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const breadcrumb = {\n      category: 'console',\n      data: {\n        arguments: handlerData.args,\n        logger: 'console',\n      },\n      level: severityLevelFromString(handlerData.level),\n      message: safeJoin(handlerData.args, ' '),\n    };\n\n    if (handlerData.level === 'assert') {\n      if (handlerData.args[0] === false) {\n        breadcrumb.message = `Assertion failed: ${safeJoin(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n        breadcrumb.data.arguments = handlerData.args.slice(1);\n      } else {\n        // Don't capture a breadcrumb for passed assertions\n        return;\n      }\n    }\n\n    addBreadcrumb(breadcrumb, {\n      input: handlerData.args,\n      level: handlerData.level,\n    });\n  };\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _getXhrBreadcrumbHandler(client: Client): (handlerData: HandlerDataXhr) => void {\n  return function _xhrBreadcrumb(handlerData: HandlerDataXhr): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    const sentryXhrData = handlerData.xhr[SENTRY_XHR_DATA_KEY];\n\n    // We only capture complete, non-sentry requests\n    if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n      return;\n    }\n\n    const { method, url, status_code, body } = sentryXhrData;\n\n    const data: XhrBreadcrumbData = {\n      method,\n      url,\n      status_code,\n    };\n\n    const hint: XhrBreadcrumbHint = {\n      xhr: handlerData.xhr,\n      input: body,\n      startTimestamp,\n      endTimestamp,\n    };\n\n    addBreadcrumb(\n      {\n        category: 'xhr',\n        data,\n        type: 'http',\n      },\n      hint,\n    );\n  };\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _getFetchBreadcrumbHandler(client: Client): (handlerData: HandlerDataFetch) => void {\n  return function _fetchBreadcrumb(handlerData: HandlerDataFetch): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    const { startTimestamp, endTimestamp } = handlerData;\n\n    // We only capture complete fetch requests\n    if (!endTimestamp) {\n      return;\n    }\n\n    if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n      // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n      return;\n    }\n\n    if (handlerData.error) {\n      const data: FetchBreadcrumbData = handlerData.fetchData;\n      const hint: FetchBreadcrumbHint = {\n        data: handlerData.error,\n        input: handlerData.args,\n        startTimestamp,\n        endTimestamp,\n      };\n\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          level: 'error',\n          type: 'http',\n        },\n        hint,\n      );\n    } else {\n      const response = handlerData.response as Response | undefined;\n      const data: FetchBreadcrumbData = {\n        ...handlerData.fetchData,\n        status_code: response && response.status,\n      };\n      const hint: FetchBreadcrumbHint = {\n        input: handlerData.args,\n        response,\n        startTimestamp,\n        endTimestamp,\n      };\n      addBreadcrumb(\n        {\n          category: 'fetch',\n          data,\n          type: 'http',\n        },\n        hint,\n      );\n    }\n  };\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _getHistoryBreadcrumbHandler(client: Client): (handlerData: HandlerDataHistory) => void {\n  return function _historyBreadcrumb(handlerData: HandlerDataHistory): void {\n    if (getClient() !== client) {\n      return;\n    }\n\n    let from: string | undefined = handlerData.from;\n    let to: string | undefined = handlerData.to;\n    const parsedLoc = parseUrl(WINDOW.location.href);\n    let parsedFrom = from ? parseUrl(from) : undefined;\n    const parsedTo = parseUrl(to);\n\n    // Initial pushState doesn't provide `from` information\n    if (!parsedFrom || !parsedFrom.path) {\n      parsedFrom = parsedLoc;\n    }\n\n    // Use only the path component of the URL if the URL matches the current\n    // document (almost all the time when using pushState)\n    if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n      to = parsedTo.relative;\n    }\n    if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n      from = parsedFrom.relative;\n    }\n\n    addBreadcrumb({\n      category: 'navigation',\n      data: {\n        from,\n        to,\n      },\n    });\n  };\n}\n\nfunction _isEvent(event: unknown): event is Event {\n  return !!event && !!(event as Record<string, unknown>).target;\n}\n","import type { Event, EventHint, Exception, ExtendedError, StackParser } from '@sentry/types';\n\nimport { isInstanceOf } from './is';\nimport { truncate } from './string';\n\n/**\n * Creates exceptions inside `event.exception.values` for errors that are nested on properties based on the `key` parameter.\n */\nexport function applyAggregateErrorsToEvent(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  maxValueLimit: number = 250,\n  key: string,\n  limit: number,\n  event: Event,\n  hint?: EventHint,\n): void {\n  if (!event.exception || !event.exception.values || !hint || !isInstanceOf(hint.originalException, Error)) {\n    return;\n  }\n\n  // Generally speaking the last item in `event.exception.values` is the exception originating from the original Error\n  const originalException: Exception | undefined =\n    event.exception.values.length > 0 ? event.exception.values[event.exception.values.length - 1] : undefined;\n\n  // We only create exception grouping if there is an exception in the event.\n  if (originalException) {\n    event.exception.values = truncateAggregateExceptions(\n      aggregateExceptionsFromError(\n        exceptionFromErrorImplementation,\n        parser,\n        limit,\n        hint.originalException as ExtendedError,\n        key,\n        event.exception.values,\n        originalException,\n        0,\n      ),\n      maxValueLimit,\n    );\n  }\n}\n\nfunction aggregateExceptionsFromError(\n  exceptionFromErrorImplementation: (stackParser: StackParser, ex: Error) => Exception,\n  parser: StackParser,\n  limit: number,\n  error: ExtendedError,\n  key: string,\n  prevExceptions: Exception[],\n  exception: Exception,\n  exceptionId: number,\n): Exception[] {\n  if (prevExceptions.length >= limit + 1) {\n    return prevExceptions;\n  }\n\n  let newExceptions = [...prevExceptions];\n\n  // Recursively call this function in order to walk down a chain of errors\n  if (isInstanceOf(error[key], Error)) {\n    applyExceptionGroupFieldsForParentException(exception, exceptionId);\n    const newException = exceptionFromErrorImplementation(parser, error[key]);\n    const newExceptionId = newExceptions.length;\n    applyExceptionGroupFieldsForChildException(newException, key, newExceptionId, exceptionId);\n    newExceptions = aggregateExceptionsFromError(\n      exceptionFromErrorImplementation,\n      parser,\n      limit,\n      error[key],\n      key,\n      [newException, ...newExceptions],\n      newException,\n      newExceptionId,\n    );\n  }\n\n  // This will create exception grouping for AggregateErrors\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AggregateError\n  if (Array.isArray(error.errors)) {\n    error.errors.forEach((childError, i) => {\n      if (isInstanceOf(childError, Error)) {\n        applyExceptionGroupFieldsForParentException(exception, exceptionId);\n        const newException = exceptionFromErrorImplementation(parser, childError);\n        const newExceptionId = newExceptions.length;\n        applyExceptionGroupFieldsForChildException(newException, `errors[${i}]`, newExceptionId, exceptionId);\n        newExceptions = aggregateExceptionsFromError(\n          exceptionFromErrorImplementation,\n          parser,\n          limit,\n          childError,\n          key,\n          [newException, ...newExceptions],\n          newException,\n          newExceptionId,\n        );\n      }\n    });\n  }\n\n  return newExceptions;\n}\n\nfunction applyExceptionGroupFieldsForParentException(exception: Exception, exceptionId: number): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    ...(exception.type === 'AggregateError' && { is_exception_group: true }),\n    exception_id: exceptionId,\n  };\n}\n\nfunction applyExceptionGroupFieldsForChildException(\n  exception: Exception,\n  source: string,\n  exceptionId: number,\n  parentId: number | undefined,\n): void {\n  // Don't know if this default makes sense. The protocol requires us to set these values so we pick *some* default.\n  exception.mechanism = exception.mechanism || { type: 'generic', handled: true };\n\n  exception.mechanism = {\n    ...exception.mechanism,\n    type: 'chained',\n    source,\n    exception_id: exceptionId,\n    parent_id: parentId,\n  };\n}\n\n/**\n * Truncate the message (exception.value) of all exceptions in the event.\n * Because this event processor is ran after `applyClientOptions`,\n * we need to truncate the message of the added exceptions here.\n */\nfunction truncateAggregateExceptions(exceptions: Exception[], maxValueLength: number): Exception[] {\n  return exceptions.map(exception => {\n    if (exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n    return exception;\n  });\n}\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Client, Event, EventHint, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport { applyAggregateErrorsToEvent } from '@sentry/utils';\nimport { exceptionFromError } from '../eventbuilder';\n\ninterface LinkedErrorsOptions {\n  key?: string;\n  limit?: number;\n}\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\nconst INTEGRATION_NAME = 'LinkedErrors';\n\nconst _linkedErrorsIntegration = ((options: LinkedErrorsOptions = {}) => {\n  const limit = options.limit || DEFAULT_LIMIT;\n  const key = options.key || DEFAULT_KEY;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event, hint, client) {\n      const options = client.getOptions();\n\n      applyAggregateErrorsToEvent(\n        // This differs from the LinkedErrors integration in core by using a different exceptionFromError function\n        exceptionFromError,\n        options.stackParser,\n        options.maxValueLength,\n        key,\n        limit,\n        event,\n        hint,\n      );\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const linkedErrorsIntegration = defineIntegration(_linkedErrorsIntegration);\n\n/**\n * Aggregrate linked errors in an event.\n * @deprecated Use `linkedErrorsIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const LinkedErrors = convertIntegrationFnToClass(INTEGRATION_NAME, linkedErrorsIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event, hint: EventHint, client: Client) => void }\n> & { new (options?: { key?: string; limit?: number }): Integration };\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\nconst INTEGRATION_NAME = 'HttpContext';\n\nconst _httpContextIntegration = (() => {\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    preprocessEvent(event) {\n      // if none of the information we want exists, don't bother\n      if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n        return;\n      }\n\n      // grab as much info as exists and add it to the event\n      const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n      const { referrer } = WINDOW.document || {};\n      const { userAgent } = WINDOW.navigator || {};\n\n      const headers = {\n        ...(event.request && event.request.headers),\n        ...(referrer && { Referer: referrer }),\n        ...(userAgent && { 'User-Agent': userAgent }),\n      };\n      const request = { ...event.request, ...(url && { url }), headers };\n\n      event.request = request;\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const httpContextIntegration = defineIntegration(_httpContextIntegration);\n\n/**\n * HttpContext integration collects information about HTTP request headers.\n * @deprecated Use `httpContextIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const HttpContext = convertIntegrationFnToClass(INTEGRATION_NAME, httpContextIntegration) as IntegrationClass<\n  Integration & { preprocessEvent: (event: Event) => void }\n>;\n","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _getPrototypeOf(t) {\n  return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {\n    return t.__proto__ || Object.getPrototypeOf(t);\n  }, _getPrototypeOf(t);\n}\nexport { _getPrototypeOf as default };","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nexport { _isNativeReflectConstruct as default };","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nfunction _wrapNativeSuper(t) {\n  var r = \"function\" == typeof Map ? new Map() : void 0;\n  return _wrapNativeSuper = function _wrapNativeSuper(t) {\n    if (null === t || !isNativeFunction(t)) return t;\n    if (\"function\" != typeof t) throw new TypeError(\"Super expression must either be null or a function\");\n    if (void 0 !== r) {\n      if (r.has(t)) return r.get(t);\n      r.set(t, Wrapper);\n    }\n    function Wrapper() {\n      return construct(t, arguments, getPrototypeOf(this).constructor);\n    }\n    return Wrapper.prototype = Object.create(t.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: !1,\n        writable: !0,\n        configurable: !0\n      }\n    }), setPrototypeOf(Wrapper, t);\n  }, _wrapNativeSuper(t);\n}\nexport { _wrapNativeSuper as default };","function _isNativeFunction(t) {\n  try {\n    return -1 !== Function.toString.call(t).indexOf(\"[native code]\");\n  } catch (n) {\n    return \"function\" == typeof t;\n  }\n}\nexport { _isNativeFunction as default };","import isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _construct(t, e, r) {\n  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && setPrototypeOf(p, r.prototype), p;\n}\nexport { _construct as default };","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport type { GenericFunction } from './types';\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nexport function _optionalChain(ops: unknown[]): unknown {\n  let lastAccessLHS: unknown = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] as string;\n    const fn = ops[i + 1] as (intermediateValue: unknown) => unknown;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args: unknown[]) => (value as GenericFunction).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n","import type { Client, DsnComponents, Hub } from '@sentry/types';\n\n/**\n * Checks whether given url points to Sentry server\n * @param url url to verify\n *\n * TODO(v8): Remove Hub fallback type\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function isSentryRequestUrl(url: string, hubOrClient: Hub | Client | undefined): boolean {\n  const client =\n    hubOrClient && isHub(hubOrClient)\n      ? // eslint-disable-next-line deprecation/deprecation\n        hubOrClient.getClient()\n      : hubOrClient;\n  const dsn = client && client.getDsn();\n  const tunnel = client && client.getOptions().tunnel;\n\n  return checkDsn(url, dsn) || checkTunnel(url, tunnel);\n}\n\nfunction checkTunnel(url: string, tunnel: string | undefined): boolean {\n  if (!tunnel) {\n    return false;\n  }\n\n  return removeTrailingSlash(url) === removeTrailingSlash(tunnel);\n}\n\nfunction checkDsn(url: string, dsn: DsnComponents | undefined): boolean {\n  return dsn ? url.includes(dsn.host) : false;\n}\n\nfunction removeTrailingSlash(str: string): string {\n  return str[str.length - 1] === '/' ? str.slice(0, -1) : str;\n}\n\n// eslint-disable-next-line deprecation/deprecation\nfunction isHub(hubOrClient: Hub | Client | undefined): hubOrClient is Hub {\n  // eslint-disable-next-line deprecation/deprecation\n  return (hubOrClient as Hub).getClient !== undefined;\n}\n","import type { DsnComponents, DsnLike, DsnProtocol } from '@sentry/types';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { consoleSandbox, logger } from './logger';\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol?: string): protocol is DsnProtocol {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nexport function dsnToString(dsn: DsnComponents, withPassword: boolean = false): string {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents or undefined if @param str is not a valid DSN string\n */\nexport function dsnFromString(str: string): DsnComponents | undefined {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    // This should be logged to the console\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.error(`Invalid Sentry Dsn: ${str}`);\n    });\n    return undefined;\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() as string;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol as DsnProtocol, publicKey });\n}\n\nfunction dsnFromComponents(components: DsnComponents): DsnComponents {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn: DsnComponents): boolean {\n  if (!DEBUG_BUILD) {\n    return true;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents: ReadonlyArray<keyof DsnComponents> = ['protocol', 'publicKey', 'host', 'projectId'];\n  const hasMissingRequiredComponent = requiredComponents.find(component => {\n    if (!dsn[component]) {\n      logger.error(`Invalid Sentry Dsn: ${component} missing`);\n      return true;\n    }\n    return false;\n  });\n\n  if (hasMissingRequiredComponent) {\n    return false;\n  }\n\n  if (!projectId.match(/^\\d+$/)) {\n    logger.error(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n    return false;\n  }\n\n  if (!isValidProtocol(protocol)) {\n    logger.error(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n    return false;\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    logger.error(`Invalid Sentry Dsn: Invalid port ${port}`);\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Creates a valid Sentry Dsn object, identifying a Sentry instance and project.\n * @returns a valid DsnComponents object or `undefined` if @param from is an invalid DSN source\n */\nexport function makeDsn(from: DsnLike): DsnComponents | undefined {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  if (!components || !validateDsn(components)) {\n    return undefined;\n  }\n  return components;\n}\n","import type {\n  Attachment,\n  AttachmentItem,\n  BaseEnvelopeHeaders,\n  BaseEnvelopeItemHeaders,\n  DataCategory,\n  DsnComponents,\n  Envelope,\n  EnvelopeItemType,\n  Event,\n  EventEnvelopeHeaders,\n  SdkInfo,\n  SdkMetadata,\n  TextEncoderInternal,\n} from '@sentry/types';\n\nimport { dsnToString } from './dsn';\nimport { normalize } from './normalize';\nimport { dropUndefinedKeys } from './object';\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function createEnvelope<E extends Envelope>(headers: E[0], items: E[1] = []): E {\n  return [headers, items] as E;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nexport function addItemToEnvelope<E extends Envelope>(envelope: E, newItem: E[1][number]): E {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] as unknown as E;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nexport function forEachEnvelopeItem<E extends Envelope>(\n  envelope: Envelope,\n  callback: (envelopeItem: E[1][number], envelopeItemType: E[1][number][0]['type']) => boolean | void,\n): boolean {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nexport function envelopeContainsItemType(envelope: Envelope, types: EnvelopeItemType[]): boolean {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input: string, textEncoder?: TextEncoderInternal): Uint8Array {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nexport function serializeEnvelope(envelope: Envelope, textEncoder?: TextEncoderInternal): string | Uint8Array {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts: string | Uint8Array[] = JSON.stringify(envHeaders);\n\n  function append(next: string | Uint8Array): void {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload: string;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify(normalize(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers: Uint8Array[]): Uint8Array {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\nexport interface TextDecoderInternal {\n  decode(input?: Uint8Array): string;\n}\n\n/**\n * Parses an envelope\n */\nexport function parseEnvelope(\n  env: string | Uint8Array,\n  textEncoder: TextEncoderInternal,\n  textDecoder: TextDecoderInternal,\n): Envelope {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length: number): Uint8Array {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson<T>(): T {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) as T;\n  }\n\n  const envelopeHeader = readJson<BaseEnvelopeHeaders>();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items: [any, any][] = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson<BaseEnvelopeItemHeaders>();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nexport function createAttachmentEnvelopeItem(\n  attachment: Attachment,\n  textEncoder?: TextEncoderInternal,\n): AttachmentItem {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    dropUndefinedKeys({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP: Record<EnvelopeItemType, DataCategory> = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n  check_in: 'monitor',\n  feedback: 'feedback',\n  span: 'span',\n  statsd: 'metric_bucket',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nexport function envelopeItemTypeToDataCategory(type: EnvelopeItemType): DataCategory {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from the metadata or an events */\nexport function getSdkMetadataForEnvelopeHeader(metadataOrEvent?: SdkMetadata | Event): SdkInfo | undefined {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nexport function createEventEnvelopeHeaders(\n  event: Event,\n  sdkInfo: SdkInfo | undefined,\n  tunnel: string | undefined,\n  dsn?: DsnComponents,\n): EventEnvelopeHeaders {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n  return {\n    event_id: event.event_id as string,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && dsn && { dsn: dsnToString(dsn) }),\n    ...(dynamicSamplingContext && {\n      trace: dropUndefinedKeys({ ...dynamicSamplingContext }),\n    }),\n  };\n}\n","import type { ConsoleLevel } from '@sentry/types';\n\n/** An error emitted by Sentry SDKs and related utilities. */\nexport class SentryError extends Error {\n  /** Display name of this error instance. */\n  public name: string;\n\n  public logLevel: ConsoleLevel;\n\n  public constructor(public message: string, logLevel: ConsoleLevel = 'warn') {\n    super(message);\n\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n","import type { ClientOptions, DsnComponents, DsnLike, SdkInfo } from '@sentry/types';\nimport { dsnToString, makeDsn, urlEncode } from '@sentry/utils';\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn: DsnComponents): string {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn: DsnComponents): string {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn: DsnComponents, sdkInfo: SdkInfo | undefined): string {\n  return urlEncode({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nexport function getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn: DsnComponents,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions: string | ClientOptions = {} as ClientOptions,\n): string {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nexport function getReportDialogEndpoint(\n  dsnLike: DsnLike,\n  dialogOptions: {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n    user?: { name?: string; email?: string };\n  },\n): string {\n  const dsn = makeDsn(dsnLike);\n  if (!dsn) {\n    return '';\n  }\n\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${dsnToString(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'onClose') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] as string)}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n","import type { DsnComponents, MetricBucketItem, SdkMetadata, StatsdEnvelope, StatsdItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\nimport { serializeMetricBuckets } from './utils';\n\n/**\n * Create envelope from a metric aggregate.\n */\nexport function createMetricEnvelope(\n  metricBucketItems: Array<MetricBucketItem>,\n  dsn?: DsnComponents,\n  metadata?: SdkMetadata,\n  tunnel?: string,\n): StatsdEnvelope {\n  const headers: StatsdEnvelope[0] = {\n    sent_at: new Date().toISOString(),\n  };\n\n  if (metadata && metadata.sdk) {\n    headers.sdk = {\n      name: metadata.sdk.name,\n      version: metadata.sdk.version,\n    };\n  }\n\n  if (!!tunnel && dsn) {\n    headers.dsn = dsnToString(dsn);\n  }\n\n  const item = createMetricEnvelopeItem(metricBucketItems);\n  return createEnvelope<StatsdEnvelope>(headers, [item]);\n}\n\nfunction createMetricEnvelopeItem(metricBucketItems: MetricBucketItem[]): StatsdItem {\n  const payload = serializeMetricBuckets(metricBucketItems);\n  const metricHeaders: StatsdItem[0] = {\n    type: 'statsd',\n    length: payload.length,\n  };\n  return [metricHeaders, payload];\n}\n","import type { MeasurementUnit, MetricBucketItem, Primitive } from '@sentry/types';\nimport { dropUndefinedKeys } from '@sentry/utils';\nimport type { MetricType } from './types';\n\n/**\n * Generate bucket key from metric properties.\n */\nexport function getBucketKey(\n  metricType: MetricType,\n  name: string,\n  unit: MeasurementUnit,\n  tags: Record<string, string>,\n): string {\n  const stringifiedTags = Object.entries(dropUndefinedKeys(tags)).sort((a, b) => a[0].localeCompare(b[0]));\n  return `${metricType}${name}${unit}${stringifiedTags}`;\n}\n\n/* eslint-disable no-bitwise */\n/**\n * Simple hash function for strings.\n */\nexport function simpleHash(s: string): number {\n  let rv = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n    rv = (rv << 5) - rv + c;\n    rv &= rv;\n  }\n  return rv >>> 0;\n}\n/* eslint-enable no-bitwise */\n\n/**\n * Serialize metrics buckets into a string based on statsd format.\n *\n * Example of format:\n * metric.name@second:1:1.2|d|#a:value,b:anothervalue|T12345677\n * Segments:\n * name: metric.name\n * unit: second\n * value: [1, 1.2]\n * type of metric: d (distribution)\n * tags: { a: value, b: anothervalue }\n * timestamp: 12345677\n */\nexport function serializeMetricBuckets(metricBucketItems: MetricBucketItem[]): string {\n  let out = '';\n  for (const item of metricBucketItems) {\n    const tagEntries = Object.entries(item.tags);\n    const maybeTags = tagEntries.length > 0 ? `|#${tagEntries.map(([key, value]) => `${key}:${value}`).join(',')}` : '';\n    out += `${item.name}@${item.unit}:${item.metric}|${item.metricType}${maybeTags}|T${item.timestamp}\\n`;\n  }\n  return out;\n}\n\n/** Sanitizes units */\nexport function sanitizeUnit(unit: string): string {\n  return unit.replace(/[^\\w]+/gi, '_');\n}\n\n/** Sanitizes metric keys */\nexport function sanitizeMetricKey(key: string): string {\n  return key.replace(/[^\\w\\-.]+/gi, '_');\n}\n\nfunction sanitizeTagKey(key: string): string {\n  return key.replace(/[^\\w\\-./]+/gi, '');\n}\n\nconst tagValueReplacements: [string, string][] = [\n  ['\\n', '\\\\n'],\n  ['\\r', '\\\\r'],\n  ['\\t', '\\\\t'],\n  ['\\\\', '\\\\\\\\'],\n  ['|', '\\\\u{7c}'],\n  [',', '\\\\u{2c}'],\n];\n\nfunction getCharOrReplacement(input: string): string {\n  for (const [search, replacement] of tagValueReplacements) {\n    if (input === search) {\n      return replacement;\n    }\n  }\n\n  return input;\n}\n\nfunction sanitizeTagValue(value: string): string {\n  return [...value].reduce((acc, char) => acc + getCharOrReplacement(char), '');\n}\n\n/**\n * Sanitizes tags.\n */\nexport function sanitizeTags(unsanitizedTags: Record<string, Primitive>): Record<string, string> {\n  const tags: Record<string, string> = {};\n  for (const key in unsanitizedTags) {\n    if (Object.prototype.hasOwnProperty.call(unsanitizedTags, key)) {\n      const sanitizedKey = sanitizeTagKey(key);\n      tags[sanitizedKey] = sanitizeTagValue(String(unsanitizedTags[key]));\n    }\n  }\n  return tags;\n}\n","/* eslint-disable max-lines */\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  ClientOptions,\n  DataCategory,\n  DsnComponents,\n  DynamicSamplingContext,\n  Envelope,\n  ErrorEvent,\n  Event,\n  EventDropReason,\n  EventHint,\n  EventProcessor,\n  FeedbackEvent,\n  Integration,\n  IntegrationClass,\n  MetricBucketItem,\n  MetricsAggregator,\n  Outcome,\n  ParameterizedString,\n  SdkMetadata,\n  Session,\n  SessionAggregates,\n  Severity,\n  SeverityLevel,\n  StartSpanOptions,\n  Transaction,\n  TransactionEvent,\n  Transport,\n  TransportMakeRequestResponse,\n} from '@sentry/types';\nimport {\n  SentryError,\n  SyncPromise,\n  addItemToEnvelope,\n  checkOrSetAlreadyCaught,\n  createAttachmentEnvelopeItem,\n  isParameterizedString,\n  isPlainObject,\n  isPrimitive,\n  isThenable,\n  logger,\n  makeDsn,\n  rejectedSyncPromise,\n  resolvedSyncPromise,\n} from '@sentry/utils';\n\nimport { getEnvelopeEndpointWithUrlEncodedAuth } from './api';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventEnvelope, createSessionEnvelope } from './envelope';\nimport { getClient } from './exports';\nimport { getIsolationScope } from './hub';\nimport type { IntegrationIndex } from './integration';\nimport { afterSetupIntegrations } from './integration';\nimport { setupIntegration, setupIntegrations } from './integration';\nimport { createMetricEnvelope } from './metrics/envelope';\nimport type { Scope } from './scope';\nimport { updateSession } from './session';\nimport { getDynamicSamplingContextFromClient } from './tracing/dynamicSamplingContext';\nimport { prepareEvent } from './utils/prepareEvent';\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nexport abstract class BaseClient<O extends ClientOptions> implements Client<O> {\n  /**\n   * A reference to a metrics aggregator\n   *\n   * @experimental Note this is alpha API. It may experience breaking changes in the future.\n   */\n  public metricsAggregator?: MetricsAggregator;\n\n  /** Options passed to the SDK. */\n  protected readonly _options: O;\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n  protected readonly _dsn?: DsnComponents;\n\n  protected readonly _transport?: Transport;\n\n  /** Array of set up integrations. */\n  protected _integrations: IntegrationIndex;\n\n  /** Indicates whether this client's integrations have been set up. */\n  protected _integrationsInitialized: boolean;\n\n  /** Number of calls being processed */\n  protected _numProcessing: number;\n\n  protected _eventProcessors: EventProcessor[];\n\n  /** Holds flushable  */\n  private _outcomes: { [key: string]: number };\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  private _hooks: Record<string, Function[]>;\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n  protected constructor(options: O) {\n    this._options = options;\n    this._integrations = {};\n    this._integrationsInitialized = false;\n    this._numProcessing = 0;\n    this._outcomes = {};\n    this._hooks = {};\n    this._eventProcessors = [];\n\n    if (options.dsn) {\n      this._dsn = makeDsn(options.dsn);\n    } else {\n      DEBUG_BUILD && logger.warn('No DSN provided, client will not send events.');\n    }\n\n    if (this._dsn) {\n      const url = getEnvelopeEndpointWithUrlEncodedAuth(this._dsn, options);\n      this._transport = options.transport({\n        tunnel: this._options.tunnel,\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (checkOrSetAlreadyCaught(exception)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level?: Severity | SeverityLevel,\n    hint?: EventHint,\n    scope?: Scope,\n  ): string | undefined {\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const eventMessage = isParameterizedString(message) ? message : String(message);\n\n    const promisedEvent = isPrimitive(message)\n      ? this.eventFromMessage(eventMessage, level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint, scope?: Scope): string | undefined {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && checkOrSetAlreadyCaught(hint.originalException)) {\n      DEBUG_BUILD && logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId: string | undefined = hint && hint.event_id;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanScope: Scope | undefined = sdkProcessingMetadata.capturedSpanScope;\n\n    this._process(\n      this._captureEvent(event, hint, capturedSpanScope || scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(session: Session): void {\n    if (!(typeof session.release === 'string')) {\n      DEBUG_BUILD && logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      updateSession(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getDsn(): DsnComponents | undefined {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getOptions(): O {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n  public getSdkMetadata(): SdkMetadata | undefined {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransport(): Transport | undefined {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public flush(timeout?: number): PromiseLike<boolean> {\n    const transport = this._transport;\n    if (transport) {\n      if (this.metricsAggregator) {\n        this.metricsAggregator.flush();\n      }\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return resolvedSyncPromise(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public close(timeout?: number): PromiseLike<boolean> {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      if (this.metricsAggregator) {\n        this.metricsAggregator.close();\n      }\n      return result;\n    });\n  }\n\n  /** Get all installed event processors. */\n  public getEventProcessors(): EventProcessor[] {\n    return this._eventProcessors;\n  }\n\n  /** @inheritDoc */\n  public addEventProcessor(eventProcessor: EventProcessor): void {\n    this._eventProcessors.push(eventProcessor);\n  }\n\n  /**\n   * This is an internal function to setup all integrations that should run on the client.\n   * @deprecated Use `client.init()` instead.\n   */\n  public setupIntegrations(forceInitialize?: boolean): void {\n    if ((forceInitialize && !this._integrationsInitialized) || (this._isEnabled() && !this._integrationsInitialized)) {\n      this._setupIntegrations();\n    }\n  }\n\n  /** @inheritdoc */\n  public init(): void {\n    if (this._isEnabled()) {\n      this._setupIntegrations();\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegrationById(integrationId: string): Integration | undefined {\n    return this.getIntegrationByName(integrationId);\n  }\n\n  /**\n   * Gets an installed integration by its name.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `name` was installed.\n   */\n  public getIntegrationByName<T extends Integration = Integration>(integrationName: string): T | undefined {\n    return this._integrations[integrationName] as T | undefined;\n  }\n\n  /**\n   * Returns the client's instance of the given integration class, it any.\n   * @deprecated Use `getIntegrationByName()` instead.\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    try {\n      return (this._integrations[integration.id] as T) || null;\n    } catch (_oO) {\n      DEBUG_BUILD && logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addIntegration(integration: Integration): void {\n    const isAlreadyInstalled = this._integrations[integration.name];\n\n    // This hook takes care of only installing if not already installed\n    setupIntegration(this, integration, this._integrations);\n    // Here we need to check manually to make sure to not run this multiple times\n    if (!isAlreadyInstalled) {\n      afterSetupIntegrations(this, [integration]);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event, hint: EventHint = {}): void {\n    this.emit('beforeSendEvent', event, hint);\n\n    let env = createEventEnvelope(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n    for (const attachment of hint.attachments || []) {\n      env = addItemToEnvelope(\n        env,\n        createAttachmentEnvelopeItem(\n          attachment,\n          this._options.transportOptions && this._options.transportOptions.textEncoder,\n        ),\n      );\n    }\n\n    const promise = this._sendEnvelope(env);\n    if (promise) {\n      promise.then(sendResponse => this.emit('afterSendEvent', event, sendResponse), null);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public sendSession(session: Session | SessionAggregates): void {\n    const env = createSessionEnvelope(session, this._dsn, this._options._metadata, this._options.tunnel);\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(env);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public recordDroppedEvent(reason: EventDropReason, category: DataCategory, eventOrCount?: Event | number): void {\n    if (this._options.sendClientReports) {\n      // TODO v9: We do not need the `event` passed as third argument anymore, and can possibly remove this overload\n      // If event is passed as third argument, we assume this is a count of 1\n      const count = typeof eventOrCount === 'number' ? eventOrCount : 1;\n\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      DEBUG_BUILD && logger.log(`Recording outcome: \"${key}\"${count > 1 ? ` (${count} times)` : ''}`);\n      this._outcomes[key] = (this._outcomes[key] || 0) + count;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureAggregateMetrics(metricBucketItems: Array<MetricBucketItem>): void {\n    DEBUG_BUILD && logger.log(`Flushing aggregated metrics, number of metrics: ${metricBucketItems.length}`);\n    const metricsEnvelope = createMetricEnvelope(\n      metricBucketItems,\n      this._dsn,\n      this._options._metadata,\n      this._options.tunnel,\n    );\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(metricsEnvelope);\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n  /* eslint-disable @typescript-eslint/unified-signatures */\n\n  /** @inheritdoc */\n  public on(hook: 'startTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'finishTransaction', callback: (transaction: Transaction) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeEnvelope', callback: (envelope: Envelope) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeSendEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'preprocessEvent', callback: (event: Event, hint?: EventHint) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'afterSendEvent',\n    callback: (event: Event, sendResponse: TransportMakeRequestResponse | void) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'beforeAddBreadcrumb', callback: (breadcrumb: Breadcrumb, hint?: BreadcrumbHint) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'createDsc', callback: (dsc: DynamicSamplingContext) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'otelSpanEnd', callback: (otelSpan: unknown, mutableOptions: { drop: boolean }) => void): void;\n\n  /** @inheritdoc */\n  public on(\n    hook: 'beforeSendFeedback',\n    callback: (feedback: FeedbackEvent, options?: { includeReplay: boolean }) => void,\n  ): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startPageLoadSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: 'startNavigationSpan', callback: (options: StartSpanOptions) => void): void;\n\n  /** @inheritdoc */\n  public on(hook: string, callback: unknown): void {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-expect-error We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n  public emit(hook: 'startTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'finishTransaction', transaction: Transaction): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeEnvelope', envelope: Envelope): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'preprocessEvent', event: Event, hint?: EventHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'afterSendEvent', event: Event, sendResponse: TransportMakeRequestResponse | void): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeAddBreadcrumb', breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'createDsc', dsc: DynamicSamplingContext): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'otelSpanEnd', otelSpan: unknown, mutableOptions: { drop: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'beforeSendFeedback', feedback: FeedbackEvent, options?: { includeReplay: boolean }): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startPageLoadSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: 'startNavigationSpan', options: StartSpanOptions): void;\n\n  /** @inheritdoc */\n  public emit(hook: string, ...rest: unknown[]): void {\n    if (this._hooks[hook]) {\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /* eslint-enable @typescript-eslint/unified-signatures */\n\n  /** Setup integrations for this client. */\n  protected _setupIntegrations(): void {\n    const { integrations } = this._options;\n    this._integrations = setupIntegrations(this, integrations);\n    afterSetupIntegrations(this, integrations);\n\n    // TODO v8: We don't need this flag anymore\n    this._integrationsInitialized = true;\n  }\n\n  /** Updates existing session based on the provided event */\n  protected _updateSessionFromEvent(session: Session, event: Event): void {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      updateSession(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n  protected _isClientDoneProcessing(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise(resolve => {\n      let ticked: number = 0;\n      const tick: number = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a transport is present. */\n  protected _isEnabled(): boolean {\n    return this.getOptions().enabled !== false && this._transport !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n  protected _prepareEvent(\n    event: Event,\n    hint: EventHint,\n    scope?: Scope,\n    isolationScope = getIsolationScope(),\n  ): PromiseLike<Event | null> {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n\n    this.emit('preprocessEvent', event, hint);\n\n    return prepareEvent(options, event, hint, scope, this, isolationScope).then(evt => {\n      if (evt === null) {\n        return evt;\n      }\n\n      const propagationContext = {\n        ...isolationScope.getPropagationContext(),\n        ...(scope ? scope.getPropagationContext() : undefined),\n      };\n\n      const trace = evt.contexts && evt.contexts.trace;\n      if (!trace && propagationContext) {\n        const { traceId: trace_id, spanId, parentSpanId, dsc } = propagationContext;\n        evt.contexts = {\n          trace: {\n            trace_id,\n            span_id: spanId,\n            parent_span_id: parentSpanId,\n          },\n          ...evt.contexts,\n        };\n\n        const dynamicSamplingContext = dsc ? dsc : getDynamicSamplingContextFromClient(trace_id, this, scope);\n\n        evt.sdkProcessingMetadata = {\n          dynamicSamplingContext,\n          ...evt.sdkProcessingMetadata,\n        };\n      }\n      return evt;\n    });\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n  protected _captureEvent(event: Event, hint: EventHint = {}, scope?: Scope): PromiseLike<string | undefined> {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if (DEBUG_BUILD) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason as SentryError;\n          if (sentryError.logLevel === 'log') {\n            logger.log(sentryError.message);\n          } else {\n            logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n  protected _processEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event> {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return rejectedSyncPromise(\n        new SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory: DataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    const sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n    const capturedSpanIsolationScope: Scope | undefined = sdkProcessingMetadata.capturedSpanIsolationScope;\n\n    return this._prepareEvent(event, hint, scope, capturedSpanIsolationScope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data as { __sentry__: boolean }).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          if (isTransaction) {\n            const spans = event.spans || [];\n            // the transaction itself counts as one span, plus all the child spans that are added\n            const spanCount = 1 + spans.length;\n            this.recordDroppedEvent('before_send', 'span', spanCount);\n          }\n          throw new SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        if (isTransaction) {\n          const spanCountBefore =\n            (processedEvent.sdkProcessingMetadata && processedEvent.sdkProcessingMetadata.spanCountBeforeProcessing) ||\n            0;\n          const spanCountAfter = processedEvent.spans ? processedEvent.spans.length : 0;\n\n          const droppedSpanCount = spanCountBefore - spanCountAfter;\n          if (droppedSpanCount > 0) {\n            this.recordDroppedEvent('before_send', 'span', droppedSpanCount);\n          }\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n  protected _process<T>(promise: PromiseLike<T>): void {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n  protected _sendEnvelope(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> | void {\n    this.emit('beforeEnvelope', envelope);\n\n    if (this._isEnabled() && this._transport) {\n      return this._transport.send(envelope).then(null, reason => {\n        DEBUG_BUILD && logger.error('Error while sending event:', reason);\n      });\n    } else {\n      DEBUG_BUILD && logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n  protected _clearOutcomes(): Outcome[] {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') as [EventDropReason, DataCategory];\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public abstract eventFromException(_exception: any, _hint?: EventHint): PromiseLike<Event>;\n\n  /**\n   * @inheritDoc\n   */\n  public abstract eventFromMessage(\n    _message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    _level?: Severity | SeverityLevel,\n    _hint?: EventHint,\n  ): PromiseLike<Event>;\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult: PromiseLike<Event | null> | Event | null,\n  beforeSendLabel: string,\n): PromiseLike<Event | null> | Event | null {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if (isThenable(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!isPlainObject(event) && event !== null) {\n          throw new SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!isPlainObject(beforeSendResult) && beforeSendResult !== null) {\n    throw new SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options: ClientOptions,\n  event: Event,\n  hint: EventHint,\n): PromiseLike<Event | null> | Event | null {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    if (event.spans) {\n      // We store the # of spans before processing in SDK metadata,\n      // so we can compare it afterwards to determine how many spans were dropped\n      const spanCountBefore = event.spans.length;\n      event.sdkProcessingMetadata = {\n        ...event.sdkProcessingMetadata,\n        spanCountBeforeProcessing: spanCountBefore,\n      };\n    }\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event: Event): event is ErrorEvent {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/**\n * Add an event processor to the current client.\n * This event processor will run for all events processed by this client.\n */\nexport function addEventProcessor(callback: EventProcessor): void {\n  const client = getClient();\n\n  if (!client || !client.addEventProcessor) {\n    return;\n  }\n\n  client.addEventProcessor(callback);\n}\n","import type { DataCategory, TransportMakeRequestResponse } from '@sentry/types';\n\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\nexport type RateLimits = Record<string, number>;\n\nexport const DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nexport function parseRetryAfterHeader(header: string, now: number = Date.now()): number {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nexport function disabledUntil(limits: RateLimits, dataCategory: DataCategory): number {\n  return limits[dataCategory] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nexport function isRateLimited(limits: RateLimits, dataCategory: DataCategory, now: number = Date.now()): boolean {\n  return disabledUntil(limits, dataCategory) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nexport function updateRateLimits(\n  limits: RateLimits,\n  { statusCode, headers }: TransportMakeRequestResponse,\n  now: number = Date.now(),\n): RateLimits {\n  const updatedRateLimits: RateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>: <namespaces>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     *     <namespaces> Semicolon-separated list of metric namespace identifiers. Defines which namespace(s) will be affected.\n     *         Only present if rate limit applies to the metric_bucket data category.\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories, , , namespaces] = limit.split(':', 5);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          if (category === 'metric_bucket') {\n            // namespaces will be present when category === 'metric_bucket'\n            if (!namespaces || namespaces.split(';').includes('custom')) {\n              updatedRateLimits[category] = now + delay;\n            }\n          } else {\n            updatedRateLimits[category] = now + delay;\n          }\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n","import { isNodeEnv } from './node';\nimport { GLOBAL_OBJ } from './worldwide';\n\n/**\n * Returns true if we are in the browser.\n */\nexport function isBrowser(): boolean {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!isNodeEnv() || isElectronNodeRenderer());\n}\n\ntype ElectronProcess = { type?: string };\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer(): boolean {\n  return (\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    (GLOBAL_OBJ as any).process !== undefined && ((GLOBAL_OBJ as any).process as ElectronProcess).type === 'renderer'\n  );\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ &\n  // document is not available in all browser environments (webworkers). We make it optional so you have to explicitly check for it\n  Omit<Window, 'document'> &\n  Partial<Pick<Window, 'document'>>;\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { NavigationTimingPolyfillEntry } from '../types';\n\nconst getNavigationEntryFromPerformanceTiming = (): NavigationTimingPolyfillEntry => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = WINDOW.performance.navigation.type;\n\n  const navigationEntry: { [key: string]: number | string } = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key as keyof PerformanceTiming] as number) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry as unknown as NavigationTimingPolyfillEntry;\n};\n\nexport const getNavigationEntry = (): PerformanceNavigationTiming | NavigationTimingPolyfillEntry | undefined => {\n  if (WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n","/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const getActivationStart = (): number => {\n  const navEntry = getNavigationEntry();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\n\nexport interface OnHiddenCallback {\n  (event: Event): void;\n}\n\nexport const onHidden = (cb: OnHiddenCallback, once?: boolean): void => {\n  const onHiddenOrPageHide = (event: Event): void => {\n    if (event.type === 'pagehide' || WINDOW.document!.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport { onHidden } from './onHidden';\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = (): void => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (WINDOW.document && WINDOW.document.visibilityState) {\n    firstHiddenTime = WINDOW.document.visibilityState === 'hidden' && !WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = (): void => {\n  // Update the time if/when the document becomes hidden.\n  onHidden(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nexport const getVisibilityWatcher = (): {\n  readonly firstHiddenTime: number;\n} => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FirstInputPolyfillEntry, NavigationTimingPolyfillEntry, PerformancePaintTiming } from '../types';\n\nexport interface PerformanceEntryHandler {\n  (entry: PerformanceEntry): void;\n}\n\ninterface PerformanceEntryMap {\n  event: PerformanceEventTiming[];\n  paint: PerformancePaintTiming[];\n  'layout-shift': LayoutShift[];\n  'largest-contentful-paint': LargestContentfulPaint[];\n  'first-input': PerformanceEventTiming[] | FirstInputPolyfillEntry[];\n  navigation: PerformanceNavigationTiming[] | NavigationTimingPolyfillEntry[];\n  resource: PerformanceResourceTiming[];\n  longtask: PerformanceEntry[];\n}\n\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nexport const observe = <K extends keyof PerformanceEntryMap>(\n  type: K,\n  callback: (entries: PerformanceEntryMap[K]) => void,\n  opts?: PerformanceObserverInit,\n): PerformanceObserver | undefined => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() as PerformanceEntryMap[K]);\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) as PerformanceObserverInit,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../types';\nimport { bindReporter } from './lib/bindReporter';\nimport { getActivationStart } from './lib/getActivationStart';\nimport { getVisibilityWatcher } from './lib/getVisibilityWatcher';\nimport { initMetric } from './lib/initMetric';\nimport { observe } from './lib/observe';\nimport { onHidden } from './lib/onHidden';\nimport type { LCPMetric, ReportCallback, StopListening } from './types';\n\nconst reportedMetricIDs: Record<string, boolean> = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nexport const onLCP = (onReport: ReportCallback): StopListening | undefined => {\n  const visibilityWatcher = getVisibilityWatcher();\n  const metric = initMetric('LCP');\n  let report: ReturnType<typeof bindReporter>;\n\n  const handleEntries = (entries: LCPMetric['entries']): void => {\n    const lastEntry = entries[entries.length - 1] as LargestContentfulPaint;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - getActivationStart(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = observe('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = bindReporter(onReport, metric);\n\n    const stopListening = (): void => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() as LCPMetric['entries']);\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    onHidden(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { WINDOW } from '../../types';\nimport type { Metric } from '../types';\nimport { generateUniqueID } from './generateUniqueID';\nimport { getActivationStart } from './getActivationStart';\nimport { getNavigationEntry } from './getNavigationEntry';\n\nexport const initMetric = (name: Metric['name'], value?: number): Metric => {\n  const navEntry = getNavigationEntry();\n  let navigationType: Metric['navigationType'] = 'navigate';\n\n  if (navEntry) {\n    if ((WINDOW.document && WINDOW.document.prerendering) || getActivationStart() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') as Metric['navigationType'];\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: generateUniqueID(),\n    navigationType,\n  };\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nexport const generateUniqueID = (): string => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n","/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Metric, ReportCallback } from '../types';\n\nexport const bindReporter = (\n  callback: ReportCallback,\n  metric: Metric,\n  reportAllChanges?: boolean,\n): ((forceReport?: boolean) => void) => {\n  let prevValue: number;\n  let delta: number;\n  return (forceReport?: boolean) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n","import { getFunctionName, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../common/debug-build';\nimport { onCLS } from './web-vitals/getCLS';\nimport { onFID } from './web-vitals/getFID';\nimport { onINP } from './web-vitals/getINP';\nimport { onLCP } from './web-vitals/getLCP';\nimport { observe } from './web-vitals/lib/observe';\nimport { onTTFB } from './web-vitals/onTTFB';\n\ntype InstrumentHandlerTypePerformanceObserver =\n  | 'longtask'\n  | 'event'\n  | 'navigation'\n  | 'paint'\n  | 'resource'\n  | 'first-input';\n\ntype InstrumentHandlerTypeMetric = 'cls' | 'lcp' | 'fid' | 'ttfb' | 'inp';\n\n// We provide this here manually instead of relying on a global, as this is not available in non-browser environements\n// And we do not want to expose such types\ninterface PerformanceEntry {\n  readonly duration: number;\n  readonly entryType: string;\n  readonly name: string;\n  readonly startTime: number;\n  toJSON(): Record<string, unknown>;\n}\ninterface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: number;\n  processingEnd: number;\n  duration: number;\n  cancelable?: boolean;\n  target?: unknown | null;\n  interactionId?: number;\n}\n\ninterface Metric {\n  /**\n   * The name of the metric (in acronym form).\n   */\n  name: 'CLS' | 'FCP' | 'FID' | 'INP' | 'LCP' | 'TTFB';\n\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * The delta between the current value and the last-reported value.\n   * On the first report, `delta` and `value` will always be the same.\n   */\n  delta: number;\n\n  /**\n   * A unique ID representing this particular metric instance. This ID can\n   * be used by an analytics tool to dedupe multiple values sent for the same\n   * metric instance, or to group multiple deltas together and calculate a\n   * total. It can also be used to differentiate multiple different metric\n   * instances sent from the same page, which can happen if the page is\n   * restored from the back/forward cache (in that case new metrics object\n   * get created).\n   */\n  id: string;\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[];\n\n  /**\n   * The type of navigation\n   *\n   * Navigation Timing API (or `undefined` if the browser doesn't\n   * support that API). For pages that are restored from the bfcache, this\n   * value will be 'back-forward-cache'.\n   */\n  navigationType: 'navigate' | 'reload' | 'back-forward' | 'back-forward-cache' | 'prerender';\n}\n\ntype InstrumentHandlerType = InstrumentHandlerTypeMetric | InstrumentHandlerTypePerformanceObserver;\n\ntype StopListening = undefined | void | (() => void);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype InstrumentHandlerCallback = (data: any) => void;\n\ntype CleanupHandlerCallback = () => void;\n\nconst handlers: { [key in InstrumentHandlerType]?: InstrumentHandlerCallback[] } = {};\nconst instrumented: { [key in InstrumentHandlerType]?: boolean } = {};\n\nlet _previousCls: Metric | undefined;\nlet _previousFid: Metric | undefined;\nlet _previousLcp: Metric | undefined;\nlet _previousTtfb: Metric | undefined;\nlet _previousInp: Metric | undefined;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nexport function addClsInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nexport function addLcpInstrumentationHandler(\n  callback: (data: { metric: Metric }) => void,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nexport function addTtfbInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addFidInstrumentationHandler(callback: (data: { metric: Metric }) => void): CleanupHandlerCallback {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addInpInstrumentationHandler(\n  callback: (data: { metric: Omit<Metric, 'entries'> & { entries: PerformanceEventTiming[] } }) => void,\n): CleanupHandlerCallback {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\nexport function addPerformanceInstrumentationHandler(\n  type: 'event' | 'first-input',\n  callback: (data: { entries: ((PerformanceEntry & { target?: unknown | null }) | PerformanceEventTiming)[] }) => void,\n): CleanupHandlerCallback;\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback;\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nexport function addPerformanceInstrumentationHandler(\n  type: InstrumentHandlerTypePerformanceObserver,\n  callback: (data: { entries: PerformanceEntry[] }) => void,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type: InstrumentHandlerType, data: unknown): void {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      DEBUG_BUILD &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls(): StopListening {\n  return onCLS(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid(): void {\n  return onFID(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp(): StopListening {\n  return onLCP(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb(): StopListening {\n  return onTTFB(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp(): void {\n  return onINP(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type: InstrumentHandlerTypeMetric,\n  callback: InstrumentHandlerCallback,\n  instrumentFn: () => StopListening,\n  previousValue: Metric | undefined,\n  stopOnCallback = false,\n): CleanupHandlerCallback {\n  addHandler(type, callback);\n\n  let stopListening: StopListening | undefined;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type: InstrumentHandlerTypePerformanceObserver): void {\n  const options: PerformanceObserverInit = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  observe(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type: InstrumentHandlerType, handler: InstrumentHandlerCallback): void {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] as InstrumentHandlerCallback[]).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type: InstrumentHandlerType,\n  callback: InstrumentHandlerCallback,\n  stopListening: StopListening,\n): CleanupHandlerCallback {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","// https://github.com/alangpierce/sucrase/tree/265887868966917f3b924ce38dfad01fbab1329f\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2012-2018 various contributors (see AUTHORS)\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nexport function _nullishCoalesce(lhs: unknown, rhsFn: () => unknown): unknown {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        if (!target.contentDocument) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    const parentId = mirror.getId(parentNode);\r\n    if (removes.some((r) => r.id === parentId)) {\r\n        return true;\r\n    }\r\n    return _isParentRemoved(removes, parentNode, mirror);\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    const mutationObserver = initMutationObserver(o, o.doc);\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n    const adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const fontObserver = o.collectFonts\r\n        ? initFontObserver(o)\r\n        : () => {\r\n        };\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        if (iframeEl.contentDocument &&\r\n            iframeEl.contentDocument.adoptedStyleSheets &&\r\n            iframeEl.contentDocument.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeEl.contentDocument.adoptedStyleSheets, this.mirror.getId(iframeEl.contentDocument));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, mirror, takeFullSnapshot };\n","import { fill } from '@sentry/utils';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        if (!iframeElement.contentWindow || !iframeElement.contentDocument)\r\n            return;\r\n        this.patchAttachShadow(iframeElement.contentWindow.Element, iframeElement.contentDocument);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.resetObservers && this.resetObservers();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all')\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            if (recordCanvas && typeof sampling === 'number')\r\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n        })();\r\n    }\r\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        this.startRAFTimestamping();\r\n        this.startPendingCanvasMutationFlusher();\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.resetObservers = () => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        };\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.resetObservers = () => {\r\n            cancelAnimationFrame(rafId);\r\n        };\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const snapshotInProgressMap = new Map();\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\r\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                    matchedCanvas.push(canvas);\r\n                }\r\n            });\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                const id = this.mirror.getId(canvas);\r\n                if (snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    worker.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.loop = true;\r\n        this.periodicallyClear();\r\n    }\r\n    periodicallyClear() {\r\n        onRequestAnimationFrame(() => {\r\n            this.clear();\r\n            if (this.loop)\r\n                this.periodicallyClear();\r\n        });\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    clear() {\r\n        this.nodeMap = new WeakMap();\r\n    }\r\n    destroy() {\r\n        this.loop = false;\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/types';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (source === IncrementalSource.Mutation) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(' background-clip: text;', ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule) && rule.selectorText.includes(':')) {\r\n        return fixSafariColons(rule.cssText);\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    const a = doc.createElement('a');\r\n    a.href = attributeValue;\r\n    return a.href;\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref() {\r\n    const a = document.createElement('a');\r\n    a.href = '';\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref());\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref());\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            delete attributes.rel;\r\n            delete attributes.href;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref());\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = document.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const oldValue = image.crossOrigin;\r\n        image.crossOrigin = 'anonymous';\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\r\n            }\r\n            oldValue\r\n                ? (attributes.crossOrigin = oldValue)\r\n                : image.removeAttribute('crossorigin');\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!n.contentDocument) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload') &&\r\n                    sn.attributes.as === 'script') ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    sn.attributes.href.endsWith('.js')))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = n.contentDocument;\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        serializedNode.attributes.rel === 'stylesheet') {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        whitespace();\r\n        while (css[0] == '}') {\r\n            error('extra closing bracket');\r\n            css = css.slice(1);\r\n            whitespace();\r\n        }\r\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const cleanedInput = m[0]\r\n            .trim()\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        });\r\n        return customSplit(cleanedInput).map((s) => s.replace(/\\u200C/g, ',').trim());\r\n    }\r\n    function customSplit(input) {\r\n        const result = [];\r\n        let currentSegment = '';\r\n        let depthParentheses = 0;\r\n        let depthBrackets = 0;\r\n        let currentStringChar = null;\r\n        for (const char of input) {\r\n            const hasStringEscape = currentSegment.endsWith('\\\\');\r\n            if (currentStringChar) {\r\n                if (currentStringChar === char && !hasStringEscape) {\r\n                    currentStringChar = null;\r\n                }\r\n            }\r\n            else if (char === '(') {\r\n                depthParentheses++;\r\n            }\r\n            else if (char === ')') {\r\n                depthParentheses--;\r\n            }\r\n            else if (char === '[') {\r\n                depthBrackets++;\r\n            }\r\n            else if (char === ']') {\r\n                depthBrackets--;\r\n            }\r\n            else if ('\\'\"'.includes(char)) {\r\n                currentStringChar = char;\r\n            }\r\n            if (char === ',' && depthParentheses === 0 && depthBrackets === 0) {\r\n                result.push(currentSegment);\r\n                currentSegment = '';\r\n            }\r\n            else {\r\n                currentSegment += char;\r\n            }\r\n        }\r\n        if (currentSegment) {\r\n            result.push(currentSegment);\r\n        }\r\n        return result;\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' + name + '\\\\s*([^;]+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload') &&\r\n                        n.attributes.as === 'script') {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        n.attributes.href.endsWith('.js')) {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = document.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, fixSafariColons, genId, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/utils';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  LargestContentfulPaintData,\n  NavigationData,\n  PaintData,\n  ReplayPerformanceEntry,\n  ResourceData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  if (!ENTRY_TYPES[entry.entryType]) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on an LCP metric.\n */\nexport function getLargestContentfulPaint(metric: {\n  value: number;\n  entries: PerformanceEntry[];\n}): ReplayPerformanceEntry<LargestContentfulPaintData> {\n  const entries = metric.entries;\n  const lastEntry = entries[entries.length - 1] as (PerformanceEntry & { element?: Element }) | undefined;\n  const element = lastEntry ? lastEntry.element : undefined;\n\n  const value = metric.value;\n\n  const end = getAbsoluteTime(value);\n\n  const data: ReplayPerformanceEntry<LargestContentfulPaintData> = {\n    type: 'largest-contentful-paint',\n    name: 'largest-contentful-paint',\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      nodeId: element ? record.mirror.getId(element) : undefined,\n    },\n  };\n\n  return data;\n}\n","import { addLcpInstrumentationHandler, addPerformanceInstrumentationHandler } from '@sentry-internal/tracing';\n\nimport type { ReplayContainer } from '../types';\nimport { getLargestContentfulPaint } from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(({ metric }) => {\n      replay.replayPerformanceEntries.push(getLargestContentfulPaint(metric));\n    }),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logInfo } from '../util/log';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    logInfo('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\nimport { logger } from '@sentry/utils';\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.warn('[Replay] Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      logInfo('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      DEBUG_BUILD && logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/utils';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import type { Session, SessionOptions } from '../types';\nimport { logInfoNextTick } from '../util/log';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    traceInternals,\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    traceInternals?: boolean;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession(traceInternals);\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    logInfoNextTick('[Replay] Creating new session', traceInternals);\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  logInfoNextTick('[Replay] Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logInfoNextTick } from '../util/log';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(traceInternals?: boolean): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    logInfoNextTick('[Replay] Loading existing session', traceInternals);\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logInfo } from './log';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!replay.eventBuffer) {\n    return null;\n  }\n\n  try {\n    if (isCheckout && replay.recordingMode === 'buffer') {\n      replay.eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      replay.eventBuffer.hasCheckout = true;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await replay.eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const reason = error && error instanceof EventBufferSizeExceededError ? 'addEventSizeExceeded' : 'addEvent';\n\n    DEBUG_BUILD && logger.error(error);\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    logInfo(\n      `[Replay] Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`,\n      replay.getOptions()._experiments.traceInternals,\n    );\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.error('[Replay] An error occured in the `beforeAddRecordingEvent` callback, skipping the event...', error);\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/types';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { getClient } from '@sentry/core';\nimport type { ErrorEvent, Event, TransactionEvent, Transport, TransportMakeRequestResponse } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse | void) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  // Custom transports may still be returning `Promise<void>`, which means we cannot expect the status code to be available there\n  // TODO (v8): remove this check as it will no longer be necessary\n  const enforceStatusCode = isBaseTransportSend();\n\n  return (event: Event, sendResponse: TransportMakeRequestResponse | void) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse && sendResponse.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (enforceStatusCode && (!statusCode || statusCode < 200 || statusCode >= 300)) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts && event.contexts.trace && event.contexts.trace.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id as string);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(() => {\n    // Capture current event buffer as new replay\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.sendBufferedReplayOrFlush();\n  });\n}\n\nfunction isBaseTransportSend(): boolean {\n  const client = getClient();\n  if (!client) {\n    return false;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    return false;\n  }\n\n  return (\n    (transport.send as Transport['send'] & { __sentry__baseTransport__?: true }).__sentry__baseTransport__ || false\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { TextEncoderInternal } from '@sentry/types';\nimport { dropUndefinedKeys, logger, stringMatchesSomePattern } from '@sentry/utils';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkBody,\n  NetworkMetaWarning,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(\n  body: RequestInit['body'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = _serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Get the string representation of a body. */\nexport function getBodyString(body: unknown): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof URLSearchParams) {\n      return [body.toString()];\n    }\n\n    if (body instanceof FormData) {\n      return [_serializeFormData(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings && warnings.length > 0) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.keys(headers).reduce((filteredHeaders: Record<string, string>, key: string) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = headers[key];\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction _serializeFormData(formData: FormData): string {\n  // This is a bit simplified, but gives us a decent estimate\n  // This converts e.g. { name: 'Anne Smith', age: 13 } to 'name=Anne+Smith&age=13'\n  // @ts-expect-error passing FormData to URLSearchParams actually works\n  return new URLSearchParams(formData).toString();\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import type { Breadcrumb, FetchBreadcrumbData, TextEncoderInternal } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  FetchHint,\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture fetch breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { input, response } = hint;\n\n  const body = input ? _getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body, options.textEncoder);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    textEncoder: TextEncoderInternal;\n  },\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = _getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'> & {\n    textEncoder: TextEncoderInternal;\n  },\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    textEncoder,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n    textEncoder: TextEncoderInternal;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size =\n      bodyText && bodyText.length && responseBodySize === undefined\n        ? getBodySize(bodyText, textEncoder)\n        : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize response body', error);\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to get text body from response', error);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction _getFetchRequestArgBody(fetchArgs: unknown[] = []): RequestInit['body'] | undefined {\n  // We only support getting the body from the fetch options\n  if (fetchArgs.length !== 2 || typeof fetchArgs[1] !== 'object') {\n    return undefined;\n  }\n\n  return (fetchArgs[1] as RequestInit).body;\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.warn('[Replay] Failed to clone response body', error);\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n\n  return _getResponseText(response);\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import type { Breadcrumb, TextEncoderInternal, XhrBreadcrumbData } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  NetworkMetaWarning,\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  XhrHint,\n} from '../../types';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  getBodyString,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where approriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.error('[Replay] Failed to capture xhr breadcrumb', error);\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: { textEncoder: TextEncoderInternal },\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input, options.textEncoder);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType, options.textEncoder);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ');\n    acc[key.toLowerCase()] = value;\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('[Replay] Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch {\n    DEBUG_BUILD && logger.warn('[Replay] Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('[Replay] Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n  textEncoder: TextEncoder | TextEncoderInternal,\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr, textEncoder);\n  } catch {\n    return undefined;\n  }\n}\n","import { getClient } from '@sentry/core';\nimport type {\n  Breadcrumb,\n  BreadcrumbHint,\n  FetchBreadcrumbData,\n  TextEncoderInternal,\n  XhrBreadcrumbData,\n} from '@sentry/types';\nimport { addFetchInstrumentationHandler, addXhrInstrumentationHandler, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { FetchHint, ReplayContainer, ReplayNetworkOptions, XhrHint } from '../types';\nimport { handleFetchSpanListener } from './handleFetch';\nimport { handleXhrSpanListener } from './handleXhr';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n  textEncoder: TextEncoderInternal;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const textEncoder = new TextEncoder();\n\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      textEncoder,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client && client.on) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    } else {\n      // Fallback behavior\n      addFetchInstrumentationHandler(handleFetchSpanListener(replay));\n      addXhrInstrumentationHandler(handleXhrSpanListener(replay));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint, options);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.warn('Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint && hint.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint && hint.response;\n}\n","import type { HandlerDataFetch } from '@sentry/types';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleFetch(handlerData: HandlerDataFetch): null | ReplayPerformanceEntry<NetworkRequestData> {\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  if (!endTimestamp) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url } = fetchData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: {\n      method,\n      statusCode: response ? (response as Response).status : undefined,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addFetchInstrumentationHandler(listener)`.\n */\nexport function handleFetchSpanListener(replay: ReplayContainer): (handlerData: HandlerDataFetch) => void {\n  return (handlerData: HandlerDataFetch) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { HandlerDataXhr } from '@sentry/types';\nimport { SENTRY_XHR_DATA_KEY } from '@sentry/utils';\n\nimport type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { addNetworkBreadcrumb } from './util/addNetworkBreadcrumb';\n\n/** only exported for tests */\nexport function handleXhr(handlerData: HandlerDataXhr): ReplayPerformanceEntry<NetworkRequestData> | null {\n  const { startTimestamp, endTimestamp, xhr } = handlerData;\n\n  const sentryXhrData = xhr[SENTRY_XHR_DATA_KEY];\n\n  if (!startTimestamp || !endTimestamp || !sentryXhrData) {\n    return null;\n  }\n\n  // This is only used as a fallback, so we know the body sizes are never set here\n  const { method, url, status_code: statusCode } = sentryXhrData;\n\n  if (url === undefined) {\n    return null;\n  }\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addXhrInstrumentationHandler(listener)`.\n */\nexport function handleXhrSpanListener(replay: ReplayContainer): (handlerData: HandlerDataXhr) => void {\n  return (handlerData: HandlerDataXhr) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    addNetworkBreadcrumb(replay, result);\n  };\n}\n","import type { Breadcrumb, Scope } from '@sentry/types';\nimport { normalize } from '@sentry/utils';\n\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\nlet _LAST_BREADCRUMB: null | Breadcrumb = null;\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n\nexport const handleScopeListener: (replay: ReplayContainer) => (scope: Scope) => void =\n  (replay: ReplayContainer) =>\n  (scope: Scope): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nexport function handleScope(scope: Scope): Breadcrumb | null {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    !isBreadcrumbWithCategory(newBreadcrumb) ||\n    ['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n    newBreadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (newBreadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(newBreadcrumb);\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data && breadcrumb.data.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n","import type { BaseClient } from '@sentry/core';\nimport { getCurrentScope } from '@sentry/core';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { Client, DynamicSamplingContext } from '@sentry/types';\nimport { addClickKeypressInstrumentationHandler, addHistoryInstrumentationHandler } from '@sentry/utils';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport { handleScopeListener } from '../coreHandlers/handleScope';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(replay: ReplayContainer): void {\n  // Listeners from core SDK //\n  const scope = getCurrentScope();\n  const client = getClient();\n\n  scope.addScopeListener(handleScopeListener(replay));\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay, !hasHooks(client));\n  if (client && client.addEventProcessor) {\n    client.addEventProcessor(eventProcessor);\n  } else {\n    addEventProcessor(eventProcessor);\n  }\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (hasHooks(client)) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('startTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We may be missing the initial startTransaction due to timing issues,\n    // so we capture it on finish again.\n    client.on('finishTransaction', transaction => {\n      replay.lastTransaction = transaction;\n    });\n\n    // We want to flush replay\n    client.on('beforeSendFeedback', (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options && options.includeReplay && replay.isEnabled() && replayId) {\n        // This should never reject\n        if (feedbackEvent.contexts && feedbackEvent.contexts.feedback) {\n          feedbackEvent.contexts.feedback.replay_id = replayId;\n        }\n      }\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasHooks(client: Client | undefined): client is BaseClient<any> {\n  return !!(client && client.on);\n}\n","import type { HandlerDataHistory } from '@sentry/types';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import type { Event, EventHint } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { handleAfterSendEvent } from './handleAfterSendEvent';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(\n  replay: ReplayContainer,\n  includeAfterSendEventHandling = false,\n): (event: Event, hint: EventHint) => Event | null {\n  const afterSendHandler = includeAfterSendEventHandling ? handleAfterSendEvent(replay) : undefined;\n\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled\n      if (!replay.isEnabled()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('[Replay] Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      // In cases where a custom client is used that does not support the new hooks (yet),\n      // we manually call this hook method here\n      if (afterSendHandler) {\n        // Pretend the error had a 200 response so we always capture it\n        afterSendHandler(event, { statusCode: 200 });\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/types';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event, EventHint } from '@sentry/types';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import type { Event } from '@sentry/types';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `hanldleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import type { ErrorEvent, Event } from '@sentry/types';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception && event.exception.values && event.exception.values[0].value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    exceptionValue.match(/reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=(418|419|422|423|425)/) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { logger } from '@sentry/utils';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logInfo } from './log';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time.\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && replay.session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          logInfo(\n            `[Replay] Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`,\n            replay.getOptions()._experiments.traceInternals,\n          );\n\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifcally need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically us in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","import type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/types';\nimport { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/utils';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/types';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import type { IntegrationIndex, Scope } from '@sentry/core';\nimport { getIsolationScope } from '@sentry/core';\nimport { prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent } from '@sentry/types';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client & { _integrations?: IntegrationIndex };\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import { getClient, getCurrentScope } from '@sentry/core';\nimport type { ReplayEvent, TransportMakeRequestResponse } from '@sentry/types';\nimport type { RateLimits } from '@sentry/utils';\nimport { isRateLimited, updateRateLimits } from '@sentry/utils';\n\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logInfo } from './log';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<void | TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    logInfo('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: void | TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { captureException, setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (DEBUG_BUILD && options._experiments && options._experiments.captureExceptions) {\n      captureException(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  captureException,\n  getClient,\n  getCurrentScope,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReplayRecordingMode, Transaction } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\n\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logInfo, logInfoNextTick } from './util/log';\nimport { sendReplay } from './util/sendReplay';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of three modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active transcation.\n   * This is only available when performance is enabled.\n   */\n  public lastTransaction?: Transaction;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    if (errorSampleRate <= 0 && sessionSampleRate <= 0) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      this._handleException(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    logInfoNextTick(\n      `[Replay] Starting replay in ${this.recordingMode} mode`,\n      this._options._experiments.traceInternals,\n    );\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      throw new Error('Replay buffering is in progress, call `flush()` to save the replay');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in session mode', this._options._experiments.traceInternals);\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      throw new Error('Replay recording is already in progress');\n    }\n\n    logInfoNextTick('[Replay] Starting replay in buffer mode', this._options._experiments.traceInternals);\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer' && { checkoutEveryNms: BUFFER_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: this._onMutationHandler,\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      logInfo(\n        `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`,\n        this._options._experiments.traceInternals,\n      );\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    logInfo('[Replay] Pausing replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    logInfo('[Replay] Resuming replay', this._options._experiments.traceInternals);\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    logInfo('[Replay] Converting buffer to session', this._options._experiments.traceInternals);\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current sesion (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    // eslint-disable-next-line deprecation/deprecation\n    const lastTransaction = this.lastTransaction || getCurrentScope().getTransaction();\n\n    const attributes = (lastTransaction && spanToJSON(lastTransaction).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastTransaction || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastTransaction).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  private _handleException(error: unknown): void {\n    DEBUG_BUILD && logger.error('[Replay]', error);\n\n    if (DEBUG_BUILD && this._options._experiments && this._options._experiments.captureExceptions) {\n      captureException(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        traceInternals: this._options._experiments.traceInternals,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void = (event: KeyboardEvent) => {\n    handleKeyboardEvent(this, event);\n  };\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      logInfo('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    const performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    if (!session || !eventBuffer) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accomodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp,\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private _flush = async ({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> => {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      logInfo(\n        `[Replay] Session duration (${Math.floor(duration / 1000)}s) is too ${\n          tooShort ? 'short' : 'long'\n        }, not sending replay.`,\n        this._options._experiments.traceInternals,\n      );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      logInfo('[Replay] Flushing initial segment without checkout.', this._options._experiments.traceInternals);\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = undefined;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      DEBUG_BUILD && logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler = (mutations: unknown[]): boolean => {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  };\n}\n","type DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Use this attribute to represent the source of a span.\n * Should be one of: custom, url, route, view, component, task, unknown\n *\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SOURCE = 'sentry.source';\n\n/**\n * Use this attribute to represent the sample rate used for a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_SAMPLE_RATE = 'sentry.sample_rate';\n\n/**\n * Use this attribute to represent the operation of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_OP = 'sentry.op';\n\n/**\n * Use this attribute to represent the origin of a span.\n */\nexport const SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN = 'sentry.origin';\n\n/**\n * The id of the profile that this span occured in.\n */\nexport const SEMANTIC_ATTRIBUTE_PROFILE_ID = 'profile_id';\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport type { EventBuffer } from '../types';\nimport { logInfo } from '../util/log';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  logInfo('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    logInfo(`[Replay] Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    logInfo('[Replay] Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),a=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=function(t,e){for(var i=new n(31),a=0;a<31;++a)i[a]=e+=1<<t[a-1];var s=new r(i[30]);for(a=1;a<30;++a)for(var o=i[a];o<i[a+1];++o)s[o]=o-i[a]<<5|a;return{b:i,r:s}},o=s(e,2),f=o.b,h=o.r;f[28]=258,h[258]=28;for(var l=s(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,a=0,s=new n(r);a<i;++a)t[a]&&++s[t[a]-1];var o,f=new n(r);for(a=1;a<r;++a)f[a]=f[a-1]+s[a-1]<<1;if(e){o=new n(1<<r);var h=15-r;for(a=0;a<i;++a)if(t[a])for(var l=a<<4|t[a],c=r-t[a],v=f[t[a]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>h]=l}else for(o=new n(i),a=0;a<i;++a)t[a]&&(o[a]=u[f[t[a]-1]++]>>15-t[a]);return o},g=new t(288);for(c=0;c<144;++c)g[c]=8;for(c=144;c<256;++c)g[c]=9;for(c=256;c<280;++c)g[c]=7;for(c=280;c<288;++c)g[c]=8;var w=new t(32);for(c=0;c<32;++c)w[c]=5;var p=d(g,9,0),y=d(w,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==r||r<0)&&(r=0),(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},A=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},_=function(r,e){for(var i=[],a=0;a<r.length;++a)r[a]&&i.push({s:a,f:r[a]});var s=i.length,o=i.slice();if(!s)return{t:F,l:0};if(1==s){var f=new t(i[0].s+1);return f[i[0].s]=1,{t:f,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var h=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:h.f+l.f,l:h,r:l};c!=s-1;)h=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:h.f+l.f,l:h,r:l};var d=o[0].s;for(a=1;a<s;++a)o[a].s>d&&(d=o[a].s);var g=new n(d+1),w=x(i[c-1],g,0);if(w>e){a=0;var p=0,y=w-e,m=1<<y;for(o.sort((function(t,n){return g[n.s]-g[t.s]||t.f-n.f}));a<s;++a){var b=o[a].s;if(!(g[b]>e))break;p+=m-(1<<w-g[b]),g[b]=e}for(p>>=y;p>0;){var M=o[a].s;g[M]<e?p-=1<<e-g[M]++-1:++a}for(;a>=0&&p;--a){var E=o[a].s;g[E]==e&&(--g[E],++p)}w=e}return{t:new t(g),l:w}},x=function(t,n,r){return-1==t.s?Math.max(x(t.l,n,r+1),x(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,a=t[0],s=1,o=function(t){e[i++]=t},f=1;f<=r;++f)if(t[f]==a&&f!=r)++s;else{if(!a&&s>2){for(;s>138;s-=138)o(32754);s>2&&(o(s>10?s-11<<5|28690:s-3<<5|12305),s=0)}else if(s>3){for(o(a),--s;s>6;s-=6)o(8304);s>2&&(o(s-3<<5|8208),s=0)}for(;s--;)o(a);s=1,a=t[f]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var a=0;a<e;++a)t[i+a+4]=r[a];return 8*(i+4+e)},C=function(t,r,s,o,f,h,l,u,c,v,m){z(r,m++,s),++f[256];for(var b=_(f,15),M=b.t,E=b.l,x=_(h,15),C=x.t,U=x.l,F=D(M),I=F.c,S=F.n,L=D(C),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=_(q,7),H=G.t,J=G.l,K=19;K>4&&!H[a[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(f,g)+T(h,w)+l,X=T(f,M)+T(h,C)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(C,U,0),R=C;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[a[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=p,P=g,Q=y,R=w;for(B=0;B<u;++B){var rt=o[B];if(rt>255){A(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;A(r,m,Q[et]),m+=R[et],et>3&&(A(r,m,rt>>5&8191),m+=i[et])}else A(r,m,N[rt]),m+=P[rt]}return A(r,m,N[256]),m+P[256]},U=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,a=0|r.length,s=0;s!=a;){for(var o=Math.min(s+2655,a);s<o;++s)i+=e+=r[s];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},L=function(a,s,o,f,u){if(!u&&(u={l:1},s.dictionary)){var c=s.dictionary.subarray(-32768),v=new t(c.length+a.length);v.set(c),v.set(a,c.length),a=v,u.w=c.length}return function(a,s,o,f,u,c){var v=c.z||a.length,d=new t(f+v+5*(1+Math.ceil(v/7e3))+u),g=d.subarray(f,d.length-u),w=c.l,p=7&(c.r||0);if(s){p&&(g[0]=c.r>>3);for(var y=U[s-1],M=y>>13,E=8191&y,z=(1<<o)-1,A=c.p||new n(32768),_=c.h||new n(z+1),x=Math.ceil(o/3),D=2*x,T=function(t){return(a[t]^a[t+1]<<x^a[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=_[H];if(A[J]=K,_[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!w)){p=C(a,g,0,F,I,S,O,q,G,j-G,p),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(a[j+Q]==a[j+Q-W]){for(var $=0;$<Z&&a[j+$]==a[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-A[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=A[J])&32767}if(R){F[q++]=268435456|h[Q]<<18|l[R];var it=31&h[Q],at=31&l[R];O+=e[it]+i[at],++I[257+it],++S[at],B=j+Q,++L}else F[q++]=a[j],++I[a[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=a[j],++I[a[j]];p=C(a,g,w,F,I,S,O,q,G,j-G,p),w||(c.r=7&p|g[p/8|0]<<3,p-=7,c.h=_,c.p=A,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+w;j+=65535){var st=j+65535;st>=v&&(g[p/8|0]=w,st=v),p=k(g,p+1,a.subarray(j,st))}c.i=v}return b(d,0,f+m(p)+u)}(a,null==s.level?6:s.level,null==s.mem?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(a.length)))):12+s.mem,o,f,u)},O=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},j=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(L(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var a=this.b.length-this.s.z;a&&(this.b.set(n.subarray(0,a),this.s.z),this.s.z=this.b.length,this.p(this.b,!1)),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(a),32768),this.s.z=n.length-a+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n}();function q(t,n){n||(n={});var r=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}}(),e=t.length;r.p(t);var i,a=L(t,n,10+((i=n).filename?i.filename.length+1:0),8),s=a.length;return function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&O(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}}(a,n),O(a,s-8,r.d()),O(a,s-4,e),a}var B=function(){function t(t,n){this.c=S(),this.v=1,j.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),j.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=L(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=S();i.p(n.dictionary),O(t,2,i.d())}}(r,this.o),this.v=0),n&&O(r,r.length-4,this.c.d()),this.ondata(r,n)},t}(),G=\"undefined\"!=typeof TextEncoder&&new TextEncoder,H=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{H.decode(F,{stream:!0})}catch(t){}var J=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(K(t),this.d=n||!1)},t}();function K(n,r){if(r){for(var e=new t(n.length),i=0;i<n.length;++i)e[i]=n.charCodeAt(i);return e}if(G)return G.encode(n);var a=n.length,s=new t(n.length+(n.length>>1)),o=0,f=function(t){s[o++]=t};for(i=0;i<a;++i){if(o+5>s.length){var h=new t(o+8+(a-i<<1));h.set(s),s=h}var l=n.charCodeAt(i);l<128||r?f(l):l<2048?(f(192|l>>6),f(128|63&l)):l>55295&&l<57344?(f(240|(l=65536+(1047552&l)|1023&n.charCodeAt(++i))>>18),f(128|l>>12&63),f(128|l>>6&63),f(128|63&l)):(f(224|l>>12),f(128|l>>6&63),f(128|63&l))}return b(s,0,o)}const N=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(let r=0,e=t.length;r<e;r++)n+=t[r].length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new B,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new J(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},P={clear:()=>{N.clear()},addEvent:t=>N.addEvent(t),finish:()=>N.finish(),compress:t=>function(t){return q(K(t))}(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in P&&\"function\"==typeof P[n])try{const t=P[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import type { Breadcrumb } from '@sentry/types';\nimport { htmlTreeAsString } from '@sentry/utils';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { consoleSandbox } from '@sentry/utils';\n\nimport type { DeprecatedPrivacyOptions, ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>> &\n  Omit<DeprecatedPrivacyOptions, 'maskInputOptions'>;\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(\n  selectors: string[],\n  defaultSelectors: string[],\n  deprecatedClassOption?: string | RegExp,\n  deprecatedSelectorOption?: string,\n): string {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n      );\n    });\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n","import { getClient } from '@sentry/core';\nimport type { BrowserClientReplayOptions, Integration, IntegrationFn } from '@sentry/types';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser } from '@sentry/utils';\n\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\ntype InitialReplayPluginOptions = Omit<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'> &\n  Partial<Pick<ReplayPluginOptions, 'sessionSampleRate' | 'errorSampleRate'>>;\n\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n * @deprecated Use `replayIntegration()` instead.\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'Replay';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  }: ReplayConfiguration = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Replay.id;\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n      blockClass,\n      blockSelector,\n      maskTextClass,\n      maskTextSelector,\n      ignoreClass,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public setupOnce(): void {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // Once upon a time, we tried to create a transaction in `setupOnce` and it would\n    // potentially create a transaction before some native SDK integrations have run\n    // and applied their own global event processor. An example is:\n    // https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n    //\n    // So we call `this._initialize()` in next event loop as a workaround to wait for other\n    // global event processors to finish. This is no longer needed, but keeping it\n    // here to avoid any future issues.\n    setTimeout(() => this._initialize());\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will throw an error if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    // We have to run this in _initialize, because this runs in setTimeout\n    // So when this runs all integrations have been added\n    // Before this, we cannot access integrations on the client,\n    // so we need to mutate the options here\n    this._maybeLoadFromReplayCanvasIntegration();\n\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const client = getClient()!;\n      const canvasIntegration = client.getIntegrationByName!('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions): ReplayPluginOptions {\n  const client = getClient();\n  const opt = client && (client.getOptions() as BrowserClientReplayOptions);\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...dropUndefinedKeys(initialOptions) };\n\n  if (!opt) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn('SDK client is not available.');\n    });\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precendence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { Scope } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { BaseClient } from '@sentry/core';\nimport type {\n  BrowserClientProfilingOptions,\n  BrowserClientReplayOptions,\n  ClientOptions,\n  Event,\n  EventHint,\n  Options,\n  ParameterizedString,\n  Severity,\n  SeverityLevel,\n  UserFeedback,\n} from '@sentry/types';\nimport { createClientReportEnvelope, dsnToString, getSDKSource, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from './debug-build';\nimport { eventFromException, eventFromMessage } from './eventbuilder';\nimport { WINDOW } from './helpers';\nimport type { BrowserTransportOptions } from './transports/types';\nimport { createUserFeedbackEnvelope } from './userfeedback';\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\nexport type BrowserOptions = Options<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * Configuration options for the Sentry Browser SDK Client class\n * @see BrowserClient for more information.\n */\nexport type BrowserClientOptions = ClientOptions<BrowserTransportOptions> &\n  BrowserClientReplayOptions &\n  BrowserClientProfilingOptions;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class BrowserClient extends BaseClient<BrowserClientOptions> {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: BrowserClientOptions) {\n    const sdkSource = WINDOW.SENTRY_SDK_SOURCE || getSDKSource();\n    applySdkMetadata(options, 'browser', ['browser'], sdkSource);\n\n    super(options);\n\n    if (options.sendClientReports && WINDOW.document) {\n      WINDOW.document.addEventListener('visibilitychange', () => {\n        if (WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromException(exception: unknown, hint?: EventHint): PromiseLike<Event> {\n    return eventFromException(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public eventFromMessage(\n    message: ParameterizedString,\n    // eslint-disable-next-line deprecation/deprecation\n    level: Severity | SeverityLevel = 'info',\n    hint?: EventHint,\n  ): PromiseLike<Event> {\n    return eventFromMessage(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * Sends user feedback to Sentry.\n   */\n  public captureUserFeedback(feedback: UserFeedback): void {\n    if (!this._isEnabled()) {\n      DEBUG_BUILD && logger.warn('SDK not enabled, will not capture user feedback.');\n      return;\n    }\n\n    const envelope = createUserFeedbackEnvelope(feedback, {\n      metadata: this.getSdkMetadata(),\n      dsn: this.getDsn(),\n      tunnel: this.getOptions().tunnel,\n    });\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(event: Event, hint: EventHint, scope?: Scope): PromiseLike<Event | null> {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n  private _flushOutcomes(): void {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      DEBUG_BUILD && logger.log('No outcomes to send');\n      return;\n    }\n\n    // This is really the only place where we want to check for a DSN and only send outcomes then\n    if (!this._dsn) {\n      DEBUG_BUILD && logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    DEBUG_BUILD && logger.log('Sending outcomes:', outcomes);\n\n    const envelope = createClientReportEnvelope(outcomes, this._options.tunnel && dsnToString(this._dsn));\n\n    // _sendEnvelope should not throw\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this._sendEnvelope(envelope);\n  }\n}\n","import type { Options } from '@sentry/types';\nimport { SDK_VERSION } from '../version';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n *\n * Note: This function is identical to `buildMetadata` in Remix and NextJS and SvelteKit.\n * We don't extract it for bundle size reasons.\n * @see https://github.com/getsentry/sentry-javascript/pull/7404\n * @see https://github.com/getsentry/sentry-javascript/pull/4196\n *\n * If you make changes to this function consider updating the others as well.\n *\n * @param options SDK options object that gets mutated\n * @param names list of package names\n */\nexport function applySdkMetadata(options: Options, name: string, names = [name], source = 'npm'): void {\n  const metadata = options._metadata || {};\n\n  if (!metadata.sdk) {\n    metadata.sdk = {\n      name: `sentry.javascript.${name}`,\n      packages: names.map(name => ({\n        name: `${source}:@sentry/${name}`,\n        version: SDK_VERSION,\n      })),\n      version: SDK_VERSION,\n    };\n  }\n\n  options._metadata = metadata;\n}\n","import type { DsnComponents, EventEnvelope, SdkMetadata, UserFeedback, UserFeedbackItem } from '@sentry/types';\nimport { createEnvelope, dsnToString } from '@sentry/utils';\n\n/**\n * Creates an envelope from a user feedback.\n */\nexport function createUserFeedbackEnvelope(\n  feedback: UserFeedback,\n  {\n    metadata,\n    tunnel,\n    dsn,\n  }: {\n    metadata: SdkMetadata | undefined;\n    tunnel: string | undefined;\n    dsn: DsnComponents | undefined;\n  },\n): EventEnvelope {\n  const headers: EventEnvelope[0] = {\n    event_id: feedback.event_id,\n    sent_at: new Date().toISOString(),\n    ...(metadata &&\n      metadata.sdk && {\n        sdk: {\n          name: metadata.sdk.name,\n          version: metadata.sdk.version,\n        },\n      }),\n    ...(!!tunnel && !!dsn && { dsn: dsnToString(dsn) }),\n  };\n  const item = createUserFeedbackEnvelopeItem(feedback);\n\n  return createEnvelope(headers, [item]);\n}\n\nfunction createUserFeedbackEnvelopeItem(feedback: UserFeedback): UserFeedbackItem {\n  const feedbackHeaders: UserFeedbackItem[0] = {\n    type: 'user_report',\n  };\n  return [feedbackHeaders, feedback];\n}\n","import type { ClientReport, ClientReportEnvelope, ClientReportItem } from '@sentry/types';\n\nimport { createEnvelope } from './envelope';\nimport { dateTimestampInSeconds } from './time';\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nexport function createClientReportEnvelope(\n  discarded_events: ClientReport['discarded_events'],\n  dsn?: string,\n  timestamp?: number,\n): ClientReportEnvelope {\n  const clientReportItem: ClientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || dateTimestampInSeconds(),\n      discarded_events,\n    },\n  ];\n  return createEnvelope<ClientReportEnvelope>(dsn ? { dsn } : {}, [clientReportItem]);\n}\n","import type {\n  Envelope,\n  EnvelopeItem,\n  EnvelopeItemType,\n  Event,\n  EventDropReason,\n  EventItem,\n  InternalBaseTransportOptions,\n  Transport,\n  TransportMakeRequestResponse,\n  TransportRequestExecutor,\n} from '@sentry/types';\nimport type { PromiseBuffer, RateLimits } from '@sentry/utils';\nimport {\n  SentryError,\n  createEnvelope,\n  envelopeItemTypeToDataCategory,\n  forEachEnvelopeItem,\n  isRateLimited,\n  logger,\n  makePromiseBuffer,\n  resolvedSyncPromise,\n  serializeEnvelope,\n  updateRateLimits,\n} from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nexport const DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nexport function createTransport(\n  options: InternalBaseTransportOptions,\n  makeRequest: TransportRequestExecutor,\n  buffer: PromiseBuffer<void | TransportMakeRequestResponse> = makePromiseBuffer(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n): Transport {\n  let rateLimits: RateLimits = {};\n  const flush = (timeout?: number): PromiseLike<boolean> => buffer.drain(timeout);\n\n  function send(envelope: Envelope): PromiseLike<void | TransportMakeRequestResponse> {\n    const filteredEnvelopeItems: EnvelopeItem[] = [];\n\n    // Drop rate limited items from envelope\n    forEachEnvelopeItem(envelope, (item, type) => {\n      const dataCategory = envelopeItemTypeToDataCategory(type);\n      if (isRateLimited(rateLimits, dataCategory)) {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', dataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return resolvedSyncPromise();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope: Envelope = createEnvelope(envelope[0], filteredEnvelopeItems as any);\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason: EventDropReason): void => {\n      forEachEnvelopeItem(filteredEnvelope, (item, type) => {\n        const event: Event | undefined = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, envelopeItemTypeToDataCategory(type), event);\n      });\n    };\n\n    const requestTask = (): PromiseLike<void | TransportMakeRequestResponse> =>\n      makeRequest({ body: serializeEnvelope(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            DEBUG_BUILD && logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = updateRateLimits(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof SentryError) {\n          DEBUG_BUILD && logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return resolvedSyncPromise();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  // We use this to identifify if the transport is the base transport\n  // TODO (v8): Remove this again as we'll no longer need it\n  send.__sentry__baseTransport__ = true;\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item: Envelope[1][number], type: EnvelopeItemType): Event | undefined {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item as EventItem)[1] : undefined;\n}\n","import { isNativeFetch, logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { WINDOW } from '../helpers';\n\nlet cachedFetchImpl: FetchImpl | undefined = undefined;\n\nexport type FetchImpl = typeof fetch;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nexport function getNativeFetchImplementation(): FetchImpl {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if (isNativeFetch(WINDOW.fetch)) {\n    return (cachedFetchImpl = WINDOW.fetch.bind(WINDOW));\n  }\n\n  const document = WINDOW.document;\n  let fetchImpl = WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      DEBUG_BUILD && logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nexport function clearCachedFetchImplementation(): void {\n  cachedFetchImpl = undefined;\n}\n","import { createTransport } from '@sentry/core';\nimport type { Transport, TransportMakeRequestResponse, TransportRequest } from '@sentry/types';\nimport { rejectedSyncPromise } from '@sentry/utils';\n\nimport type { BrowserTransportOptions } from './types';\nimport type { FetchImpl } from './utils';\nimport { clearCachedFetchImplementation, getNativeFetchImplementation } from './utils';\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nexport function makeFetchTransport(\n  options: BrowserTransportOptions,\n  nativeFetch: FetchImpl = getNativeFetchImplementation(),\n): Transport {\n  let pendingBodySize = 0;\n  let pendingCount = 0;\n\n  function makeRequest(request: TransportRequest): PromiseLike<TransportMakeRequestResponse> {\n    const requestSize = request.body.length;\n    pendingBodySize += requestSize;\n    pendingCount++;\n\n    const requestOptions: RequestInit = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch):\n      //   If the sum of contentLength and inflightKeepaliveBytes is greater than 64 kibibytes, then return a network error.\n      //   We will therefore only activate the flag when we're below that limit.\n      // There is also a limit of requests that can be open at the same time, so we also limit this to 15\n      // See https://github.com/getsentry/sentry-javascript/pull/7553 for details\n      keepalive: pendingBodySize <= 60_000 && pendingCount < 15,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => {\n        pendingBodySize -= requestSize;\n        pendingCount--;\n        return {\n          statusCode: response.status,\n          headers: {\n            'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n            'retry-after': response.headers.get('Retry-After'),\n          },\n        };\n      });\n    } catch (e) {\n      clearCachedFetchImplementation();\n      pendingBodySize -= requestSize;\n      pendingCount--;\n      return rejectedSyncPromise(e);\n    }\n  }\n\n  return createTransport(options, makeRequest);\n}\n","import { SentryError } from './error';\nimport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise } from './syncpromise';\n\nexport interface PromiseBuffer<T> {\n  // exposes the internal array so tests can assert on the state of it.\n  // XXX: this really should not be public api.\n  $: Array<PromiseLike<T>>;\n  add(taskProducer: () => PromiseLike<T>): PromiseLike<T>;\n  drain(timeout?: number): PromiseLike<boolean>;\n}\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nexport function makePromiseBuffer<T>(limit?: number): PromiseBuffer<T> {\n  const buffer: Array<PromiseLike<T>> = [];\n\n  function isReady(): boolean {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task: PromiseLike<T>): PromiseLike<T> {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer: () => PromiseLike<T>): PromiseLike<T> {\n    if (!isReady()) {\n      return rejectedSyncPromise(new SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout?: number): PromiseLike<boolean> {\n    return new SyncPromise<boolean>((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void resolvedSyncPromise(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n","// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re - written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { StackFrame, StackLineParser, StackLineParserFn } from '@sentry/types';\nimport { createStackParser } from '@sentry/utils';\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename: string, func: string, lineno?: number, colno?: number): StackFrame {\n  const frame: StackFrame = {\n    filename,\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.+?\\)(?: \\[.+\\])?|.*?) ?\\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\n// We cannot call this variable `chrome` because it can conflict with global `chrome` variable in certain environments\n// See: https://github.com/getsentry/sentry-javascript/issues/6880\nconst chromeStackParserFn: StackLineParserFn = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nexport const chromeStackLineParser: StackLineParser = [CHROME_PRIORITY, chromeStackParserFn];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:[-a-z]+)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko: StackLineParserFn = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nexport const geckoStackLineParser: StackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:[-a-z]+):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs: StackLineParserFn = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nexport const winjsStackLineParser: StackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10: StackLineParserFn = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nexport const opera10StackLineParser: StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11: StackLineParserFn = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nexport const opera11StackLineParser: StackLineParser = [OPERA11_PRIORITY, opera11];\n\nexport const defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nexport const defaultStackParser = createStackParser(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func: string, filename: string): [string, string] => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n","import { convertIntegrationFnToClass, defineIntegration } from '@sentry/core';\nimport type { Event, Exception, Integration, IntegrationClass, IntegrationFn, StackFrame } from '@sentry/types';\nimport { logger } from '@sentry/utils';\n\nimport { DEBUG_BUILD } from '../debug-build';\n\nconst INTEGRATION_NAME = 'Dedupe';\n\nconst _dedupeIntegration = (() => {\n  let previousEvent: Event | undefined;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    processEvent(currentEvent) {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      // Juuust in case something goes wrong\n      try {\n        if (_shouldDropEvent(currentEvent, previousEvent)) {\n          DEBUG_BUILD && logger.warn('Event dropped due to being a duplicate of previously captured event.');\n          return null;\n        }\n      } catch (_oO) {} // eslint-disable-line no-empty\n\n      return (previousEvent = currentEvent);\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const dedupeIntegration = defineIntegration(_dedupeIntegration);\n\n/**\n * Deduplication filter.\n * @deprecated Use `dedupeIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const Dedupe = convertIntegrationFnToClass(INTEGRATION_NAME, dedupeIntegration) as IntegrationClass<\n  Integration & { processEvent: (event: Event) => Event }\n>;\n\nfunction _shouldDropEvent(currentEvent: Event, previousEvent?: Event): boolean {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction _isSameMessageEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameExceptionEvent(currentEvent: Event, previousEvent: Event): boolean {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction _isSameStacktrace(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames as StackFrame[];\n  previousFrames = previousFrames as StackFrame[];\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction _isSameFingerprint(currentEvent: Event, previousEvent: Event): boolean {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint as string[];\n  previousFingerprint = previousFingerprint as string[];\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\nfunction _getExceptionFromEvent(event: Event): Exception | undefined {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\nfunction _getFramesFromEvent(event: Event): StackFrame[] | undefined {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-expect-error Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n","import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n","import {\n  captureException,\n  captureMessage,\n  convertIntegrationFnToClass,\n  defineIntegration,\n  getClient,\n  withScope,\n} from '@sentry/core';\nimport type { CaptureContext, Client, Integration, IntegrationClass, IntegrationFn } from '@sentry/types';\nimport {\n  CONSOLE_LEVELS,\n  GLOBAL_OBJ,\n  addConsoleInstrumentationHandler,\n  addExceptionMechanism,\n  safeJoin,\n  severityLevelFromString,\n} from '@sentry/utils';\n\ninterface CaptureConsoleOptions {\n  levels?: string[];\n}\n\nconst INTEGRATION_NAME = 'CaptureConsole';\n\nconst _captureConsoleIntegration = ((options: CaptureConsoleOptions = {}) => {\n  const levels = options.levels || CONSOLE_LEVELS;\n\n  return {\n    name: INTEGRATION_NAME,\n    // TODO v8: Remove this\n    setupOnce() {}, // eslint-disable-line @typescript-eslint/no-empty-function\n    setup(client) {\n      if (!('console' in GLOBAL_OBJ)) {\n        return;\n      }\n\n      addConsoleInstrumentationHandler(({ args, level }) => {\n        if (getClient() !== client || !levels.includes(level)) {\n          return;\n        }\n\n        consoleHandler(args, level);\n      });\n    },\n  };\n}) satisfies IntegrationFn;\n\nexport const captureConsoleIntegration = defineIntegration(_captureConsoleIntegration);\n\n/**\n * Send Console API calls as Sentry Events.\n * @deprecated Use `captureConsoleIntegration()` instead.\n */\n// eslint-disable-next-line deprecation/deprecation\nexport const CaptureConsole = convertIntegrationFnToClass(\n  INTEGRATION_NAME,\n  captureConsoleIntegration,\n) as IntegrationClass<Integration & { setup: (client: Client) => void }> & {\n  new (options?: { levels?: string[] }): Integration;\n};\n\nfunction consoleHandler(args: unknown[], level: string): void {\n  const captureContext: CaptureContext = {\n    level: severityLevelFromString(level),\n    extra: {\n      arguments: args,\n    },\n  };\n\n  withScope(scope => {\n    scope.addEventProcessor(event => {\n      event.logger = 'console';\n\n      addExceptionMechanism(event, {\n        handled: false,\n        type: 'console',\n      });\n\n      return event;\n    });\n\n    if (level === 'assert' && args[0] === false) {\n      const message = `Assertion failed: ${safeJoin(args.slice(1), ' ') || 'console.assert'}`;\n      scope.setExtra('arguments', args.slice(1));\n      captureMessage(message, captureContext);\n      return;\n    }\n\n    const error = args.find(arg => arg instanceof Error);\n    if (level === 'error' && error) {\n      captureException(error, captureContext);\n      return;\n    }\n\n    const message = safeJoin(args, ' ');\n    captureMessage(message, captureContext);\n  });\n}\n","import app from 'flarum/forum/app';\n\nimport {\n  BrowserClient,\n  defaultStackParser,\n  getCurrentHub,\n  makeFetchTransport,\n  showReportDialog,\n  Breadcrumbs,\n  GlobalHandlers,\n  InboundFilters,\n  FunctionToString,\n  LinkedErrors,\n  HttpContext,\n  TryCatch,\n  BrowserTracing,\n  Replay,\n} from '@sentry/browser';\n\nimport { CaptureConsole } from '@sentry/integrations';\n\nconst integrations = [\n  new InboundFilters(),\n  new FunctionToString(),\n  new TryCatch(),\n  new GlobalHandlers({\n    onerror: true,\n    onunhandledrejection: true,\n  }),\n  new Breadcrumbs({\n    console: true,\n    dom: true,\n    fetch: true,\n    history: true,\n    sentry: true,\n    xhr: true,\n  }),\n  new LinkedErrors({\n    key: 'cause',\n    limit: 5,\n  }),\n  new HttpContext(),\n];\n\nif (__SENTRY_TRACING__) {\n  integrations.push(new BrowserTracing());\n}\n\nif (__SENTRY_SESSION_REPLAY__) {\n  integrations.push(new Replay());\n}\n\nconst createClient = (config) =>\n  new BrowserClient({\n    dsn: config.dsn,\n\n    transport: makeFetchTransport,\n    stackParser: defaultStackParser,\n\n    // Add environment and release from config\n    environment: config.environment,\n    release: config.release,\n\n    beforeSend: (event) => {\n      event.logger = 'javascript';\n\n      if (config.scrubEmails && event.user?.email) {\n        delete event.user.email;\n      }\n\n      if (config.showFeedback && event.exception) {\n        showReportDialog({ eventId: event.event_id, user: Sentry.getUserData('name') });\n      }\n\n      // Apply tags if provided\n      if (config.tags) {\n        if (!event.tags) event.tags = {};\n        Object.assign(event.tags, config.tags);\n      }\n\n      return event;\n    },\n\n    tracesSampleRate: config.tracesSampleRate,\n    replaysSessionSampleRate: config.replaysSessionSampleRate,\n    replaysOnErrorSampleRate: config.replaysOnErrorSampleRate,\n\n    integrations: [...integrations, config.captureConsole && new CaptureConsole()].filter(Boolean),\n  });\n\nwindow.Sentry = { createClient, getCurrentHub, showReportDialog };\n\nwindow.Sentry.getUserData = (nameAttr = 'username') => {\n  /** @type {Sentry.User} */\n  let userData = {};\n\n  // Depending on when the error occurs, `app` might not be defined\n  if (app) {\n    const user = app.session?.user;\n\n    if (app.session && user && user.id() != 0) {\n      userData = {\n        ip_address: '{{auto}}',\n        id: user.id(),\n        [nameAttr]: user.username(),\n      };\n\n      if (!app.data['fof-sentry.scrub-emails']) {\n        userData.email = user.email();\n      }\n    } else if (app.data.session && app.data.session.userId != 0) {\n      userData = {\n        id: app.data.session.userId,\n      };\n    }\n  }\n\n  return userData;\n};\n\napp.initializers.add('fof/sentry', () => {\n  getCurrentHub().setUser(Sentry.getUserData());\n});\n"],"names":["_typeof","require","_regeneratorRuntime","module","exports","r","__esModule","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","this","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","delegateYield","isNodeEnv","isBrowserBundle","toString","process","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__SENTRY_BROWSER_BUNDLE__","getSDKSource","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","getter","definition","key","get","window","hmd","children","set","obj","prop","flarum","core","compat","isGlobalObj","Math","GLOBAL_OBJ","self","global","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","CONSOLE_LEVELS","originalConsoleMethods","consoleSandbox","callback","console","wrappedFuncs","wrappedLevels","level","originalConsoleMethod","enabled","logger","enable","disable","isEnabled","_extends","assign","bind","arguments","apply","objectToString","isError","wat","isInstanceOf","isBuiltin","className","isErrorEvent","isDOMError","isString","isParameterizedString","isPrimitive","isPlainObject","isEvent","Event","isThenable","Boolean","base","_e","isVueViewModel","__isVue","_isVue","WINDOW","htmlTreeAsString","elem","options","nextStr","currentElem","out","height","len","keyAttrs","Array","isArray","maxStringLength","_htmlElementAsString","separator","parentNode","reverse","join","_oO","el","classes","attr","tagName","HTMLElement","dataset","toLowerCase","keyAttrPairs","filter","keyAttr","getAttribute","map","keyAttrPair","split","allowedAttrs","truncate","str","max","safeJoin","input","delimiter","output","String","stringMatchesSomePattern","testString","patterns","requireExactStringMatch","some","pattern","test","includes","isMatchingPattern","fill","source","replacementFactory","original","wrapped","markFunctionWrapped","addNonEnumerableProperty","o_O","proto","getOriginalFunction","func","__sentry_original__","convertToPlainObject","message","stack","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","CustomEvent","detail","Element","extractedProps","property","dropUndefinedKeys","inputValue","_dropUndefinedKeys","Map","memoizationMap","isPojo","memoVal","returnValue","_i","_Object$keys","item","uuid4","crypto","msCrypto","getRandomByte","random","randomUUID","replace","getRandomValues","typedArray","Uint8Array","_","getFirstException","event","exception","getEventDescription","eventId","event_id","firstException","addExceptionTypeValue","addExceptionMechanism","newMechanism","currentMechanism","mechanism","handled","mergedData","data","checkOrSetAlreadyCaught","__sentry_captured__","err","States","resolvedSyncPromise","SyncPromise","rejectedSyncPromise","reason","reject","executor","__init","__init2","__init3","__init4","_state","PENDING","_handlers","_resolve","_reject","_proto","onfulfilled","onrejected","_this","result","_executeHandlers","val","onfinally","_this2","isRejected","_this3","_setResult","RESOLVED","_this4","REJECTED","_this5","state","_value","_this6","cachedHandlers","handler","getGlobalEventProcessors","addGlobalEventProcessor","notifyEventProcessors","processors","hint","index","processor","final","dateTimestampInSeconds","Date","now","timestampInSeconds","performance","approxStartingTimeOrigin","timeOrigin","createUnixTimestampInSecondsFunc","browserPerformanceTimeOrigin","threshold","performanceNow","dateNow","timeOriginDelta","abs","timeOriginIsReliable","navigationStart","timing","navigationStartDelta","DEFAULT_ENVIRONMENT","updateSession","session","context","user","ipAddress","ip_address","did","email","username","timestamp","abnormal_mechanism","ignoreDuration","sid","init","started","duration","release","environment","userAgent","errors","status","WEBPACK_ERROR_REGEXP","STRIP_FRAME_REGEXP","defaultFunctionName","getFunctionName","fn","normalize","depth","maxProperties","visit","ERROR","normalizeToSize","object","maxSize","normalized","encodeURI","utf8Length","JSON","stringify","memo","hasWeakSet","inner","WeakSet","has","add","splice","_memo","memoize","unmemoize","stringified","_events","document","isSyntheticEvent","objName","getConstructorName","stringifyValue","startsWith","remainingDepth","valueWithToJSON","toJSON","numAdded","visitable","visitKey","visitValue","spanToTraceContext","span","_span$spanContext","spanContext","span_id","spanId","trace_id","traceId","_spanToJSON","spanToJSON","op","parent_span_id","tags","origin","getSpanJSON","spanIsSpanClass","prepareEvent","scope","client","isolationScope","_options$normalizeDep","normalizeDepth","_options$normalizeMax","normalizeMaxBreadth","prepared","integrations","dist","_options$maxValueLeng","maxValueLength","request","url","applyClientOptions","integrationNames","sdk","concat","applyIntegrationsMetadata","stackParser","debugIdStackFramesCache","debugIdMap","_sentryDebugIds","cachedDebugIdStackFrameCache","debugIdStackParserCache","filenameDebugIdMap","reduce","acc","debugIdStackTrace","parsedStack","cachedParsedStack","stackFrame","filename","stacktrace","frames","frame","debug_id","applyDebugIds","finalScope","captureContext","clone","Scope","update","getFinalScope","clientEventProcessors","getEventProcessors","globalScope","getScopeData","mergeScopeData","attachments","applyScopeDataToEvent","eventProcessors","evt","abs_path","debug_meta","images","code_file","applyDebugMeta","maxBreadth","breadcrumbs","b","contexts","extra","trace","spans","normalizeEvent","WeakMap","captureContextKeys","captureException","getCurrentHub","hintIsScopeOrFunction","hintIsScopeContext","parseEventHintOrCaptureContext","captureEvent","addBreadcrumb","breadcrumb","getClient","getCurrentScope","getScope","getRootSpan","transaction","getDynamicSamplingContextFromClient","getOptions","public_key","getDsn","publicKey","user_segment","getUser","segment","dsc","emit","getDynamicSamplingContextFromSpan","txn","v7FrozenDsc","_frozenDynamicSamplingContext","_txn$metadata","metadata","maybeSampleRate","sampleRate","sample_rate","jsonSpan","description","sampled","traceFlags","spanIsSampled","fingerprint","sdkProcessingMetadata","transactionName","cleanedExtra","cleanedTags","cleanedUser","cleanedContexts","applyDataToEvent","rootSpan","dynamicSamplingContext","applySpanToEvent","maybeArray","applyFingerprintToEvent","mergedBreadcrumbs","applyBreadcrumbsToEvent","applySdkMetadataToEvent","mergeData","propagationContext","mergeAndOverwriteScopeData","mergeVal","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_propagationContext","generatePropagationContext","newScope","_level","_span","_session","_transactionName","_fingerprint","_requestSession","_client","setClient","addScopeListener","addEventProcessor","setUser","_notifyScopeListeners","getRequestSession","setRequestSession","requestSession","setTags","setTag","_extends2","setExtras","extras","setExtra","_extends3","setFingerprint","setLevel","setTransactionName","setContext","setSpan","getSpan","getTransaction","setSession","getSession","scopeToMerge","scopeData","scopeContext","clear","maxBreadcrumbs","maxCrumbs","mergedBreadcrumb","getLastBreadcrumb","clearBreadcrumbs","addAttachment","attachment","getAttachments","clearAttachments","applyToEvent","additionalEventProcessors","setSDKProcessingMetadata","newData","setPropagationContext","getPropagationContext","warn","syntheticException","originalException","captureMessage","substring","SDK_VERSION","API_VERSION","parseFloat","Hub","_version","assignedScope","assignedIsolationScope","_stack","bindClient","_isolationScope","isOlderThan","version","top","getStackTop","setupIntegrations","pushScope","getStack","popScope","withScope","maybePromiseResult","res","getIsolationScope","_lastEventId","lastEventId","_this$getStackTop","_ref","_ref$beforeBreadcrumb","beforeBreadcrumb","_ref$maxBreadcrumbs","finalBreadcrumb","configureScope","_this$getStackTop2","run","oldHub","makeMain","getIntegration","integration","startTransaction","customSamplingContext","_callExtensionMethod","traceHeaders","captureSession","endSession","_sendSessionUpdate","closeSession","startSession","_this$getStackTop3","_ref2","_ref2$environment","navigator","startingTime","toISOString","attrs","user_agent","sessionToJSON","makeSession","currentSession","shouldSendDefaultPii","sendDefaultPii","_this$getStackTop4","sentry","getMainCarrier","extensions","_len","args","_key","hub","registry","getHubFromCarrier","setHubOnCarrier","acs","carrier","getGlobalHub","installedIntegrations","afterSetupIntegrations","_step","_iterator","_createForOfIteratorHelperLoose","afterAllSetup","setupIntegration","integrationIndex","indexOf","setupOnce","setup","on","preprocessEvent","processEvent","convertIntegrationFnToClass","originalFunctionToString","DEFAULT_IGNORE_ERRORS","DEFAULT_IGNORE_TRANSACTIONS","INTEGRATION_NAME","inboundFiltersIntegration","_hint","clientOptions","mergedOptions","internalOptions","allowUrls","denyUrls","ignoreErrors","disableErrorDefaults","ignoreTransactions","disableTransactionDefaults","ignoreInternal","_mergeOptions","_isSentryError","lastException","possibleMessages","_getPossibleEventMessages","_isIgnoredError","_isIgnoredTransaction","_getEventFilterUrl","_isDeniedUrl","_isAllowedUrl","_shouldDropEvent","InboundFilters","_getLastValidUrl","oO","SETUP_CLIENTS","functionToStringIntegration","originalFunction","FunctionToString","ignoreOnError","shouldIgnoreOnError","before","wrapper","__sentry_wrapped__","sentryWrapped","wrappedArguments","ex","setTimeout","rest","getOwnPropertyDescriptor","DEFAULT_EVENT_TARGET","browserApiErrorsIntegration","_options","XMLHttpRequest","eventTarget","requestAnimationFrame","setInterval","_wrapTimeFunction","_wrapRAF","_wrapXHR","eventTargetOption","_wrapEventTarget","TryCatch","originalCallback","function","originalSend","xhr","wrapOptions","_len2","_key2","globalObject","eventName","handleEvent","originalRemoveEventListener","wrappedEventHandler","originalEventHandler","handlers","instrumented","addHandler","maybeInstrument","instrumentFn","triggerHandlers","typeHandlers","_oldOnErrorHandler","instrumentError","onerror","msg","line","column","error","__SENTRY_LOADER__","__SENTRY_INSTRUMENTED__","_oldOnUnhandledRejectionHandler","instrumentUnhandledRejection","onunhandledrejection","exceptionFromError","parseStackFrames","extractMessage","eventFromError","popSize","framesToPop","reactMinifiedRegexp","getPopSize","eventFromUnknownInput","attachStacktrace","isUnhandledRejection","domException","eventFromString","code","getNonErrorObjectExceptionValue","__serialized__","eventFromPlainObject","synthetic","__sentry_template_string__","__sentry_template_values__","logentry","params","maxLength","sort","includedKeys","serialized","extractExceptionKeysForMessage","captureType","getObjectClassName","globalHandlersIntegration","stackTraceLimit","_getOptions","groups","match","_enhanceEventWithInitialFrame","_eventFromIncompleteOnError","_installGlobalOnErrorHandler","_getOptions2","e2","_getUnhandledRejectionError","_installGlobalOnUnhandledRejectionHandler","GlobalHandlers","ev","ev0","ev0s","ev0sf","colno","parseInt","lineno","location","href","getLocationHref","in_app","instrumentConsole","log","debounceTimerID","lastCapturedEventType","lastCapturedEventTargetId","addClickKeypressInstrumentationHandler","instrumentDOM","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","addEventListener","originalAddEventListener","listener","__sentry_instrumentation_handlers__","handlerForType","refCount","globalListener","getEventTarget","eventType","isContentEditable","shouldSkipDOMEvent","_sentryId","isSimilarToLastCapturedEvent","clearTimeout","SENTRY_XHR_DATA_KEY","addXhrInstrumentationHandler","instrumentXHR","xhrproto","originalOpen","startTimestamp","toUpperCase","parseUrl","request_headers","__sentry_own_request__","onreadystatechangeHandler","xhrInfo","readyState","status_code","endTimestamp","onreadystatechange","readyStateArgs","_len3","setRequestHeaderArgs","_key3","header","sentryXhrData","_len4","_key4","body","isNativeFetch","addFetchInstrumentationHandler","instrumentFetch","EdgeRuntime","Headers","Request","Response","supportsFetch","fetch","doc","createElement","sandbox","hidden","head","appendChild","contentWindow","removeChild","supportsNativeFetch","originalFetch","_parseFetchArgs","fetchArgs","getUrlFromResource","hasProp","parseFetchArgs","handlerData","fetchData","response","resource","lastHref","addHistoryInstrumentationHandler","instrumentHistory","isChromePackagedApp","chromeVar","chrome","app","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","to","from","historyReplacementFunction","originalHistoryFunction","validSeverityLevels","query","fragment","host","path","protocol","search","hash","relative","breadcrumbsIntegration","dom","category","_getConsoleBreadcrumbHandler","componentName","serializeAttribute","element","_isEvent","getComponentName","_getDomBreadcrumbHandler","_getXhrBreadcrumbHandler","_getFetchBreadcrumbHandler","parsedLoc","parsedFrom","parsedTo","_getHistoryBreadcrumbHandler","_getSentryBreadcrumbHandler","Breadcrumbs","applyAggregateErrorsToEvent","exceptionFromErrorImplementation","parser","maxValueLimit","limit","exceptions","aggregateExceptionsFromError","prevExceptions","exceptionId","newExceptions","applyExceptionGroupFieldsForParentException","newException","newExceptionId","applyExceptionGroupFieldsForChildException","childError","is_exception_group","exception_id","parentId","parent_id","linkedErrorsIntegration","LinkedErrors","httpContextIntegration","referrer","headers","Referer","HttpContext","asyncGeneratorStep","_asyncToGenerator","_next","_throw","toPropertyKey","toPrimitive","_defineProperties","_createClass","_setPrototypeOf","_inheritsLoose","_getPrototypeOf","_isNativeReflectConstruct","valueOf","Reflect","construct","_wrapNativeSuper","isNativeFunction","Wrapper","isNativeReflectConstruct","_optionalChain","ops","lastAccessLHS","removeTrailingSlash","DSN_REGEX","dsnToString","dsn","withPassword","pass","port","projectId","dsnFromComponents","components","makeDsn","exec","_match$slice","_match$slice$","_match$slice$2","projectMatch","dsnFromString","createEnvelope","items","forEachEnvelopeItem","envelope","envelopeItem","encodeUTF8","textEncoder","TextEncoder","encode","serializeEnvelope","envHeaders","parts","append","_step2","_iterator2","itemHeaders","payload","stringifiedPayload","buffers","_step3","totalLength","buf","merged","offset","_iterator3","buffer","concatBuffers","createAttachmentEnvelopeItem","content_type","contentType","attachment_type","attachmentType","ITEM_TYPE_TO_DATA_CATEGORY_MAP","sessions","client_report","user_report","profile","replay_event","replay_recording","check_in","feedback","statsd","envelopeItemTypeToDataCategory","getSdkMetadataForEnvelopeHeader","metadataOrEvent","_metadataOrEvent$sdk","createEventEnvelopeHeaders","sdkInfo","tunnel","sent_at","SentryError","_Error","logLevel","getBaseApiEndpoint","getEnvelopeEndpointWithUrlEncodedAuth","tunnelOrOptions","_metadata","_getIngestEndpoint","sentry_key","sentry_version","sentry_client","encodeURIComponent","_encodedAuth","createMetricEnvelope","metricBucketItems","tagEntries","entries","maybeTags","unit","metric","metricType","serializeMetricBuckets","createMetricEnvelopeItem","BaseClient","_integrations","_integrationsInitialized","_numProcessing","_outcomes","_hooks","_dsn","_transport","transport","recordDroppedEvent","transportOptions","_process","eventFromException","_captureEvent","eventMessage","promisedEvent","eventFromMessage","capturedSpanScope","sendSession","getSdkMetadata","getTransport","flush","timeout","metricsAggregator","_isClientDoneProcessing","clientFinished","transportFlushed","close","eventProcessor","forceInitialize","_isEnabled","_setupIntegrations","getIntegrationById","integrationId","getIntegrationByName","integrationName","addIntegration","isAlreadyInstalled","sendEvent","newItem","env","packages","enhanceEventWithSdkInfo","envelopeHeaders","createEventEnvelope","promise","_sendEnvelope","sendResponse","createSessionEnvelope","eventOrCount","sendClientReports","count","captureAggregateMetrics","metricsEnvelope","hook","_updateSessionFromEvent","crashed","errored","sessionNonTerminal","Number","ticked","interval","clearInterval","_prepareEvent","parentSpanId","_processEvent","finalEvent","_this7","isTransaction","isTransactionEvent","beforeSendLabel","dataCategory","capturedSpanIsolationScope","__sentry__","beforeSend","beforeSendTransaction","spanCountBefore","spanCountBeforeProcessing","processBeforeSend","beforeSendResult","invalidValueError","_validateBeforeSendResult","processedEvent","spanCount","droppedSpanCount","transactionInfo","transaction_info","_this8","send","_clearOutcomes","outcomes","_key$split","quantity","isRateLimited","limits","all","disabledUntil","updateRateLimits","statusCode","updatedRateLimits","rateLimitHeader","retryAfterHeader","trim","_limit$split","retryAfter","categories","namespaces","headerDelay","delay","headerDate","parse","parseRetryAfterHeader","isBrowser","getNavigationEntry","__WEB_VITALS_POLYFILL__","getEntriesByType","navigation","navigationEntry","entryType","startTime","getNavigationEntryFromPerformanceTiming","getActivationStart","navEntry","activationStart","onHidden","cb","once","onHiddenOrPageHide","visibilityState","removeEventListener","firstHiddenTime","observe","opts","PerformanceObserver","supportedEntryTypes","po","list","getEntries","buffered","reportedMetricIDs","onLCP","onReport","navigationType","report","visibilityWatcher","prerendering","Infinity","timeStamp","rating","delta","floor","handleEntries","lastEntry","prevValue","forceReport","bindReporter","stopListening","takeRecords","disconnect","capture","_previousLcp","instrumentLcp","getCleanupCallback","NodeType$1","REPLAY_SESSION_KEY","UNABLE_TO_SEND_REPLAY","NETWORK_BODY_MAX_SIZE","CONSOLE_ARG_MAX_SIZE","REPLAY_MAX_EVENT_BUFFER_SIZE","MAX_REPLAY_DURATION","_optionalChain$5","_value2","isShadowRoot","_2","shadowRoot","isNativeShadowDom","stringifyStylesheet","rules","cssRules","cssText","stringifyRule","rule","importStringified","regex","isCSSImportRule","styleSheet","statement","layerName","supportsText","media","mediaText","escapeImportStatement","isCSSStyleRule","selectorText","NodeType","Mirror","idNodeMap","nodeMetaMap","getId","lhs","_3","getMeta","_4","_5","getNode","getIds","removeNodeFromMap","childNodes","childNode","hasNode","node","meta","oldNode","shouldMaskInput","maskInputOptions","maskInputValue","isMasked","maskInputFn","text","repeat","ORIGINAL_ATTRIBUTE_NAME","getInputType","hasAttribute","getInputValue","canvasService","canvasCtx","_id","tagNameRegex","RegExp","genId","URL_IN_CSS_REF","URL_PROTOCOL_MATCH","URL_WWW_MATCH","DATA_URI","absoluteToStylesheet","quote1","path1","quote2","path2","path3","filePath","maybeQuote","part","SRCSET_NOT_SPACES","SRCSET_COMMAS_OR_SPACES","absoluteToDoc","attributeValue","isSVGElement","ownerSVGElement","getHref","transformAttribute","maskAttributeFn","pos","collectCharacters","regEx","chars","descriptorsStr","inParens","getAbsoluteSrcsetString","ignoreAttribute","distanceToMatch","matchPredicate","distance","nodeType","ELEMENT_NODE","createMatchPredicate","selector","matches","eIndex","classList","elementClassMatchesRegex","needMaskingText","maskTextClass","maskTextSelector","unmaskTextClass","unmaskTextSelector","maskAllText","parentElement","autocomplete","maskDistance","unmaskDistance","lowerIfExists","maybeAttr","serializeNodeWithId","mirror","blockClass","blockSelector","unblockSelector","_options$skipChild","skipChild","_options$inlineStyles","inlineStylesheet","_options$maskInputOpt3","maskTextFn","slimDOMOptions","_options$dataURLOptio3","dataURLOptions","_options$inlineImages","inlineImages","_options$recordCanvas","recordCanvas","onSerialize","onIframeLoad","_options$iframeLoadTi","iframeLoadTimeout","onStylesheetLoad","_options$stylesheetLo","stylesheetLoadTimeout","_options$keepIframeSr","keepIframeSrcFn","_options$newlyAddedEl3","newlyAddedElement","_options$preserveWhit","preserveWhiteSpace","_serializedNode","_options$maskInputOpt","_options$dataURLOptio","_options$newlyAddedEl","rootId","docId","getRootId","DOCUMENT_NODE","compatMode","Document","DOCUMENT_TYPE_NODE","DocumentType","publicId","systemId","isCustomElement","_options$maskInputOpt2","_options$dataURLOptio2","_options$newlyAddedEl2","needBlock","contains","_isBlockedElement","HTMLFormElement","processedTagName","getValidTagName","attributes","stylesheet","styleSheets","find","rel","_cssText","sheet","innerText","textContent","checked","forceMask","selected","__context","canvas","ctx","getContext","width","getImageData","originalGetImageData","Uint32Array","min","pixel","is2DCanvasBlank","rr_dataURL","toDataURL","quality","canvasDataURL","blankCanvas","image","oldValue","crossOrigin","recordInlineImage","naturalWidth","naturalHeight","drawImage","currentSrc","removeAttribute","rr_mediaState","paused","rr_mediaCurrentTime","currentTime","scrollLeft","rr_scrollLeft","scrollTop","rr_scrollTop","_n$getBoundingClientR","getBoundingClientRect","rr_width","rr_height","src","contentDocument","rr_src","customElements","isSVG","isCustom","serializeElementNode","TEXT_NODE","parentTagName","isStyle","isScript","isTextarea","nextSibling","previousSibling","_6","_7","_8","textarea","Text","serializeTextNode","CDATA_SECTION_NODE","CDATA","COMMENT_NODE","Comment","serializeNode","sn","comment","script","as","endsWith","headFavicon","headMetaDescKeywords","headMetaSocial","headMetaRobots","headMetaHttpEquiv","headMetaAuthorship","headMetaVerification","slimDOMExcluded","serializedNode","recordChild","isShadowHost","headWhitespace","bypassOptions","_Array$from","serializedChildNode","isElement$1","_i2","_Array$from2","isShadow","iframeEl","win","fired","blankUrl","timer","onceIframeLoaded","iframeDoc","serializedIframeNode","link","styleSheetLoadTimeout","styleSheetLoaded","onceStylesheetLoaded","serializedLinkNode","_optionalChain$4","_value3","passive","DEPARTED_MIRROR_ACCESS_WARNING","_mirror","throttle$1","wait","previous","leading","remaining","getImplementation","clearTimeout$1","trailing","setTimeout$1","hookSetter","isRevoked","patch","replacement","defineProperties","__rrweb_original__","Proxy","receiver","nowTimestamp","getWindowScroll","left","scrollingElement","pageXOffset","documentElement","pageYOffset","_9","_10","_11","_12","_13","_14","getWindowHeight","innerHeight","clientHeight","getWindowWidth","innerWidth","clientWidth","closestElementOfNode","isBlocked","checkAncestors","blockedPredicate","isUnblocked","blockDistance","unblockDistance","isIgnored","isAncestorRemoved","legacy_isTouchEvent","changedTouches","isSerializedIframe","nodeName","isSerializedStylesheet","hasShadowRoot","_18","getTime","StyleSheetMirror","styleIDMap","idStyleMap","_proto2","newId","getStyle","generateId","getShadowHost","shadowHost","_19","getRootNode","_20","_21","Node","DOCUMENT_FRAGMENT_NODE","inDom","ownerDocument","rootShadowHost","getRootShadowHost","shadowHostInDom","cachedImplementations","cached","impl","EventType","EventType2","IncrementalSource","IncrementalSource2","MouseInteractions","MouseInteractions2","PointerTypes","PointerTypes2","_optionalChain$3","_value4","_len5","_key5","isNodeInLinkedList","errorHandler","DoubleLinkedList","tail","_proto3","position","current","addNode","__ln","removeNode","moveKey","MutationBuffer","frozen","locked","texts","attributeMap","removes","mapRemoves","movedMap","addedSet","Set","movedSet","droppedSet","processMutations","mutations","processMutation","adds","addedIds","addList","getNextId","ns","nextId","pushAdd","currentN","iframeManager","addIframe","stylesheetManager","trackLinkElement","shadowDomManager","addShadowRoot","iframe","childSn","attachIframe","observeAttachShadow","attachLinkElement","shift","isParentRemoved","isAncestorInSet","candidate","tailNode","_node","unhandledNode","attribute","style","diffAsStr","styleDiff","unchangedAsStr","_unchangedStyles","mutationCb","attributeName","isInputMasked","setAttribute","unattachedDoc","implementation","createHTMLDocument","old","_i3","_Array$from3","pname","newValue","getPropertyValue","newPriority","getPropertyPriority","_i4","_Array$from4","addedNodes","genAdds","removedNodes","nodeId","isSerialized","deepDelete","processedNodeManager","inOtherBuffer","targetId","childN","_proto4","freeze","canvasManager","unfreeze","isFrozen","lock","unlock","addsSet","_isParentRemoved","size","_isAncestorInSet","registerErrorHandler","unregisterErrorHandler","callbackWrapper","_optionalChain$2","_value6","_len6","_key6","mutationBuffers","composedPath","initMutationObserver","rootEl","mutationBuffer","mutationObserverCtor","MutationObserver","__rrMutationObserver","angularZoneSymbol","Zone","__symbol__","observer","onMutation","attributeOldValue","characterData","characterDataOldValue","childList","subtree","initScrollObserver","_ref7","scrollCb","sampling","defaultView","scrollLeftTop","scroll","INPUT_TAGS","lastInputValueMap","initInputObserver","_ref0","inputCb","ignoreClass","ignoreSelector","userTriggeredOnInput","eventHandler","userTriggered","isTrusted","isChecked","cbWithDedup","querySelectorAll","lastInputValue","currentWindow","propertyDescriptor","HTMLInputElement","hookProperties","HTMLSelectElement","HTMLTextAreaElement","HTMLOptionElement","getNestedCSSRulePositions","childRule","hasNestedCSSRule","parentRule","CSSGroupingRule","CSSMediaRule","CSSSupportsRule","CSSConditionRule","parentStyleSheet","recurse","getIdAndStyleId","styleMirror","styleId","ownerNode","initAdoptedStyleSheetObserver","_ref13","hostId","patchTarget","ShadowRoot","originalPropertyDescriptor","sheets","_15","_16","adoptStyleSheets","initObservers","_ref9","viewportResizeCb","lastH","lastW","_step4","mutationObserver","mousemoveHandler","_ref4","mousemoveCb","mousemove","timeBaseline","callbackThreshold","mousemoveCallback","positions","wrappedCb","totalOffset","timeOffset","updatePosition","_ref5","clientX","clientY","DragEvent","Drag","MouseEvent","MouseMove","TouchMove","initMoveObserver","mouseInteractionHandler","_ref6","mouseInteractionCb","mouseInteraction","disableMap","currentPointerType","eventKey","pointerType","thisEventKey","Mouse","Touch","Pen","MouseDown","MouseUp","Click","getHandler","PointerEvent","TouchStart","TouchEnd","initMouseInteractionObserver","scrollHandler","viewportResizeHandler","inputHandler","mediaInteractionHandler","_ref16","mediaInteractionCb","volume","muted","playbackRate","initMediaInteractionObserver","styleSheetObserver","_ref1","_ref10","styleSheetRuleCb","CSSStyleSheet","insertRule","thisArg","argumentsList","_getIdAndStyleId","replaceSync","deleteRule","_getIdAndStyleId2","_getIdAndStyleId3","_getIdAndStyleId4","supportedNestedCSSRuleTypes","canMonkeyPatchNestedCSSRule","unmodifiedFunctions","_ref11","typeKey","_getIdAndStyleId5","_getIdAndStyleId6","_ref12","initStyleSheetObserver","adoptedStyleSheetObserver","styleDeclarationObserver","_ref14","_ref15","styleDeclarationCb","ignoreCSSAttributes","setProperty","CSSStyleDeclaration","priority","_getIdAndStyleId7","_17","removeProperty","_getIdAndStyleId8","remove","initStyleDeclarationObserver","fontObserver","collectFonts","_ref17","fontCb","fontMap","originalFontFace","FontFace","family","descriptors","fontFace","fontSource","restoreHandler","fonts","initFontObserver","selectionObserver","param","selectionCb","collapsed","updateSelection","selection","getSelection","isCollapsed","ranges","rangeCount","range","getRangeAt","startContainer","startOffset","endContainer","endOffset","start","end","initSelectionObserver","customElementObserver","_ref18","customElementCb","define","initCustomElementObserver","pluginHandlers","_iterator4","plugins","plugin","CrossOriginIframeMirror","generateIdFn","iframeIdToRemoteIdMap","iframeRemoteIdToIdMap","_proto5","remoteId","idToRemoteMap","remoteToIdMap","idToRemoteIdMap","getIdToRemoteIdMap","remoteIdToIdMap","getRemoteIdToIdMap","getRemoteId","getRemoteIds","ids","_this9","_optionalChain$1","_value7","_len7","_key7","wrappedEmit","_takeFullSnapshot","IframeManagerNoop","crossOriginIframeMirror","crossOriginIframeRootIdMap","_proto6","addLoadListener","IframeManager","iframes","crossOriginIframeMap","recordCrossOriginIframes","crossOriginIframeStyleMirror","handleMessage","_proto7","loadListener","isAttachIframe","adoptedStyleSheets","crossOriginMessageEvent","transformedEvent","transformCrossOriginEvent","isCheckout","_this0","FullSnapshot","replaceIdOnNode","patchRootIdOnNode","IncrementalSnapshot","Mutation","Meta","Load","DomContentLoaded","Plugin","Custom","replaceIds","ViewportResize","MediaInteraction","MouseInteraction","Scroll","CanvasMutation","Input","StyleSheetRule","StyleDeclaration","replaceStyleIds","Font","Selection","AdoptedStyleSheet","styles","iframeMirror","_step5","_iterator5","_this1","child","_this10","ShadowDomManagerNoop","_proto8","ShadowDomManager","shadowDoms","restoreHandlers","_proto9","patchAttachShadow","_this11","iframeElement","manager","option","CanvasManagerNoop","_proto0","snapshot","StylesheetManager","trackedLinkElements","adoptedStyleSheetCb","_proto1","linkEl","trackStylesheetInLinkElement","_step6","adoptedStyleSheetData","styleIds","_iterator6","CSSRule","ProcessedNodeManager","nodeMap","loop","periodicallyClear","_proto10","_this12","onRequestAnimationFrame","thisBuffer","destroy","record","checkoutEveryNms","checkoutEveryNth","_options$blockClass","_options$blockSelecto","_options$unblockSelec","_options$ignoreClass","_options$ignoreSelect","_options$maskAllText","_options$maskTextClas","_options$unmaskTextCl","_options$maskTextSele","_options$unmaskTextSe","_options$inlineStyles2","maskAllInputs","_maskInputOptions","_slimDOMOptions","_options$maxCanvasSiz","maxCanvasSize","packFn","_options$sampling","_options$dataURLOptio4","mousemoveWait","_options$recordCanvas2","_options$recordCrossO","_options$recordAfter","recordAfter","_options$userTriggere","_options$collectFonts","_options$inlineImages2","_options$keepIframeSr2","_options$ignoreCSSAtt","getCanvasManager","inEmittingFrame","parent","passEmitsToParent","lastFullSnapshotEvent","color","date","month","number","tel","time","week","select","radio","checkbox","NodeList","DOMTokenList","polyfill","incrementalSnapshotCount","_step7","_iterator7","postMessage","exceedCount","exceedTime","takeFullSnapshot","_step8","wrappedMutationEmit","wrappedScrollEmit","wrappedCanvasMutationEmit","__RRWEB_EXCLUDE_IFRAME__","_iterator8","getMirror","nodeMirror","getCanvasManagerFn","_getCanvasManager","__RRWEB_EXCLUDE_SHADOW_DOM__","_ref3","_ref3$mirror","_ref3$blockClass","_ref3$blockSelector","_ref3$unblockSelector","_ref3$maskAllText","_ref3$maskTextClass","_ref3$unmaskTextClass","_ref3$maskTextSelecto","_ref3$unmaskTextSelec","_ref3$inlineStyleshee","_ref3$inlineImages","_ref3$recordCanvas","_ref3$maskAllInputs","_ref3$slimDOM","slimDOM","_ref3$keepIframeSrcFn","initialOffset","canvasMutationCb","CustomElement","timestampToMs","timestampToS","addBreadcrumbEvent","replay","triggerUserActivity","checkAndHandleExpiredSession","addUpdate","throttledAddEvent","tag","getClosestInteractive","closest","getClickTargetNode","getTargetNode","isEventWithTarget","ClickDetector","slowClickConfig","_addBreadcrumbEvent","_lastMutation","_lastScroll","_clicks","_timeout","_threshold","_scollTimeout","scrollTimeout","_replay","_ignoreSelector","_proto11","addListeners","_this13","cleanupWindowOpen","nowInSeconds","originalWindowOpen","_len8","_key8","_teardown","removeListeners","_checkClickTimeout","handleClick","SLOW_CLICK_TAGS","ignoreElement","isClickBreadcrumb","newClick","clickBreadcrumb","clickCount","click","_scheduleCheckClicks","registerMutation","registerScroll","registerClick","_handleMultiClick","_getClicks","_checkClicks","_this14","timedOutClicks","mutationAfter","scrollAfter","_i5","_timedOutClicks","_generateBreadcrumbs","hadScroll","hadMutation","isSlowClick","timeAfterClickMs","endReason","route","getCurrentRoute","_this15","createBreadcrumb","ATTRIBUTES_TO_RECORD","getAttributesToRecord","normalizedKey","getBaseDomBreadcrumb","isElement","ENTRY_TYPES","entry","initiatorType","responseEnd","decodedBodySize","encodedBodySize","responseStatus","transferSize","getAbsoluteTime","paint","domComplete","domContentLoadedEventStart","domContentLoadedEventEnd","domInteractive","loadEventStart","loadEventEnd","redirectCount","createPerformanceEntry","setupPerformanceObserver","addPerformanceEntry","performanceEntries","onEntries","_ref19","stopOnCallback","clearCallbacks","durationThreshold","instrumentPerformanceObserver","addPerformanceInstrumentationHandler","previousValue","addMetricObserver","_ref20","replayPerformanceEntries","getLargestContentfulPaint","clearCallback","EventBufferSizeExceededError","EventBufferArray","events","_totalSize","hasCheckout","_proto12","addEvent","_addEvent2","_callee","eventSize","_context2","_x","_this16","eventsRet","getEarliestTimestamp","WorkerHandler","worker","_worker","_proto13","ensureReady","_this17","_ensureReadyPromise","_ref21","success","terminate","_this18","_getAndIncrementId","_ref22","EventBufferCompressionWorker","_earliestTimestamp","_proto14","_sendEventToWorker","_finishRequest","_finishRequest2","_callee2","_context3","EventBufferProxy","_fallback","_compression","_used","_ensureWorkerIsLoadedPromise","_ensureWorkerIsLoaded","_proto15","_finish","_callee3","_context4","ensureWorkerIsLoaded","_ensureWorkerIsLoaded2","_callee4","_context5","t0","_switchToCompressionWorker","_switchToCompressionWorker2","_callee5","_this$_fallback","addEventPromises","_iterator9","_step9","_context6","hasEvents","hasSessionStorage","sessionStorage","isSampled","lastActivity","segmentId","previousSessionId","saveSession","setItem","createSession","_ref24","_temp","sessionSampleRate","allowBuffering","_ref24$stickySession","stickySession","getSessionSampleType","isExpired","initialTime","expiry","targetTime","isSessionExpired","_ref26","maxReplayDuration","sessionIdleExpire","_ref26$targetTime","shouldRefreshSession","_ref27","loadOrCreateSession","_ref28","sessionOptions","traceInternals","existingSession","sessionStringFromStorage","getItem","fetchSession","addEventSync","shouldAddEvent","_addEvent","_x2","_x3","_x4","_addEvent3","_callee1","replayOptions","eventAfterPossibleCallback","_context10","eventBuffer","recordingMode","maybeApplyCallback","beforeAddRecordingEvent","isPaused","timestampInMs","timeouts","sessionIdlePause","initialTimestamp","_experiments","isCustomEvent","isFeedbackEvent","handleAfterSendEvent","enforceStatusCode","__sentry__baseTransport__","isBaseTransportSend","replayContext","traceIds","handleTransactionEvent","errorIds","replayId","beforeErrorSampling","sendBufferedReplayOrFlush","handleErrorEvent","createPerformanceSpans","_ref29","addNetworkBreadcrumb","hubOrClient","isHub","checkDsn","checkTunnel","getBodySize","URLSearchParams","FormData","formDataStr","_serializeFormData","Blob","ArrayBuffer","byteLength","parseContentLengthHeader","getBodyString","mergeWarning","info","warning","_meta","warnings","newMeta","existingWarnings","makeNetworkReplayBreadcrumb","buildSkippedNetworkRequestOrResponse","bodySize","buildNetworkRequestOrResponse","_normalizeNetworkBody","first","last","exceedsSizeLimit","isProbablyJson","truncatedBody","e3","normalizeNetworkBody","normalizedBody","getAllowedHeaders","allowedHeaders","filteredHeaders","formData","urlMatches","urls","fullUrl","baseURI","fixedUrl","URL","getFullUrl","_captureFetchBreadcrumbToReplay","_callee10","_context11","_prepareFetchData","_x8","_x9","_x0","_prepareFetchData2","_callee11","_hint$startTimestamp2","_hint$endTimestamp2","_breadcrumb$data2","_breadcrumb$data2$sta","requestBodySize","responseBodySize","captureDetails","_context12","request_body_size","response_body_size","networkDetailAllowUrls","networkDetailDenyUrls","_getRequestInfo","_getResponseInfo","_ref30","networkCaptureBodies","networkRequestHeaders","getHeadersFromOptions","_getBodyString","_getFetchRequestArgBody","bodyStr","_x1","_x10","_x11","_x12","_getResponseInfo2","_callee12","_ref31","networkResponseHeaders","_yield$_parseFetchRes","bodyText","_context13","getAllHeaders","_parseFetchResponseBody","getResponseData","_ref32","_x13","_parseFetchResponseBody2","_callee13","_context14","_tryCloneResponse","_tryGetResponseText","allHeaders","_x14","_getResponseText2","_getResponseText","txt","_callee14","_context15","_captureXhrBreadcrumbToReplay","_callee15","_context16","_prepareXhrData","_hint$startTimestamp","_hint$endTimestamp","_breadcrumb$data","_breadcrumb$data$stat","getAllResponseHeaders","_line$split","getResponseHeaders","_ref33","requestBody","requestWarning","_ref34","responseText","responseType","outerHTML","_parseXhrResponse","_getXhrResponseBody","responseBody","responseWarning","handleNetworkBreadcrumbs","_replay$getOptions2","_isXhrBreadcrumb","_isXhrHint","reqSize","resSize","getResponseHeader","_getBodySize","enrichXhrBreadcrumb","_x15","_x16","_x17","captureXhrBreadcrumbToReplay","_isFetchBreadcrumb","_isFetchHint","enrichFetchBreadcrumb","_x5","_x6","_x7","captureFetchBreadcrumbToReplay","beforeAddNetworkBreadcrumb","handleFetch","handleFetchSpanListener","handleXhr","handleXhrSpanListener","_LAST_BREADCRUMB","addGlobalListeners","newBreadcrumb","isTruncated","normalizedArgs","normalizedArg","normalizeConsoleBreadcrumb","handleScope","handleScopeListener","_getDomTarget","isClick","getDomTarget","handleDom","clickDetector","altKey","metaKey","ctrlKey","shiftKey","handleDomListener","handleHistory","handleHistorySpanListener","includeAfterSendEventHandling","afterSendHandler","isReplayEvent","replay_id","getSessionId","feedbackId","addFeedbackBreadcrumb","__rrweb__","isRrwebError","captureExceptions","isErrorEventSampled","errorSampleRate","shouldSampleForBufferEvent","handleGlobalEventListener","hasHooks","exceptionValue","handleHydrationError","handleBeforeSendEvent","lastTransaction","feedbackEvent","includeReplay","addMemoryEntry","_x18","_addMemoryEntry","_callee16","_context17","memoryEntry","memory","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","getHandleRecordingEmit","hadFirstEvent","_isCheckout","isIncrementalEvent","isIncrementalMouseInteraction","_event$data","updateClickDetectorForRecordingEvent","setInitialState","shouldRecordCanvas","isRecordingCanvas","useCompressionOption","useCompression","blockAllMedia","networkDetailHasUrls","networkRequestHasHeaders","networkResponseHasHeaders","createOptionsEvent","addSettingsEvent","earliestEvent","createReplayEnvelope","replayEvent","recordingData","prepareRecordingData","_ref35","payloadWithSequence","replayHeaders","sequence","prepareReplayEvent","_x19","_prepareReplayEvent","_callee17","_ref36","eventHint","preparedEvent","_ref46","_context18","platform","sendReplayRequest","_x20","_sendReplayRequest","_callee18","_ref37","segment_id","eventContext","preparedRecordingData","baseEvent","rateLimits","_context19","replay_start_timestamp","error_ids","trace_ids","replay_type","cause","TransportStatusCodeError","RateLimitError","_Error2","_Error3","_this19","sendReplay","_x21","_x22","_sendReplay","_callee20","replayData","retryConfig","_context21","_retryCount","_callee19","_context20","THROTTLED","ReplayContainer","_ref38","_this20","recordingOptions","__init5","__init6","_lastActivity","_isPaused","_hasInitializedCoreListeners","_context","initialUrl","_recordingOptions","_debouncedFlush","callbackReturnValue","timerId","maxTimerId","maxWait","invokeFunc","cancelTimers","_flush","debounced","cancel","debounce","flushMinDelay","flushMaxDelay","_throttledAddEvent","maxCount","durationSeconds","counter","isThrottled","_cleanup","wasThrottled","throttle","_this$getOptions","slowClickTimeout","slowClickIgnoreSelectors","_proto16","_canvas","initializeSampling","_this$_options","_initializeSessionForSampling","_initializeRecording","_handleException","_updateUserActivity","startBuffering","startRecording","canvasOptions","_stopRecording","_onMutationHandler","stopRecording","_stop","_callee6","_temp2","_ref39","_ref39$forceFlush","forceFlush","_context7","_removeListeners","force","removeItem","deleteSession","_x23","pause","resume","_checkSession","_sendBufferedReplayOrFlush","_callee7","_temp3","_ref40$continueRecord","continueRecording","activityTime","hasStoppedRecording","_context8","flushImmediate","_updateSessionActivity","_maybeSaveSession","_x24","cbResult","updateUserActivity","conditionalFlush","cancelFlush","urlPath","pathname","_clearContext","_this21","_ref23","customWorkerUrl","workerUrl","Worker","__SENTRY_EXCLUDE_REPLAY_WORKER__","createObjectURL","_loadWorker","createEventBuffer","_addListeners","_refreshSession","_refreshSession2","_callee8","_context9","_x25","_handleVisibilityChange","_handleWindowBlur","_handleWindowFocus","_handleKeyboardEvent","_performanceCleanupCallback","_this22","_doChangeToForegroundTasks","_doChangeToBackgroundTasks","_this23","_this24","_this25","isInputElement","hasModifierKey","isCharacterKey","getKeyboardBreadcrumb","handleKeyboardEvent","_createCustomBreadcrumb","_this26","_addPerformanceEntries","_updateInitialTimestampFromEventBuffer","_popEventContext","_runFlush","_runFlush2","_callee9","_context0","_this27","_ref41","_callee0","_temp4","_ref42$force","tooShort","tooLong","_context1","minReplayDuration","_flushLock","_x26","_this28","mutationLimit","overMutationLimit","mutationBreadcrumbLimit","getOption","selectors","defaultSelectors","deprecatedClassOption","deprecatedSelectorOption","deprecatedSelectors","allSelectors","MEDIA_SELECTORS","DEFAULT_NETWORK_HEADERS","_initialized","Replay$1","_temp5","_ref45","_ref45$flushMinDelay","_ref45$flushMaxDelay","_ref45$minReplayDurat","_ref45$maxReplayDurat","_ref45$stickySession","_ref45$useCompression","_ref45$_experiments","_ref45$maskAllText","_ref45$maskAllInputs","_ref45$blockAllMedia","_ref45$mutationBreadc","_ref45$mutationLimit","_ref45$slowClickTimeo","_ref45$slowClickIgnor","_ref45$networkDetailA","_ref45$networkDetailD","_ref45$networkCapture","_ref45$networkRequest","_ref45$networkRespons","_ref45$mask","mask","_ref45$maskAttributes","maskAttributes","_ref45$unmask","unmask","_ref45$block","block","_ref45$unblock","unblock","_ref45$ignore","ignore","maskFn","privacyOptions","_ref43","getPrivacyOptions","password","_ref44","maskAttribute","_initialOptions","_getMergedNetworkHeaders","_isInitialized","__initStatic","_proto17","_this29","_setup","_initialize","getReplayId","_maybeLoadFromReplayCanvasIntegration","finalOptions","initialOptions","opt","replaysSessionSampleRate","replaysOnErrorSampleRate","loadReplayOptionsFromClient","canvasIntegration","BrowserClient","_BaseClient","names","applySdkMetadata","SENTRY_SDK_SOURCE","_flushOutcomes","captureUserFeedback","createUserFeedbackEnvelopeItem","createUserFeedbackEnvelope","discarded_events","getEventForEnvelopeItem","cachedFetchImpl","makeFetchTransport","nativeFetch","fetchImpl","getNativeFetchImplementation","pendingBodySize","pendingCount","makeRequest","task","$","taskProducer","drain","capturedSetTimeout","makePromiseBuffer","bufferSize","filteredEnvelopeItems","filteredEnvelope","recordEnvelopeLoss","createTransport","requestSize","requestOptions","referrerPolicy","keepalive","fetchOptions","UNKNOWN_FUNCTION","createFrame","chromeRegex","chromeEvalRegex","geckoREgex","geckoEvalRegex","winjsRegex","defaultStackParser","parsers","sortedParsers","skipFirst","lines","cleanedLine","localStack","stripSentryFramesAndReverse","subMatch","_extractSafariExtensi","extractSafariExtensionDetails","_extractSafariExtensi2","isSafariExtension","isSafariWebExtension","dedupeIntegration","previousEvent","currentEvent","currentMessage","previousMessage","_isSameFingerprint","_isSameStacktrace","_isSameMessageEvent","previousException","_getExceptionFromEvent","currentException","_isSameExceptionEvent","currentFrames","_getFramesFromEvent","previousFrames","frameA","frameB","currentFingerprint","previousFingerprint","showReportDialog","_hub$getStackTop","dsnLike","dialogOptions","endpoint","encodedOptions","getReportDialogEndpoint","onLoad","onload","onClose","reportDialogClosedMessageHandler","injectionPoint","makeLogger","severityLevelFromString","CaptureConsole","levels","consoleHandler","Replay","Sentry","createClient","config","_event$user","scrubEmails","showFeedback","getUserData","tracesSampleRate","captureConsole","nameAttr","userData","_app$session","_userData","userId"],"sourceRoot":""}